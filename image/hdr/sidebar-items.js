initSidebarItems({"constant":[["NORUN_MAX_LEN",""],["RUN_MAX_LEN",""],["SIGNATURE","Radiance HDR file signature"],["SIGNATURE_LENGTH",""]],"enum":[["RunOrNot",""]],"fn":[["decode_component",""],["decode_old_rle",""],["limit_string_len",""],["parse_dimensions_line",""],["parse_space_separated_f32",""],["read_byte",""],["read_line_u8",""],["read_raw_file","Helper function for reading raw 3-channel f32 images"],["read_rgbe",""],["read_scanline",""],["rgbe8","Creates ```RGBE8Pixel``` from components"],["rle_compress",""],["split_at_first",""],["to_rgbe8","Converts ```Rgb<f32>``` into ```RGBE8Pixel```"],["write_rgbe8",""]],"mod":[["hdr_decoder",""],["hdr_encoder",""]],"struct":[["HDRAdapter","Adapter to conform to ```ImageDecoder``` trait"],["HDRDecoder","An Radiance HDR decoder"],["HDREncoder","Radiance HDR encoder"],["HDRImageDecoderIterator","Scanline buffered pixel by pixel iterator"],["HDRMetadata","Metadata for Radiance HDR image"],["NorunCombineIterator",""],["RGBE8Pixel","Refer to wikipedia"],["RunIterator",""]],"trait":[["IntoImageError",""]]});