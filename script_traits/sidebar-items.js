initSidebarItems({"constant":[["_IMPL_DESERIALIZE_FOR_AnimationState",""],["_IMPL_DESERIALIZE_FOR_AnimationTickType",""],["_IMPL_DESERIALIZE_FOR_CompositorEvent",""],["_IMPL_DESERIALIZE_FOR_ConstellationControlMsg",""],["_IMPL_DESERIALIZE_FOR_ConstellationMsg",""],["_IMPL_DESERIALIZE_FOR_DocumentState",""],["_IMPL_DESERIALIZE_FOR_IFrameLoadInfo",""],["_IMPL_DESERIALIZE_FOR_IFrameLoadInfoWithData",""],["_IMPL_DESERIALIZE_FOR_IFrameSandboxState",""],["_IMPL_DESERIALIZE_FOR_LayoutControlMsg",""],["_IMPL_DESERIALIZE_FOR_LoadData",""],["_IMPL_DESERIALIZE_FOR_MouseButton",""],["_IMPL_DESERIALIZE_FOR_MouseEventType",""],["_IMPL_DESERIALIZE_FOR_MozBrowserErrorType",""],["_IMPL_DESERIALIZE_FOR_MozBrowserEvent",""],["_IMPL_DESERIALIZE_FOR_NewLayoutInfo",""],["_IMPL_DESERIALIZE_FOR_StackingContextScrollState",""],["_IMPL_DESERIALIZE_FOR_TimerEvent",""],["_IMPL_DESERIALIZE_FOR_TimerEventId",""],["_IMPL_DESERIALIZE_FOR_TimerEventRequest",""],["_IMPL_DESERIALIZE_FOR_TimerSource",""],["_IMPL_DESERIALIZE_FOR_TouchEventType",""],["_IMPL_DESERIALIZE_FOR_TouchId",""],["_IMPL_DESERIALIZE_FOR_TouchpadPressurePhase",""],["_IMPL_DESERIALIZE_FOR_WebDriverCommandMsg",""],["_IMPL_DESERIALIZE_FOR_WindowSizeData",""],["_IMPL_DESERIALIZE_FOR_WindowSizeType",""],["_IMPL_DESERIALIZE_FOR_WorkerGlobalScopeInit",""],["_IMPL_DESERIALIZE_FOR_WorkerScriptLoadOrigin",""],["_IMPL_SERIALIZE_FOR_AnimationState",""],["_IMPL_SERIALIZE_FOR_AnimationTickType",""],["_IMPL_SERIALIZE_FOR_CompositorEvent",""],["_IMPL_SERIALIZE_FOR_ConstellationControlMsg",""],["_IMPL_SERIALIZE_FOR_ConstellationMsg",""],["_IMPL_SERIALIZE_FOR_DocumentState",""],["_IMPL_SERIALIZE_FOR_IFrameLoadInfo",""],["_IMPL_SERIALIZE_FOR_IFrameLoadInfoWithData",""],["_IMPL_SERIALIZE_FOR_IFrameSandboxState",""],["_IMPL_SERIALIZE_FOR_LayoutControlMsg",""],["_IMPL_SERIALIZE_FOR_LoadData",""],["_IMPL_SERIALIZE_FOR_MouseButton",""],["_IMPL_SERIALIZE_FOR_MouseEventType",""],["_IMPL_SERIALIZE_FOR_MozBrowserErrorType",""],["_IMPL_SERIALIZE_FOR_MozBrowserEvent",""],["_IMPL_SERIALIZE_FOR_NewLayoutInfo",""],["_IMPL_SERIALIZE_FOR_StackingContextScrollState",""],["_IMPL_SERIALIZE_FOR_TimerEvent",""],["_IMPL_SERIALIZE_FOR_TimerEventId",""],["_IMPL_SERIALIZE_FOR_TimerEventRequest",""],["_IMPL_SERIALIZE_FOR_TimerSource",""],["_IMPL_SERIALIZE_FOR_TouchEventType",""],["_IMPL_SERIALIZE_FOR_TouchId",""],["_IMPL_SERIALIZE_FOR_TouchpadPressurePhase",""],["_IMPL_SERIALIZE_FOR_WebDriverCommandMsg",""],["_IMPL_SERIALIZE_FOR_WindowSizeData",""],["_IMPL_SERIALIZE_FOR_WindowSizeType",""],["_IMPL_SERIALIZE_FOR_WorkerGlobalScopeInit",""],["_IMPL_SERIALIZE_FOR_WorkerScriptLoadOrigin",""]],"enum":[["AnimationState","For a given pipeline, whether any animations are currently running and any animation callbacks are queued"],["AnimationTickType","Specifies whether the script or layout thread needs to be ticked for animation."],["CompositorEvent","Events from the compositor that the script thread needs to know about"],["ConstellationControlMsg","Messages sent from the constellation or layout to the script thread."],["ConstellationMsg","Messages to the constellation."],["DocumentState","Used to determine if a script has any pending asynchronous activity."],["EventResult","Whether a DOM event was prevented by web content"],["IFrameSandboxState","Whether the sandbox attribute is present for an iframe element"],["LayoutControlMsg","Messages sent to the layout thread from the constellation and/or compositor."],["LayoutMsg","Messages from the layout to the constellation."],["LogEntry","A log entry reported to the constellation We don't report all log entries, just serious ones. We need a separate type for this because `LogLevel` isn't serializable."],["Milliseconds","Unit of measurement."],["MouseButton","The mouse button involved in the event."],["MouseEventType","The types of mouse events"],["MozBrowserErrorType","The different types of Browser error events"],["MozBrowserEvent","The events fired in a Browser API context (`<iframe mozbrowser>`)"],["Nanoseconds","Unit of measurement."],["SWManagerMsg","Messages outgoing from the Service Worker Manager thread to constellation"],["ScriptMsg","Messages from the script to the constellation."],["ServiceWorkerMsg","Messages sent to Service Worker Manager thread"],["TimerSource","Describes the thread that requested the TimerEvent."],["TouchEventType","The type of input represented by a multi-touch event."],["TouchpadPressurePhase","Touchpad pressure phase for `TouchpadPressureEvent`."],["WebDriverCommandMsg","Messages to the constellation originating from the WebDriver server."],["WindowSizeType","The type of window size change."]],"fn":[["precise_time_ms","Returns the duration since an unspecified epoch measured in ms."],["precise_time_ns","Returns the duration since an unspecified epoch measured in ns."]],"mod":[["script_msg",""],["webdriver_msg",""]],"struct":[["DOMMessage","Message that gets passed to service worker scope on postMessage"],["IFrameLoadInfo","Specifies the information required to load an iframe."],["IFrameLoadInfoWithData","Specifies the information required to load a URL in an iframe."],["InitialScriptState","Data needed to construct a script thread."],["LoadData","can be passed to `LoadUrl` to load a page with GET/POST parameters or headers"],["NewLayoutInfo","The initial data required to create a new layout attached to an existing script thread."],["SWManagerSenders","Channels to allow service worker manager to communicate with constellation and resource thread"],["ScopeThings","Entities required to spawn service workers"],["StackingContextScrollState","The scroll state of a stacking context."],["TimerEvent","Notifies the script thread to fire due timers. `TimerSource` must be `FromWindow` when dispatched to `ScriptThread` and must be `FromWorker` when dispatched to a `DedicatedGlobalWorkerScope`"],["TimerEventId","The id to be used for a `TimerEvent` is defined by the corresponding `TimerEventRequest`."],["TimerEventRequest","Requests a TimerEvent-Message be sent after the given duration."],["TouchId","An opaque identifier for a touch point."],["UntrustedNodeAddress","The address of a node. Layout sends these back. They must be validated via `from_untrusted_node_address` before they can be used, because we do not trust layout."],["WindowSizeData","Data about the window size."],["WorkerGlobalScopeInit","Resources required by workerglobalscopes"],["WorkerScriptLoadOrigin","Common entities representing a network load origin"]],"trait":[["ScriptThreadFactory","This trait allows creating a `ScriptThread` without depending on the `script` crate."]],"type":[["MsDuration","Amount of milliseconds."],["NsDuration","Amount of nanoseconds."]]});