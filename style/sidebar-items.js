initSidebarItems({"fn":[["arc_ptr_eq","Returns whether the two arguments point to the same value."],["serialize_comma_separated_list",""]],"macro":[["css_properties_accessors",""]],"mod":[["animation","CSS transitions and animations."],["atomic_refcell",""],["attr","Parsed representations of [DOM attributes][attr]."],["bezier","Parametric BÃ©zier curves."],["cache","Two simple cache data structures."],["cascade_info",""],["computed_values","Types for [computed values][computed]."],["context","The context within which style is calculated."],["custom_properties","Support for [custom properties for cascading variables][custom]."],["data","Per-node data used in style calculation."],["dom","Types and traits used to access the DOM from style calculation."],["element_state","States elements can be in."],["error_reporting","Types used to report parsing errors."],["font_face","The [`@font-face`][ff] at-rule."],["keyframes",""],["logical_geometry","Geometry in flow-relative space."],["matching","High-level interface to CSS selector matching."],["media_queries","[Media queries][mq]."],["owning_handle",""],["parallel","Implements parallel traversal over the DOM tree."],["parser","The context within which CSS code is parsed."],["properties","The CSS properties supported by the style system."],["refcell","A fork of std::cell::RefCell that makes `as_unsafe_cell` usable on stable Rust."],["restyle_hints","Restyle hints: an optimization to avoid unnecessarily matching selectors."],["selector_impl","The pseudo-classes and pseudo-elements supported by the style system."],["selector_matching","Selector matching."],["sequential","Implements sequential traversal over the DOM tree."],["servo_selector_impl",""],["sink",""],["str",""],["stylesheets","Style sheets and their CSS rules."],["thread_state","Supports dynamic assertions in debug builds about what sort of thread is running and what state it's in."],["tid",""],["timer",""],["traversal","Traversing the DOM tree; the bloom filter."],["values","Common [values][values] used in CSS."],["viewport","The [`@viewport`][at] at-rule and [`meta`][meta] element."],["workqueue","A work queue for scheduling units of work across threads in a fork-join fashion."]],"type":[["Atom",""],["LocalName",""],["Namespace",""],["Prefix",""]]});