initSidebarItems({"fn":[["clear_descendant_data",""],["compute_style",""],["preprocess_children",""],["put_thread_local_bloom_filter",""],["recalc_style_at","Calculates the style for a single node."],["relations_are_shareable","Determines the amount of relations where we're going to share style."],["remove_from_bloom_filter","Remove `element` from the bloom filter if it's the last element we inserted."],["style_element_in_display_none_subtree","Handles lazy resolution of style in display:none subtrees. See the comment at the callsite in query.rs."],["take_thread_local_bloom_filter","Returns the thread local bloom filter."]],"static":[["STYLE_BLOOM",""],["STYLE_SHARING_CACHE_HITS","Style sharing candidate cache stats. These are only used when `-Z style-sharing-stats` is given."],["STYLE_SHARING_CACHE_MISSES",""]],"struct":[["LazyRestyleData","Various steps in the child preparation algorithm above may cause us to lazily instantiate the ElementData on the child. Encapsulate that logic into a convenient abstraction."],["PerLevelTraversalData",""]],"trait":[["DomTraversalContext",""]],"type":[["Generation","Every time we do another layout, the old bloom filters are invalid. This is detected by ticking a generation number every layout."]]});