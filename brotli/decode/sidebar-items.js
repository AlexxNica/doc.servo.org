initSidebarItems({"constant":[["CODE_LENGTH_CODES",""],["HUFFMAN_TABLE_BITS",""],["HUFFMAN_TABLE_MASK",""],["NUM_DISTANCE_SHORT_CODES",""],["kCodeLengthCodeOrder",""],["kCodeLengthPrefixLength",""],["kCodeLengthPrefixValue",""],["kCodeLengthRepeatCode",""],["kDefaultCodeLength",""],["kDistanceContextBits",""],["kNumBlockLengthCodes",""],["kNumInsertAndCopyCodes",""],["kNumLiteralCodes",""]],"enum":[["BrotliResult",""]],"fn":[["BROTLI_FAILURE",""],["BrotliAllocateRingBuffer",""],["BrotliDecompressStream",""],["CheckInputAmount",""],["CopyUncompressedBlockToOutput",""],["DecodeBlockTypeAndLength",""],["DecodeCommandBlockSwitch",""],["DecodeCommandBlockSwitchInternal",""],["DecodeContextMap",""],["DecodeContextMapInner",""],["DecodeDistanceBlockSwitch",""],["DecodeDistanceBlockSwitchInternal",""],["DecodeLiteralBlockSwitchInternal",""],["DecodeMetaBlockLength",""],["DecodeSymbol",""],["DecodeVarLenUint8",""],["DecodeWindowBits",""],["HuffmanTreeGroupDecode",""],["InverseMoveToFrontTransform",""],["Log2Floor",""],["PreloadSymbol",""],["ProcessCommands",""],["ProcessCommandsInternal",""],["ProcessRepeatedCodeLength",""],["ProcessSingleCodeLength",""],["ReadBlockLength",""],["ReadCodeLengthCodeLengths",""],["ReadCommandInternal",""],["ReadContextModes",""],["ReadDistanceInternal",""],["ReadHuffmanCode",""],["ReadPreloadedSymbol",""],["ReadSimpleHuffmanSymbols",""],["ReadSymbol",""],["ReadSymbolCodeLengths",""],["SafeDecodeCommandBlockSwitch",""],["SafeDecodeDistanceBlockSwitch",""],["SafeDecodeSymbol",""],["SafeProcessCommands",""],["SafeReadBits",""],["SafeReadBlockLengthFromIndex",""],["SafeReadBlockLengthIndex",""],["SafeReadSymbol",""],["SafeReadSymbolCodeLengths",""],["TakeDistanceFromRingBuffer",""],["WarmupBitReader",""],["WriteRingBuffer",""],["bzero",""],["mark_unlikely",""],["memcpy_within_slice",""],["memmove16",""]],"struct":[["AllocatedStackMemory",""],["BrotliState",""],["HuffmanCode",""],["HuffmanTreeGroup",""],["StackAllocator",""]],"trait":[["Allocator",""],["SliceWrapper",""],["SliceWrapperMut",""]]});