(function() {var implementors = {};
implementors["arrayvec"] = [];
implementors["brotli"] = ["impl&lt;R:&nbsp;<a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a>, BufferType:&nbsp;<a class="trait" href="brotli/decode/trait.SliceWrapperMut.html" title="trait brotli::decode::SliceWrapperMut">SliceWrapperMut</a>&lt;<a class="primitive" href="std/primitive.u8.html">u8</a>&gt;, AllocU8:&nbsp;<a class="trait" href="brotli/decode/trait.Allocator.html" title="trait brotli::decode::Allocator">Allocator</a>&lt;<a class="primitive" href="std/primitive.u8.html">u8</a>&gt;, AllocU32:&nbsp;<a class="trait" href="brotli/decode/trait.Allocator.html" title="trait brotli::decode::Allocator">Allocator</a>&lt;<a class="primitive" href="std/primitive.u32.html">u32</a>&gt;, AllocHC:&nbsp;<a class="trait" href="brotli/decode/trait.Allocator.html" title="trait brotli::decode::Allocator">Allocator</a>&lt;<a class="struct" href="brotli/struct.HuffmanCode.html" title="struct brotli::HuffmanCode">HuffmanCode</a>&gt;&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="brotli/struct.DecompressorCustomAlloc.html" title="struct brotli::DecompressorCustomAlloc">DecompressorCustomAlloc</a>&lt;R, BufferType, AllocU8, AllocU32, AllocHC&gt;","impl&lt;R:&nbsp;<a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a>&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="brotli/struct.Decompressor.html" title="struct brotli::Decompressor">Decompressor</a>&lt;R&gt;",];
implementors["bytes"] = ["impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="bytes/struct.RingBuf.html" title="struct bytes::RingBuf">RingBuf</a>","impl&lt;T:&nbsp;<a class="trait" href="bytes/buf/trait.Buf.html" title="trait bytes::buf::Buf">Buf</a>&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="bytes/struct.Take.html" title="struct bytes::Take">Take</a>&lt;T&gt;","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="bytes/struct.ByteBuf.html" title="struct bytes::ByteBuf">ByteBuf</a>","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="bytes/struct.ROByteBuf.html" title="struct bytes::ROByteBuf">ROByteBuf</a>","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="bytes/struct.RopeBuf.html" title="struct bytes::RopeBuf">RopeBuf</a>","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="alloc/boxed/struct.Box.html" title="struct alloc::boxed::Box">Box</a>&lt;<a class="trait" href="bytes/buf/trait.Buf.html" title="trait bytes::buf::Buf">Buf</a> + 'static&gt;",];
implementors["cssparser"] = [];
implementors["enum_primitive"] = [];
implementors["flate2"] = ["impl&lt;R:&nbsp;<a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a>&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="flate2/bufreader/struct.BufReader.html" title="struct flate2::bufreader::BufReader">BufReader</a>&lt;R&gt;","impl&lt;R:&nbsp;<a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a>&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="flate2/crc/struct.CrcReader.html" title="struct flate2::crc::CrcReader">CrcReader</a>&lt;R&gt;","impl&lt;R:&nbsp;<a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a>&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="flate2/deflate/struct.EncoderReader.html" title="struct flate2::deflate::EncoderReader">EncoderReader</a>&lt;R&gt;","impl&lt;R:&nbsp;<a class="trait" href="std/io/trait.BufRead.html" title="trait std::io::BufRead">BufRead</a>&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="flate2/deflate/struct.EncoderReaderBuf.html" title="struct flate2::deflate::EncoderReaderBuf">EncoderReaderBuf</a>&lt;R&gt;","impl&lt;R:&nbsp;<a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a>&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="flate2/deflate/struct.DecoderReader.html" title="struct flate2::deflate::DecoderReader">DecoderReader</a>&lt;R&gt;","impl&lt;R:&nbsp;<a class="trait" href="std/io/trait.BufRead.html" title="trait std::io::BufRead">BufRead</a>&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="flate2/deflate/struct.DecoderReaderBuf.html" title="struct flate2::deflate::DecoderReaderBuf">DecoderReaderBuf</a>&lt;R&gt;","impl&lt;R:&nbsp;<a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a>&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="flate2/gz/struct.EncoderReader.html" title="struct flate2::gz::EncoderReader">EncoderReader</a>&lt;R&gt;","impl&lt;R:&nbsp;<a class="trait" href="std/io/trait.BufRead.html" title="trait std::io::BufRead">BufRead</a>&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="flate2/gz/struct.EncoderReaderBuf.html" title="struct flate2::gz::EncoderReaderBuf">EncoderReaderBuf</a>&lt;R&gt;","impl&lt;R:&nbsp;<a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a>&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="flate2/gz/struct.DecoderReader.html" title="struct flate2::gz::DecoderReader">DecoderReader</a>&lt;R&gt;","impl&lt;R:&nbsp;<a class="trait" href="std/io/trait.BufRead.html" title="trait std::io::BufRead">BufRead</a>&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="flate2/gz/struct.DecoderReaderBuf.html" title="struct flate2::gz::DecoderReaderBuf">DecoderReaderBuf</a>&lt;R&gt;","impl&lt;R:&nbsp;<a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a>&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="flate2/zlib/struct.EncoderReader.html" title="struct flate2::zlib::EncoderReader">EncoderReader</a>&lt;R&gt;","impl&lt;R:&nbsp;<a class="trait" href="std/io/trait.BufRead.html" title="trait std::io::BufRead">BufRead</a>&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="flate2/zlib/struct.EncoderReaderBuf.html" title="struct flate2::zlib::EncoderReaderBuf">EncoderReaderBuf</a>&lt;R&gt;","impl&lt;R:&nbsp;<a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a>&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="flate2/zlib/struct.DecoderReader.html" title="struct flate2::zlib::DecoderReader">DecoderReader</a>&lt;R&gt;","impl&lt;R:&nbsp;<a class="trait" href="std/io/trait.BufRead.html" title="trait std::io::BufRead">BufRead</a>&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="flate2/zlib/struct.DecoderReaderBuf.html" title="struct flate2::zlib::DecoderReaderBuf">DecoderReaderBuf</a>&lt;R&gt;",];
implementors["gfx"] = ["impl&lt;S&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="hyper/client/pool/struct.PooledStream.html" title="struct hyper::client::pool::PooledStream">PooledStream</a>&lt;S&gt; <span class="where fmt-newline">where S: <a class="trait" href="hyper/net/trait.NetworkStream.html" title="trait hyper::net::NetworkStream">NetworkStream</a></span>","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="hyper/client/response/struct.Response.html" title="struct hyper::client::response::Response">Response</a>","impl&lt;'a&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="enum" href="hyper/client/enum.Body.html" title="enum hyper::client::Body">Body</a>&lt;'a&gt;","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="hyper/http/h1/struct.Http11Message.html" title="struct hyper::http::h1::Http11Message">Http11Message</a>","impl&lt;R&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="enum" href="hyper/http/h1/enum.HttpReader.html" title="enum hyper::http::h1::HttpReader">HttpReader</a>&lt;R&gt; <span class="where fmt-newline">where R: <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a></span>","impl&lt;S&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="hyper/http/h2/struct.Http2Message.html" title="struct hyper::http::h2::Http2Message">Http2Message</a>&lt;S&gt; <span class="where fmt-newline">where S: <a class="trait" href="hyper/http/h2/trait.CloneableStream.html" title="trait hyper::http::h2::CloneableStream">CloneableStream</a></span>","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="hyper/net/struct.HttpStream.html" title="struct hyper::net::HttpStream">HttpStream</a>","impl&lt;S&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="enum" href="hyper/net/enum.HttpsStream.html" title="enum hyper::net::HttpsStream">HttpsStream</a>&lt;S&gt; <span class="where fmt-newline">where S: <a class="trait" href="hyper/net/trait.NetworkStream.html" title="trait hyper::net::NetworkStream">NetworkStream</a></span>","impl&lt;'a, 'b&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="hyper/server/request/struct.Request.html" title="struct hyper::server::request::Request">Request</a>&lt;'a, 'b&gt;","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="enum" href="websocket/stream/enum.WebSocketStream.html" title="enum websocket::stream::WebSocketStream">WebSocketStream</a>","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="openssl/bio/struct.MemBio.html" title="struct openssl::bio::MemBio">MemBio</a>","impl&lt;S&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="openssl/ssl/struct.SslStream.html" title="struct openssl::ssl::SslStream">SslStream</a>&lt;S&gt; <span class="where fmt-newline">where S: <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> + <a class="trait" href="std/io/trait.Write.html" title="trait std::io::Write">Write</a></span>","impl&lt;S&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="enum" href="openssl/ssl/enum.MaybeSslStream.html" title="enum openssl::ssl::MaybeSslStream">MaybeSslStream</a>&lt;S&gt; <span class="where fmt-newline">where S: <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> + <a class="trait" href="std/io/trait.Write.html" title="trait std::io::Write">Write</a></span>","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="mio/net/tcp/struct.TcpStream.html" title="struct mio::net::tcp::TcpStream">TcpStream</a>","impl&lt;'a&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for &amp;'a <a class="struct" href="mio/net/tcp/struct.TcpStream.html" title="struct mio::net::tcp::TcpStream">TcpStream</a>","impl&lt;'a&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for &amp;'a Io","impl&lt;'a&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for &amp;'a TcpStream","impl&lt;'a&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for &amp;'a PipeReader",];
implementors["gleam"] = [];
implementors["glutin"] = [];
implementors["glx"] = [];
implementors["heartbeats_simple"] = [];
implementors["html5ever"] = [];
implementors["hyper"] = ["impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="openssl/bio/struct.MemBio.html" title="struct openssl::bio::MemBio">MemBio</a>","impl&lt;S&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="openssl/ssl/struct.SslStream.html" title="struct openssl::ssl::SslStream">SslStream</a>&lt;S&gt; <span class="where fmt-newline">where S: <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> + <a class="trait" href="std/io/trait.Write.html" title="trait std::io::Write">Write</a></span>","impl&lt;S&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="enum" href="openssl/ssl/enum.MaybeSslStream.html" title="enum openssl::ssl::MaybeSslStream">MaybeSslStream</a>&lt;S&gt; <span class="where fmt-newline">where S: <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> + <a class="trait" href="std/io/trait.Write.html" title="trait std::io::Write">Write</a></span>","impl&lt;R:&nbsp;<a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a>&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="hyper/buffer/struct.BufReader.html" title="struct hyper::buffer::BufReader">BufReader</a>&lt;R&gt;","impl&lt;T1:&nbsp;<a class="trait" href="hyper/net/trait.NetworkStream.html" title="trait hyper::net::NetworkStream">NetworkStream</a>, T2:&nbsp;<a class="trait" href="hyper/net/trait.NetworkStream.html" title="trait hyper::net::NetworkStream">NetworkStream</a>&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="enum" href="hyper/client/proxy/enum.Proxied.html" title="enum hyper::client::proxy::Proxied">Proxied</a>&lt;T1, T2&gt;","impl&lt;S:&nbsp;<a class="trait" href="hyper/net/trait.NetworkStream.html" title="trait hyper::net::NetworkStream">NetworkStream</a>&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="hyper/client/pool/struct.PooledStream.html" title="struct hyper::client::pool::PooledStream">PooledStream</a>&lt;S&gt;","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="hyper/client/response/struct.Response.html" title="struct hyper::client::response::Response">Response</a>","impl&lt;'a&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="enum" href="hyper/client/enum.Body.html" title="enum hyper::client::Body">Body</a>&lt;'a&gt;","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="hyper/http/h1/struct.Http11Message.html" title="struct hyper::http::h1::Http11Message">Http11Message</a>","impl&lt;R:&nbsp;<a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a>&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="enum" href="hyper/http/h1/enum.HttpReader.html" title="enum hyper::http::h1::HttpReader">HttpReader</a>&lt;R&gt;","impl&lt;S&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="hyper/http/h2/struct.Http2Stream.html" title="struct hyper::http::h2::Http2Stream">Http2Stream</a>&lt;S&gt; <span class="where fmt-newline">where S: <a class="trait" href="hyper/http/h2/trait.CloneableStream.html" title="trait hyper::http::h2::CloneableStream">CloneableStream</a></span>","impl&lt;S&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="hyper/http/h2/struct.Http2Message.html" title="struct hyper::http::h2::Http2Message">Http2Message</a>&lt;S&gt; <span class="where fmt-newline">where S: <a class="trait" href="hyper/http/h2/trait.CloneableStream.html" title="trait hyper::http::h2::CloneableStream">CloneableStream</a></span>","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="hyper/net/struct.HttpStream.html" title="struct hyper::net::HttpStream">HttpStream</a>","impl&lt;S:&nbsp;<a class="trait" href="hyper/net/trait.NetworkStream.html" title="trait hyper::net::NetworkStream">NetworkStream</a>&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="enum" href="hyper/net/enum.HttpsStream.html" title="enum hyper::net::HttpsStream">HttpsStream</a>&lt;S&gt;","impl&lt;'a, 'b&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="hyper/server/request/struct.Request.html" title="struct hyper::server::request::Request">Request</a>&lt;'a, 'b&gt;",];
implementors["image"] = ["impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="image/tiff/decoder/stream/struct.LZWReader.html" title="struct image::tiff::decoder::stream::LZWReader">LZWReader</a>","impl&lt;R:&nbsp;<a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> + <a class="trait" href="std/io/trait.Seek.html" title="trait std::io::Seek">Seek</a>&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="image/tiff/decoder/stream/struct.SmartReader.html" title="struct image::tiff::decoder::stream::SmartReader">SmartReader</a>&lt;R&gt;","impl&lt;R:&nbsp;<a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a>&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="image/utils/bitstream/struct.LsbReader.html" title="struct image::utils::bitstream::LsbReader">LsbReader</a>&lt;R&gt;","impl&lt;R:&nbsp;<a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a>&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="image/utils/bitstream/struct.MsbReader.html" title="struct image::utils::bitstream::MsbReader">MsbReader</a>&lt;R&gt;",];
implementors["immeta"] = ["impl&lt;'a, R:&nbsp;<a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a>&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="immeta/common/riff/struct.Counter.html" title="struct immeta::common::riff::Counter">Counter</a>&lt;'a, R&gt;",];
implementors["ipc_channel"] = ["impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="mio/net/tcp/struct.TcpStream.html" title="struct mio::net::tcp::TcpStream">TcpStream</a>","impl&lt;'a&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for &amp;'a <a class="struct" href="mio/net/tcp/struct.TcpStream.html" title="struct mio::net::tcp::TcpStream">TcpStream</a>","impl&lt;'a&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for &amp;'a Io","impl&lt;'a&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for &amp;'a TcpStream","impl&lt;'a&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for &amp;'a PipeReader",];
implementors["layout_thread"] = ["impl&lt;S&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="hyper/client/pool/struct.PooledStream.html" title="struct hyper::client::pool::PooledStream">PooledStream</a>&lt;S&gt; <span class="where fmt-newline">where S: <a class="trait" href="hyper/net/trait.NetworkStream.html" title="trait hyper::net::NetworkStream">NetworkStream</a></span>","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="hyper/client/response/struct.Response.html" title="struct hyper::client::response::Response">Response</a>","impl&lt;'a&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="enum" href="hyper/client/enum.Body.html" title="enum hyper::client::Body">Body</a>&lt;'a&gt;","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="hyper/http/h1/struct.Http11Message.html" title="struct hyper::http::h1::Http11Message">Http11Message</a>","impl&lt;R&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="enum" href="hyper/http/h1/enum.HttpReader.html" title="enum hyper::http::h1::HttpReader">HttpReader</a>&lt;R&gt; <span class="where fmt-newline">where R: <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a></span>","impl&lt;S&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="hyper/http/h2/struct.Http2Message.html" title="struct hyper::http::h2::Http2Message">Http2Message</a>&lt;S&gt; <span class="where fmt-newline">where S: <a class="trait" href="hyper/http/h2/trait.CloneableStream.html" title="trait hyper::http::h2::CloneableStream">CloneableStream</a></span>","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="hyper/net/struct.HttpStream.html" title="struct hyper::net::HttpStream">HttpStream</a>","impl&lt;S&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="enum" href="hyper/net/enum.HttpsStream.html" title="enum hyper::net::HttpsStream">HttpsStream</a>&lt;S&gt; <span class="where fmt-newline">where S: <a class="trait" href="hyper/net/trait.NetworkStream.html" title="trait hyper::net::NetworkStream">NetworkStream</a></span>","impl&lt;'a, 'b&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="hyper/server/request/struct.Request.html" title="struct hyper::server::request::Request">Request</a>&lt;'a, 'b&gt;","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="enum" href="websocket/stream/enum.WebSocketStream.html" title="enum websocket::stream::WebSocketStream">WebSocketStream</a>","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="openssl/bio/struct.MemBio.html" title="struct openssl::bio::MemBio">MemBio</a>","impl&lt;S&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="openssl/ssl/struct.SslStream.html" title="struct openssl::ssl::SslStream">SslStream</a>&lt;S&gt; <span class="where fmt-newline">where S: <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> + <a class="trait" href="std/io/trait.Write.html" title="trait std::io::Write">Write</a></span>","impl&lt;S&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="enum" href="openssl/ssl/enum.MaybeSslStream.html" title="enum openssl::ssl::MaybeSslStream">MaybeSslStream</a>&lt;S&gt; <span class="where fmt-newline">where S: <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> + <a class="trait" href="std/io/trait.Write.html" title="trait std::io::Write">Write</a></span>","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="mio/net/tcp/struct.TcpStream.html" title="struct mio::net::tcp::TcpStream">TcpStream</a>","impl&lt;'a&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for &amp;'a <a class="struct" href="mio/net/tcp/struct.TcpStream.html" title="struct mio::net::tcp::TcpStream">TcpStream</a>","impl&lt;'a&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for &amp;'a Io","impl&lt;'a&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for &amp;'a TcpStream","impl&lt;'a&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for &amp;'a PipeReader",];
implementors["lazy_static"] = [];
implementors["libc"] = [];
implementors["libloading"] = [];
implementors["mime_guess"] = [];
implementors["mp4parse"] = ["impl&lt;'a, T:&nbsp;<a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a>&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="mp4parse/struct.BMFFBox.html" title="struct mp4parse::BMFFBox">BMFFBox</a>&lt;'a, T&gt;",];
implementors["net"] = ["impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="net/http_loader/struct.WrappedHttpResponse.html" title="struct net::http_loader::WrappedHttpResponse">WrappedHttpResponse</a>","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="net/http_loader/struct.StreamedResponse.html" title="struct net::http_loader::StreamedResponse">StreamedResponse</a>",];
implementors["net_traits"] = ["impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="enum" href="websocket/stream/enum.WebSocketStream.html" title="enum websocket::stream::WebSocketStream">WebSocketStream</a>","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="mio/net/tcp/struct.TcpStream.html" title="struct mio::net::tcp::TcpStream">TcpStream</a>","impl&lt;'a&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for &amp;'a <a class="struct" href="mio/net/tcp/struct.TcpStream.html" title="struct mio::net::tcp::TcpStream">TcpStream</a>","impl&lt;'a&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for &amp;'a Io","impl&lt;'a&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for &amp;'a TcpStream","impl&lt;'a&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for &amp;'a PipeReader","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="openssl/bio/struct.MemBio.html" title="struct openssl::bio::MemBio">MemBio</a>","impl&lt;S&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="openssl/ssl/struct.SslStream.html" title="struct openssl::ssl::SslStream">SslStream</a>&lt;S&gt; <span class="where fmt-newline">where S: <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> + <a class="trait" href="std/io/trait.Write.html" title="trait std::io::Write">Write</a></span>","impl&lt;S&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="enum" href="openssl/ssl/enum.MaybeSslStream.html" title="enum openssl::ssl::MaybeSslStream">MaybeSslStream</a>&lt;S&gt; <span class="where fmt-newline">where S: <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> + <a class="trait" href="std/io/trait.Write.html" title="trait std::io::Write">Write</a></span>","impl&lt;S&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="hyper/client/pool/struct.PooledStream.html" title="struct hyper::client::pool::PooledStream">PooledStream</a>&lt;S&gt; <span class="where fmt-newline">where S: <a class="trait" href="hyper/net/trait.NetworkStream.html" title="trait hyper::net::NetworkStream">NetworkStream</a></span>","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="hyper/client/response/struct.Response.html" title="struct hyper::client::response::Response">Response</a>","impl&lt;'a&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="enum" href="hyper/client/enum.Body.html" title="enum hyper::client::Body">Body</a>&lt;'a&gt;","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="hyper/http/h1/struct.Http11Message.html" title="struct hyper::http::h1::Http11Message">Http11Message</a>","impl&lt;R&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="enum" href="hyper/http/h1/enum.HttpReader.html" title="enum hyper::http::h1::HttpReader">HttpReader</a>&lt;R&gt; <span class="where fmt-newline">where R: <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a></span>","impl&lt;S&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="hyper/http/h2/struct.Http2Message.html" title="struct hyper::http::h2::Http2Message">Http2Message</a>&lt;S&gt; <span class="where fmt-newline">where S: <a class="trait" href="hyper/http/h2/trait.CloneableStream.html" title="trait hyper::http::h2::CloneableStream">CloneableStream</a></span>","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="hyper/net/struct.HttpStream.html" title="struct hyper::net::HttpStream">HttpStream</a>","impl&lt;S&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="enum" href="hyper/net/enum.HttpsStream.html" title="enum hyper::net::HttpsStream">HttpsStream</a>&lt;S&gt; <span class="where fmt-newline">where S: <a class="trait" href="hyper/net/trait.NetworkStream.html" title="trait hyper::net::NetworkStream">NetworkStream</a></span>","impl&lt;'a, 'b&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="hyper/server/request/struct.Request.html" title="struct hyper::server::request::Request">Request</a>&lt;'a, 'b&gt;",];
implementors["offscreen_gl_context"] = [];
implementors["openssl"] = ["impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="openssl/bio/struct.MemBio.html" title="struct openssl::bio::MemBio">MemBio</a>","impl&lt;S:&nbsp;<a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> + <a class="trait" href="std/io/trait.Write.html" title="trait std::io::Write">Write</a>&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="openssl/ssl/struct.SslStream.html" title="struct openssl::ssl::SslStream">SslStream</a>&lt;S&gt;","impl&lt;S&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="enum" href="openssl/ssl/enum.MaybeSslStream.html" title="enum openssl::ssl::MaybeSslStream">MaybeSslStream</a>&lt;S&gt; <span class="where fmt-newline">where S: <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> + <a class="trait" href="std/io/trait.Write.html" title="trait std::io::Write">Write</a></span>",];
implementors["phf"] = [];
implementors["regex_syntax"] = [];
implementors["script"] = ["impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="mio/net/tcp/struct.TcpStream.html" title="struct mio::net::tcp::TcpStream">TcpStream</a>","impl&lt;'a&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for &amp;'a <a class="struct" href="mio/net/tcp/struct.TcpStream.html" title="struct mio::net::tcp::TcpStream">TcpStream</a>","impl&lt;'a&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for &amp;'a Io","impl&lt;'a&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for &amp;'a TcpStream","impl&lt;'a&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for &amp;'a PipeReader","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="enum" href="websocket/stream/enum.WebSocketStream.html" title="enum websocket::stream::WebSocketStream">WebSocketStream</a>","impl&lt;S&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="hyper/client/pool/struct.PooledStream.html" title="struct hyper::client::pool::PooledStream">PooledStream</a>&lt;S&gt; <span class="where fmt-newline">where S: <a class="trait" href="hyper/net/trait.NetworkStream.html" title="trait hyper::net::NetworkStream">NetworkStream</a></span>","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="hyper/client/response/struct.Response.html" title="struct hyper::client::response::Response">Response</a>","impl&lt;'a&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="enum" href="hyper/client/enum.Body.html" title="enum hyper::client::Body">Body</a>&lt;'a&gt;","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="hyper/http/h1/struct.Http11Message.html" title="struct hyper::http::h1::Http11Message">Http11Message</a>","impl&lt;R&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="enum" href="hyper/http/h1/enum.HttpReader.html" title="enum hyper::http::h1::HttpReader">HttpReader</a>&lt;R&gt; <span class="where fmt-newline">where R: <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a></span>","impl&lt;S&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="hyper/http/h2/struct.Http2Message.html" title="struct hyper::http::h2::Http2Message">Http2Message</a>&lt;S&gt; <span class="where fmt-newline">where S: <a class="trait" href="hyper/http/h2/trait.CloneableStream.html" title="trait hyper::http::h2::CloneableStream">CloneableStream</a></span>","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="hyper/net/struct.HttpStream.html" title="struct hyper::net::HttpStream">HttpStream</a>","impl&lt;S&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="enum" href="hyper/net/enum.HttpsStream.html" title="enum hyper::net::HttpsStream">HttpsStream</a>&lt;S&gt; <span class="where fmt-newline">where S: <a class="trait" href="hyper/net/trait.NetworkStream.html" title="trait hyper::net::NetworkStream">NetworkStream</a></span>","impl&lt;'a, 'b&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="hyper/server/request/struct.Request.html" title="struct hyper::server::request::Request">Request</a>&lt;'a, 'b&gt;","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="openssl/bio/struct.MemBio.html" title="struct openssl::bio::MemBio">MemBio</a>","impl&lt;S&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="openssl/ssl/struct.SslStream.html" title="struct openssl::ssl::SslStream">SslStream</a>&lt;S&gt; <span class="where fmt-newline">where S: <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> + <a class="trait" href="std/io/trait.Write.html" title="trait std::io::Write">Write</a></span>","impl&lt;S&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="enum" href="openssl/ssl/enum.MaybeSslStream.html" title="enum openssl::ssl::MaybeSslStream">MaybeSslStream</a>&lt;S&gt; <span class="where fmt-newline">where S: <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> + <a class="trait" href="std/io/trait.Write.html" title="trait std::io::Write">Write</a></span>",];
implementors["serde"] = [];
implementors["servo"] = ["impl&lt;R, BufferType, AllocU8, AllocU32, AllocHC&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="brotli/struct.DecompressorCustomAlloc.html" title="struct brotli::DecompressorCustomAlloc">DecompressorCustomAlloc</a>&lt;R, BufferType, AllocU8, AllocU32, AllocHC&gt; <span class="where fmt-newline">where AllocHC: <a class="trait" href="alloc_no_stdlib/stack_allocator/trait.Allocator.html" title="trait alloc_no_stdlib::stack_allocator::Allocator">Allocator</a>&lt;<a class="struct" href="brotli/huffman/struct.HuffmanCode.html" title="struct brotli::huffman::HuffmanCode">HuffmanCode</a>&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AllocU32: <a class="trait" href="alloc_no_stdlib/stack_allocator/trait.Allocator.html" title="trait alloc_no_stdlib::stack_allocator::Allocator">Allocator</a>&lt;<a class="primitive" href="std/primitive.u32.html">u32</a>&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AllocU8: <a class="trait" href="alloc_no_stdlib/stack_allocator/trait.Allocator.html" title="trait alloc_no_stdlib::stack_allocator::Allocator">Allocator</a>&lt;<a class="primitive" href="std/primitive.u8.html">u8</a>&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BufferType: <a class="trait" href="alloc_no_stdlib/allocated_memory/trait.SliceWrapperMut.html" title="trait alloc_no_stdlib::allocated_memory::SliceWrapperMut">SliceWrapperMut</a>&lt;<a class="primitive" href="std/primitive.u8.html">u8</a>&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;R: <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a></span>","impl&lt;R&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="brotli/struct.Decompressor.html" title="struct brotli::Decompressor">Decompressor</a>&lt;R&gt; <span class="where fmt-newline">where R: <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a></span>","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="enum" href="websocket/stream/enum.WebSocketStream.html" title="enum websocket::stream::WebSocketStream">WebSocketStream</a>","impl&lt;S&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="hyper/client/pool/struct.PooledStream.html" title="struct hyper::client::pool::PooledStream">PooledStream</a>&lt;S&gt; <span class="where fmt-newline">where S: <a class="trait" href="hyper/net/trait.NetworkStream.html" title="trait hyper::net::NetworkStream">NetworkStream</a></span>","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="hyper/client/response/struct.Response.html" title="struct hyper::client::response::Response">Response</a>","impl&lt;'a&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="enum" href="hyper/client/enum.Body.html" title="enum hyper::client::Body">Body</a>&lt;'a&gt;","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="hyper/http/h1/struct.Http11Message.html" title="struct hyper::http::h1::Http11Message">Http11Message</a>","impl&lt;R&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="enum" href="hyper/http/h1/enum.HttpReader.html" title="enum hyper::http::h1::HttpReader">HttpReader</a>&lt;R&gt; <span class="where fmt-newline">where R: <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a></span>","impl&lt;S&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="hyper/http/h2/struct.Http2Message.html" title="struct hyper::http::h2::Http2Message">Http2Message</a>&lt;S&gt; <span class="where fmt-newline">where S: <a class="trait" href="hyper/http/h2/trait.CloneableStream.html" title="trait hyper::http::h2::CloneableStream">CloneableStream</a></span>","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="hyper/net/struct.HttpStream.html" title="struct hyper::net::HttpStream">HttpStream</a>","impl&lt;S&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="enum" href="hyper/net/enum.HttpsStream.html" title="enum hyper::net::HttpsStream">HttpsStream</a>&lt;S&gt; <span class="where fmt-newline">where S: <a class="trait" href="hyper/net/trait.NetworkStream.html" title="trait hyper::net::NetworkStream">NetworkStream</a></span>","impl&lt;'a, 'b&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="hyper/server/request/struct.Request.html" title="struct hyper::server::request::Request">Request</a>&lt;'a, 'b&gt;","impl&lt;R&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="flate2/deflate/struct.EncoderReader.html" title="struct flate2::deflate::EncoderReader">EncoderReader</a>&lt;R&gt; <span class="where fmt-newline">where R: <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a></span>","impl&lt;R&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="flate2/deflate/struct.EncoderReaderBuf.html" title="struct flate2::deflate::EncoderReaderBuf">EncoderReaderBuf</a>&lt;R&gt; <span class="where fmt-newline">where R: <a class="trait" href="std/io/trait.BufRead.html" title="trait std::io::BufRead">BufRead</a></span>","impl&lt;R&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="flate2/deflate/struct.DecoderReader.html" title="struct flate2::deflate::DecoderReader">DecoderReader</a>&lt;R&gt; <span class="where fmt-newline">where R: <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a></span>","impl&lt;R&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="flate2/deflate/struct.DecoderReaderBuf.html" title="struct flate2::deflate::DecoderReaderBuf">DecoderReaderBuf</a>&lt;R&gt; <span class="where fmt-newline">where R: <a class="trait" href="std/io/trait.BufRead.html" title="trait std::io::BufRead">BufRead</a></span>","impl&lt;R&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="flate2/gz/struct.EncoderReader.html" title="struct flate2::gz::EncoderReader">EncoderReader</a>&lt;R&gt; <span class="where fmt-newline">where R: <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a></span>","impl&lt;R&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="flate2/gz/struct.EncoderReaderBuf.html" title="struct flate2::gz::EncoderReaderBuf">EncoderReaderBuf</a>&lt;R&gt; <span class="where fmt-newline">where R: <a class="trait" href="std/io/trait.BufRead.html" title="trait std::io::BufRead">BufRead</a></span>","impl&lt;R&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="flate2/gz/struct.DecoderReader.html" title="struct flate2::gz::DecoderReader">DecoderReader</a>&lt;R&gt; <span class="where fmt-newline">where R: <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a></span>","impl&lt;R&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="flate2/gz/struct.DecoderReaderBuf.html" title="struct flate2::gz::DecoderReaderBuf">DecoderReaderBuf</a>&lt;R&gt; <span class="where fmt-newline">where R: <a class="trait" href="std/io/trait.BufRead.html" title="trait std::io::BufRead">BufRead</a></span>","impl&lt;R&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="flate2/zlib/struct.EncoderReader.html" title="struct flate2::zlib::EncoderReader">EncoderReader</a>&lt;R&gt; <span class="where fmt-newline">where R: <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a></span>","impl&lt;R&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="flate2/zlib/struct.EncoderReaderBuf.html" title="struct flate2::zlib::EncoderReaderBuf">EncoderReaderBuf</a>&lt;R&gt; <span class="where fmt-newline">where R: <a class="trait" href="std/io/trait.BufRead.html" title="trait std::io::BufRead">BufRead</a></span>","impl&lt;R&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="flate2/zlib/struct.DecoderReader.html" title="struct flate2::zlib::DecoderReader">DecoderReader</a>&lt;R&gt; <span class="where fmt-newline">where R: <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a></span>","impl&lt;R&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="flate2/zlib/struct.DecoderReaderBuf.html" title="struct flate2::zlib::DecoderReaderBuf">DecoderReaderBuf</a>&lt;R&gt; <span class="where fmt-newline">where R: <a class="trait" href="std/io/trait.BufRead.html" title="trait std::io::BufRead">BufRead</a></span>","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="openssl/bio/struct.MemBio.html" title="struct openssl::bio::MemBio">MemBio</a>","impl&lt;S&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="openssl/ssl/struct.SslStream.html" title="struct openssl::ssl::SslStream">SslStream</a>&lt;S&gt; <span class="where fmt-newline">where S: <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> + <a class="trait" href="std/io/trait.Write.html" title="trait std::io::Write">Write</a></span>","impl&lt;S&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="enum" href="openssl/ssl/enum.MaybeSslStream.html" title="enum openssl::ssl::MaybeSslStream">MaybeSslStream</a>&lt;S&gt; <span class="where fmt-newline">where S: <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> + <a class="trait" href="std/io/trait.Write.html" title="trait std::io::Write">Write</a></span>","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="bytes/buf/ring/struct.RingBuf.html" title="struct bytes::buf::ring::RingBuf">RingBuf</a>","impl&lt;T&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="bytes/buf/take/struct.Take.html" title="struct bytes::buf::take::Take">Take</a>&lt;T&gt; <span class="where fmt-newline">where T: <a class="trait" href="bytes/buf/trait.Buf.html" title="trait bytes::buf::Buf">Buf</a></span>","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="bytes/buf/byte/struct.ByteBuf.html" title="struct bytes::buf::byte::ByteBuf">ByteBuf</a>","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="bytes/buf/byte/struct.ROByteBuf.html" title="struct bytes::buf::byte::ROByteBuf">ROByteBuf</a>","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="bytes/str/rope/struct.RopeBuf.html" title="struct bytes::str::rope::RopeBuf">RopeBuf</a>","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="alloc/boxed/struct.Box.html" title="struct alloc::boxed::Box">Box</a>&lt;<a class="trait" href="bytes/buf/trait.Buf.html" title="trait bytes::buf::Buf">Buf</a> + 'static&gt;","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="mio/net/tcp/struct.TcpStream.html" title="struct mio::net::tcp::TcpStream">TcpStream</a>","impl&lt;'a&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for &amp;'a <a class="struct" href="mio/net/tcp/struct.TcpStream.html" title="struct mio::net::tcp::TcpStream">TcpStream</a>","impl&lt;'a&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for &amp;'a Io","impl&lt;'a&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for &amp;'a TcpStream","impl&lt;'a&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for &amp;'a PipeReader",];
implementors["servo_config"] = [];
implementors["servo_rand"] = [];
implementors["servo_remutex"] = [];
implementors["servo_url"] = [];
implementors["shared_library"] = [];
implementors["std"] = [];
implementors["string_cache"] = [];
implementors["style"] = [];
implementors["syn"] = [];
implementors["tendril"] = [];
implementors["url"] = [];
implementors["webrender"] = ["impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="mio/net/tcp/struct.TcpStream.html" title="struct mio::net::tcp::TcpStream">TcpStream</a>","impl&lt;'a&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for &amp;'a <a class="struct" href="mio/net/tcp/struct.TcpStream.html" title="struct mio::net::tcp::TcpStream">TcpStream</a>","impl&lt;'a&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for &amp;'a Io","impl&lt;'a&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for &amp;'a TcpStream","impl&lt;'a&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for &amp;'a PipeReader",];
implementors["websocket"] = ["impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="openssl/bio/struct.MemBio.html" title="struct openssl::bio::MemBio">MemBio</a>","impl&lt;S&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="openssl/ssl/struct.SslStream.html" title="struct openssl::ssl::SslStream">SslStream</a>&lt;S&gt; <span class="where fmt-newline">where S: <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> + <a class="trait" href="std/io/trait.Write.html" title="trait std::io::Write">Write</a></span>","impl&lt;S&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="enum" href="openssl/ssl/enum.MaybeSslStream.html" title="enum openssl::ssl::MaybeSslStream">MaybeSslStream</a>&lt;S&gt; <span class="where fmt-newline">where S: <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> + <a class="trait" href="std/io/trait.Write.html" title="trait std::io::Write">Write</a></span>","impl&lt;S&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="hyper/client/pool/struct.PooledStream.html" title="struct hyper::client::pool::PooledStream">PooledStream</a>&lt;S&gt; <span class="where fmt-newline">where S: <a class="trait" href="hyper/net/trait.NetworkStream.html" title="trait hyper::net::NetworkStream">NetworkStream</a></span>","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="hyper/client/response/struct.Response.html" title="struct hyper::client::response::Response">Response</a>","impl&lt;'a&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="enum" href="hyper/client/enum.Body.html" title="enum hyper::client::Body">Body</a>&lt;'a&gt;","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="hyper/http/h1/struct.Http11Message.html" title="struct hyper::http::h1::Http11Message">Http11Message</a>","impl&lt;R&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="enum" href="hyper/http/h1/enum.HttpReader.html" title="enum hyper::http::h1::HttpReader">HttpReader</a>&lt;R&gt; <span class="where fmt-newline">where R: <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a></span>","impl&lt;S&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="hyper/http/h2/struct.Http2Message.html" title="struct hyper::http::h2::Http2Message">Http2Message</a>&lt;S&gt; <span class="where fmt-newline">where S: <a class="trait" href="hyper/http/h2/trait.CloneableStream.html" title="trait hyper::http::h2::CloneableStream">CloneableStream</a></span>","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="hyper/net/struct.HttpStream.html" title="struct hyper::net::HttpStream">HttpStream</a>","impl&lt;S&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="enum" href="hyper/net/enum.HttpsStream.html" title="enum hyper::net::HttpsStream">HttpsStream</a>&lt;S&gt; <span class="where fmt-newline">where S: <a class="trait" href="hyper/net/trait.NetworkStream.html" title="trait hyper::net::NetworkStream">NetworkStream</a></span>","impl&lt;'a, 'b&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="hyper/server/request/struct.Request.html" title="struct hyper::server::request::Request">Request</a>&lt;'a, 'b&gt;","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="enum" href="websocket/stream/enum.WebSocketStream.html" title="enum websocket::stream::WebSocketStream">WebSocketStream</a>",];
implementors["webvr_traits"] = ["impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="mio/net/tcp/struct.TcpStream.html" title="struct mio::net::tcp::TcpStream">TcpStream</a>","impl&lt;'a&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for &amp;'a <a class="struct" href="mio/net/tcp/struct.TcpStream.html" title="struct mio::net::tcp::TcpStream">TcpStream</a>","impl&lt;'a&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for &amp;'a Io","impl&lt;'a&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for &amp;'a TcpStream","impl&lt;'a&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for &amp;'a PipeReader",];
implementors["ws"] = ["impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="enum" href="ws/stream/enum.Stream.html" title="enum ws::stream::Stream">Stream</a>","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="mio/net/tcp/struct.TcpStream.html" title="struct mio::net::tcp::TcpStream">TcpStream</a>","impl&lt;'a&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for &amp;'a <a class="struct" href="mio/net/tcp/struct.TcpStream.html" title="struct mio::net::tcp::TcpStream">TcpStream</a>","impl&lt;'a&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for &amp;'a Io","impl&lt;'a&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for &amp;'a TcpStream","impl&lt;'a&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for &amp;'a PipeReader","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="bytes/buf/ring/struct.RingBuf.html" title="struct bytes::buf::ring::RingBuf">RingBuf</a>","impl&lt;T&gt; <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="bytes/buf/take/struct.Take.html" title="struct bytes::buf::take::Take">Take</a>&lt;T&gt; <span class="where fmt-newline">where T: <a class="trait" href="bytes/buf/trait.Buf.html" title="trait bytes::buf::Buf">Buf</a></span>","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="bytes/buf/byte/struct.ByteBuf.html" title="struct bytes::buf::byte::ByteBuf">ByteBuf</a>","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="bytes/buf/byte/struct.ROByteBuf.html" title="struct bytes::buf::byte::ROByteBuf">ROByteBuf</a>","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="bytes/str/rope/struct.RopeBuf.html" title="struct bytes::str::rope::RopeBuf">RopeBuf</a>","impl <a class="trait" href="std/io/trait.Read.html" title="trait std::io::Read">Read</a> for <a class="struct" href="alloc/boxed/struct.Box.html" title="struct alloc::boxed::Box">Box</a>&lt;<a class="trait" href="bytes/buf/trait.Buf.html" title="trait bytes::buf::Buf">Buf</a> + 'static&gt;",];
implementors["xml5ever"] = [];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
