(function() {var implementors = {};
implementors["log"] = [];implementors["env_logger"] = ["impl <a class='trait' href='log/trait.Log.html' title='log::Log'>Log</a> for <a class='struct' href='env_logger/struct.Logger.html' title='env_logger::Logger'>Logger</a>",];implementors["constellation"] = ["impl <a class='trait' href='log/trait.Log.html' title='log::Log'>Log</a> for <a class='struct' href='constellation/struct.FromScriptLogger.html' title='constellation::FromScriptLogger'>FromScriptLogger</a>","impl <a class='trait' href='log/trait.Log.html' title='log::Log'>Log</a> for <a class='struct' href='constellation/struct.FromCompositorLogger.html' title='constellation::FromCompositorLogger'>FromCompositorLogger</a>",];implementors["servo"] = ["impl <a class='trait' href='log/trait.Log.html' title='log::Log'>Log</a> for <a class='struct' href='env_logger/struct.Logger.html' title='env_logger::Logger'>Logger</a>","impl <a class='trait' href='log/trait.Log.html' title='log::Log'>Log</a> for <a class='struct' href='constellation/constellation/struct.FromScriptLogger.html' title='constellation::constellation::FromScriptLogger'>FromScriptLogger</a>","impl <a class='trait' href='log/trait.Log.html' title='log::Log'>Log</a> for <a class='struct' href='constellation/constellation/struct.FromCompositorLogger.html' title='constellation::constellation::FromCompositorLogger'>FromCompositorLogger</a>","impl&lt;Log1,&nbsp;Log2&gt; <a class='trait' href='log/trait.Log.html' title='log::Log'>Log</a> for <a class='struct' href='servo/struct.BothLogger.html' title='servo::BothLogger'>BothLogger</a>&lt;Log1,&nbsp;Log2&gt; <span class='where'>where Log1: <a class='trait' href='log/trait.Log.html' title='log::Log'>Log</a>, Log2: <a class='trait' href='log/trait.Log.html' title='log::Log'>Log</a></span>",];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
