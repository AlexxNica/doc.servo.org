(function() {var implementors = {};
implementors["app_units"] = ["impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a> for <a class='struct' href='app_units/struct.Au.html' title='struct app_units::Au'>Au</a>",];
implementors["arrayvec"] = ["impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.Instant.html' title='struct std::time::Instant'>Instant</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.SystemTime.html' title='struct std::time::SystemTime'>SystemTime</a>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>",];
implementors["brotli"] = ["impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.Instant.html' title='struct std::time::Instant'>Instant</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.SystemTime.html' title='struct std::time::SystemTime'>SystemTime</a>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>",];
implementors["collections"] = ["impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a str&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, str&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, str&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, str&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a str&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>",];
implementors["core"] = [];
implementors["enum_primitive"] = ["impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.Instant.html' title='struct std::time::Instant'>Instant</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.SystemTime.html' title='struct std::time::SystemTime'>SystemTime</a>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>",];
implementors["euclid"] = ["impl&lt;U, T:&nbsp;<a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a> for <a class='struct' href='euclid/length/struct.Length.html' title='struct euclid::length::Length'>Length</a>&lt;T, U&gt;","impl&lt;T:&nbsp;<a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a> for <a class='struct' href='euclid/point/struct.TypedPoint2D.html' title='struct euclid::point::TypedPoint2D'>TypedPoint2D</a>&lt;T, U&gt;","impl&lt;T:&nbsp;<a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/size/struct.TypedSize2D.html' title='struct euclid::size::TypedSize2D'>TypedSize2D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/point/struct.TypedPoint2D.html' title='struct euclid::point::TypedPoint2D'>TypedPoint2D</a>&lt;T, U&gt;","impl&lt;T:&nbsp;<a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a> for <a class='struct' href='euclid/point/struct.TypedPoint3D.html' title='struct euclid::point::TypedPoint3D'>TypedPoint3D</a>&lt;T, U&gt;","impl&lt;T:&nbsp;<a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a> for <a class='struct' href='euclid/point/struct.TypedPoint4D.html' title='struct euclid::point::TypedPoint4D'>TypedPoint4D</a>&lt;T, U&gt;","impl&lt;T:&nbsp;<a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;, Src, Dst&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a> for <a class='struct' href='euclid/scale_factor/struct.ScaleFactor.html' title='struct euclid::scale_factor::ScaleFactor'>ScaleFactor</a>&lt;T, Src, Dst&gt;","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a> for <a class='struct' href='euclid/side_offsets/struct.TypedSideOffsets2D.html' title='struct euclid::side_offsets::TypedSideOffsets2D'>TypedSideOffsets2D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T:&nbsp;<a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a> for <a class='struct' href='euclid/size/struct.TypedSize2D.html' title='struct euclid::size::TypedSize2D'>TypedSize2D</a>&lt;T, U&gt;",];
implementors["gfx"] = ["impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/struct.Timespec.html' title='struct time::Timespec'>Timespec</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/struct.SteadyTime.html' title='struct time::SteadyTime'>SteadyTime</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/struct.Tm.html' title='struct time::Tm'>Tm</a>","impl&lt;'a, 'b, T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'b <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt;&gt; for &amp;'a <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a> + <a class='trait' href='num_integer/trait.Integer.html' title='trait num_integer::Integer'>Integer</a></span>","impl&lt;T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt;&gt; for <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a> + <a class='trait' href='num_integer/trait.Integer.html' title='trait num_integer::Integer'>Integer</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt;&gt; for &amp;'a <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a> + <a class='trait' href='num_integer/trait.Integer.html' title='trait num_integer::Integer'>Integer</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt;&gt; for <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a> + <a class='trait' href='num_integer/trait.Integer.html' title='trait num_integer::Integer'>Integer</a></span>","impl&lt;U, T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/length/struct.Length.html' title='struct euclid::length::Length'>Length</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/length/struct.Length.html' title='struct euclid::length::Length'>Length</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt; + <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/point/struct.TypedPoint2D.html' title='struct euclid::point::TypedPoint2D'>TypedPoint2D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/point/struct.TypedPoint2D.html' title='struct euclid::point::TypedPoint2D'>TypedPoint2D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/size/struct.TypedSize2D.html' title='struct euclid::size::TypedSize2D'>TypedSize2D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/point/struct.TypedPoint2D.html' title='struct euclid::point::TypedPoint2D'>TypedPoint2D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/point/struct.TypedPoint3D.html' title='struct euclid::point::TypedPoint3D'>TypedPoint3D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/point/struct.TypedPoint3D.html' title='struct euclid::point::TypedPoint3D'>TypedPoint3D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/point/struct.TypedPoint4D.html' title='struct euclid::point::TypedPoint4D'>TypedPoint4D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/point/struct.TypedPoint4D.html' title='struct euclid::point::TypedPoint4D'>TypedPoint4D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, Src, Dst&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/scale_factor/struct.ScaleFactor.html' title='struct euclid::scale_factor::ScaleFactor'>ScaleFactor</a>&lt;T, Src, Dst&gt;&gt; for <a class='struct' href='euclid/scale_factor/struct.ScaleFactor.html' title='struct euclid::scale_factor::ScaleFactor'>ScaleFactor</a>&lt;T, Src, Dst&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt; + <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/side_offsets/struct.TypedSideOffsets2D.html' title='struct euclid::side_offsets::TypedSideOffsets2D'>TypedSideOffsets2D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/side_offsets/struct.TypedSideOffsets2D.html' title='struct euclid::side_offsets::TypedSideOffsets2D'>TypedSideOffsets2D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/size/struct.TypedSize2D.html' title='struct euclid::size::TypedSize2D'>TypedSize2D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/size/struct.TypedSize2D.html' title='struct euclid::size::TypedSize2D'>TypedSize2D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.Instant.html' title='struct std::time::Instant'>Instant</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.SystemTime.html' title='struct std::time::SystemTime'>SystemTime</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='gfx/text/glyph/struct.ByteIndex.html' title='struct gfx::text::glyph::ByteIndex'>ByteIndex</a>&gt; for <a class='struct' href='gfx/text/glyph/struct.ByteIndex.html' title='struct gfx::text::glyph::ByteIndex'>ByteIndex</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='simd/struct.i8x16.html' title='struct simd::i8x16'>i8x16</a>&gt; for <a class='struct' href='simd/struct.i8x16.html' title='struct simd::i8x16'>i8x16</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='simd/struct.u8x16.html' title='struct simd::u8x16'>u8x16</a>&gt; for <a class='struct' href='simd/struct.u8x16.html' title='struct simd::u8x16'>u8x16</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='simd/struct.i16x8.html' title='struct simd::i16x8'>i16x8</a>&gt; for <a class='struct' href='simd/struct.i16x8.html' title='struct simd::i16x8'>i16x8</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='simd/struct.u16x8.html' title='struct simd::u16x8'>u16x8</a>&gt; for <a class='struct' href='simd/struct.u16x8.html' title='struct simd::u16x8'>u16x8</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='simd/struct.i32x4.html' title='struct simd::i32x4'>i32x4</a>&gt; for <a class='struct' href='simd/struct.i32x4.html' title='struct simd::i32x4'>i32x4</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='simd/struct.u32x4.html' title='struct simd::u32x4'>u32x4</a>&gt; for <a class='struct' href='simd/struct.u32x4.html' title='struct simd::u32x4'>u32x4</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='simd/struct.f32x4.html' title='struct simd::f32x4'>f32x4</a>&gt; for <a class='struct' href='simd/struct.f32x4.html' title='struct simd::f32x4'>f32x4</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='simd/sixty_four/struct.i64x2.html' title='struct simd::sixty_four::i64x2'>i64x2</a>&gt; for <a class='struct' href='simd/sixty_four/struct.i64x2.html' title='struct simd::sixty_four::i64x2'>i64x2</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='simd/sixty_four/struct.u64x2.html' title='struct simd::sixty_four::u64x2'>u64x2</a>&gt; for <a class='struct' href='simd/sixty_four/struct.u64x2.html' title='struct simd::sixty_four::u64x2'>u64x2</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='simd/sixty_four/struct.f64x2.html' title='struct simd::sixty_four::f64x2'>f64x2</a>&gt; for <a class='struct' href='simd/sixty_four/struct.f64x2.html' title='struct simd::sixty_four::f64x2'>f64x2</a>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='struct' href='style/context/struct.TraversalStatistics.html' title='struct style::context::TraversalStatistics'>TraversalStatistics</a>&gt; for &amp;'a <a class='struct' href='style/context/struct.TraversalStatistics.html' title='struct style::context::TraversalStatistics'>TraversalStatistics</a>","impl&lt;T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='style/logical_geometry/struct.LogicalSize.html' title='struct style::logical_geometry::LogicalSize'>LogicalSize</a>&lt;T&gt;&gt; for <a class='struct' href='style/logical_geometry/struct.LogicalSize.html' title='struct style::logical_geometry::LogicalSize'>LogicalSize</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='style/logical_geometry/struct.LogicalSize.html' title='struct style::logical_geometry::LogicalSize'>LogicalSize</a>&lt;T&gt;&gt; for <a class='struct' href='style/logical_geometry/struct.LogicalPoint.html' title='struct style::logical_geometry::LogicalPoint'>LogicalPoint</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='style/logical_geometry/struct.LogicalMargin.html' title='struct style::logical_geometry::LogicalMargin'>LogicalMargin</a>&lt;T&gt;&gt; for <a class='struct' href='style/logical_geometry/struct.LogicalMargin.html' title='struct style::logical_geometry::LogicalMargin'>LogicalMargin</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='style/logical_geometry/struct.LogicalMargin.html' title='struct style::logical_geometry::LogicalMargin'>LogicalMargin</a>&lt;T&gt;&gt; for <a class='struct' href='style/logical_geometry/struct.LogicalRect.html' title='struct style::logical_geometry::LogicalRect'>LogicalRect</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt; + <a class='trait' href='core/ops/trait.Sub.html' title='trait core::ops::Sub'>Sub</a>&lt;T, Output=T&gt; + <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a></span>","impl&lt;T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='ordered_float/struct.NotNaN.html' title='struct ordered_float::NotNaN'>NotNaN</a>&lt;T&gt;&gt; for <a class='struct' href='ordered_float/struct.NotNaN.html' title='struct ordered_float::NotNaN'>NotNaN</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='num_traits/float/trait.Float.html' title='trait num_traits::float::Float'>Float</a></span>","impl&lt;T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T&gt; for <a class='struct' href='ordered_float/struct.NotNaN.html' title='struct ordered_float::NotNaN'>NotNaN</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='num_traits/float/trait.Float.html' title='trait num_traits::float::Float'>Float</a></span>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='app_units/app_unit/struct.Au.html' title='struct app_units::app_unit::Au'>Au</a>&gt; for <a class='struct' href='app_units/app_unit/struct.Au.html' title='struct app_units::app_unit::Au'>Au</a>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='struct' href='openssl/bn/struct.BigNum.html' title='struct openssl::bn::BigNum'>BigNum</a>&gt; for &amp;'a <a class='struct' href='openssl/bn/struct.BigNum.html' title='struct openssl::bn::BigNum'>BigNum</a>",];
implementors["gfx_traits"] = ["impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='gfx_traits/struct.ByteIndex.html' title='struct gfx_traits::ByteIndex'>ByteIndex</a>&gt; for <a class='struct' href='gfx_traits/struct.ByteIndex.html' title='struct gfx_traits::ByteIndex'>ByteIndex</a>",];
implementors["gleam"] = ["impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.Instant.html' title='struct std::time::Instant'>Instant</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.SystemTime.html' title='struct std::time::SystemTime'>SystemTime</a>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>",];
implementors["glutin"] = ["impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.Instant.html' title='struct std::time::Instant'>Instant</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.SystemTime.html' title='struct std::time::SystemTime'>SystemTime</a>","impl&lt;'a, 'b, T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'b <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt;&gt; for &amp;'a <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a> + <a class='trait' href='num_integer/trait.Integer.html' title='trait num_integer::Integer'>Integer</a></span>","impl&lt;T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt;&gt; for <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a> + <a class='trait' href='num_integer/trait.Integer.html' title='trait num_integer::Integer'>Integer</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt;&gt; for &amp;'a <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a> + <a class='trait' href='num_integer/trait.Integer.html' title='trait num_integer::Integer'>Integer</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt;&gt; for <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a> + <a class='trait' href='num_integer/trait.Integer.html' title='trait num_integer::Integer'>Integer</a></span>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>",];
implementors["glx"] = ["impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.Instant.html' title='struct std::time::Instant'>Instant</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.SystemTime.html' title='struct std::time::SystemTime'>SystemTime</a>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>",];
implementors["heartbeats_simple"] = ["impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.Instant.html' title='struct std::time::Instant'>Instant</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.SystemTime.html' title='struct std::time::SystemTime'>SystemTime</a>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>",];
implementors["html5ever"] = ["impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.Instant.html' title='struct std::time::Instant'>Instant</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.SystemTime.html' title='struct std::time::SystemTime'>SystemTime</a>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>",];
implementors["hyper"] = ["impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/struct.Timespec.html' title='struct time::Timespec'>Timespec</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/struct.SteadyTime.html' title='struct time::SteadyTime'>SteadyTime</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/struct.Tm.html' title='struct time::Tm'>Tm</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.Instant.html' title='struct std::time::Instant'>Instant</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.SystemTime.html' title='struct std::time::SystemTime'>SystemTime</a>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='struct' href='openssl/bn/struct.BigNum.html' title='struct openssl::bn::BigNum'>BigNum</a>&gt; for &amp;'a <a class='struct' href='openssl/bn/struct.BigNum.html' title='struct openssl::bn::BigNum'>BigNum</a>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>",];
implementors["image"] = ["impl&lt;'a, 'b, T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'b <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt;&gt; for &amp;'a <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a> + <a class='trait' href='num_integer/trait.Integer.html' title='trait num_integer::Integer'>Integer</a></span>","impl&lt;T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt;&gt; for <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a> + <a class='trait' href='num_integer/trait.Integer.html' title='trait num_integer::Integer'>Integer</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt;&gt; for &amp;'a <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a> + <a class='trait' href='num_integer/trait.Integer.html' title='trait num_integer::Integer'>Integer</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt;&gt; for <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a> + <a class='trait' href='num_integer/trait.Integer.html' title='trait num_integer::Integer'>Integer</a></span>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.Instant.html' title='struct std::time::Instant'>Instant</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.SystemTime.html' title='struct std::time::SystemTime'>SystemTime</a>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>",];
implementors["ipc_channel"] = ["impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.Instant.html' title='struct std::time::Instant'>Instant</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.SystemTime.html' title='struct std::time::SystemTime'>SystemTime</a>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>",];
implementors["layout"] = ["impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='layout/inline/struct.FragmentIndex.html' title='struct layout::inline::FragmentIndex'>FragmentIndex</a>&gt; for <a class='struct' href='layout/inline/struct.FragmentIndex.html' title='struct layout::inline::FragmentIndex'>FragmentIndex</a>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a> for &amp;'a <a class='struct' href='layout/table_wrapper/struct.AutoLayoutCandidateGuess.html' title='struct layout::table_wrapper::AutoLayoutCandidateGuess'>AutoLayoutCandidateGuess</a>",];
implementors["layout_thread"] = ["impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='simd/struct.i8x16.html' title='struct simd::i8x16'>i8x16</a>&gt; for <a class='struct' href='simd/struct.i8x16.html' title='struct simd::i8x16'>i8x16</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='simd/struct.u8x16.html' title='struct simd::u8x16'>u8x16</a>&gt; for <a class='struct' href='simd/struct.u8x16.html' title='struct simd::u8x16'>u8x16</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='simd/struct.i16x8.html' title='struct simd::i16x8'>i16x8</a>&gt; for <a class='struct' href='simd/struct.i16x8.html' title='struct simd::i16x8'>i16x8</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='simd/struct.u16x8.html' title='struct simd::u16x8'>u16x8</a>&gt; for <a class='struct' href='simd/struct.u16x8.html' title='struct simd::u16x8'>u16x8</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='simd/struct.i32x4.html' title='struct simd::i32x4'>i32x4</a>&gt; for <a class='struct' href='simd/struct.i32x4.html' title='struct simd::i32x4'>i32x4</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='simd/struct.u32x4.html' title='struct simd::u32x4'>u32x4</a>&gt; for <a class='struct' href='simd/struct.u32x4.html' title='struct simd::u32x4'>u32x4</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='simd/struct.f32x4.html' title='struct simd::f32x4'>f32x4</a>&gt; for <a class='struct' href='simd/struct.f32x4.html' title='struct simd::f32x4'>f32x4</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='simd/sixty_four/struct.i64x2.html' title='struct simd::sixty_four::i64x2'>i64x2</a>&gt; for <a class='struct' href='simd/sixty_four/struct.i64x2.html' title='struct simd::sixty_four::i64x2'>i64x2</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='simd/sixty_four/struct.u64x2.html' title='struct simd::sixty_four::u64x2'>u64x2</a>&gt; for <a class='struct' href='simd/sixty_four/struct.u64x2.html' title='struct simd::sixty_four::u64x2'>u64x2</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='simd/sixty_four/struct.f64x2.html' title='struct simd::sixty_four::f64x2'>f64x2</a>&gt; for <a class='struct' href='simd/sixty_four/struct.f64x2.html' title='struct simd::sixty_four::f64x2'>f64x2</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='gfx_traits/struct.ByteIndex.html' title='struct gfx_traits::ByteIndex'>ByteIndex</a>&gt; for <a class='struct' href='gfx_traits/struct.ByteIndex.html' title='struct gfx_traits::ByteIndex'>ByteIndex</a>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='struct' href='style/context/struct.TraversalStatistics.html' title='struct style::context::TraversalStatistics'>TraversalStatistics</a>&gt; for &amp;'a <a class='struct' href='style/context/struct.TraversalStatistics.html' title='struct style::context::TraversalStatistics'>TraversalStatistics</a>","impl&lt;T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='style/logical_geometry/struct.LogicalSize.html' title='struct style::logical_geometry::LogicalSize'>LogicalSize</a>&lt;T&gt;&gt; for <a class='struct' href='style/logical_geometry/struct.LogicalSize.html' title='struct style::logical_geometry::LogicalSize'>LogicalSize</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='style/logical_geometry/struct.LogicalSize.html' title='struct style::logical_geometry::LogicalSize'>LogicalSize</a>&lt;T&gt;&gt; for <a class='struct' href='style/logical_geometry/struct.LogicalPoint.html' title='struct style::logical_geometry::LogicalPoint'>LogicalPoint</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='style/logical_geometry/struct.LogicalMargin.html' title='struct style::logical_geometry::LogicalMargin'>LogicalMargin</a>&lt;T&gt;&gt; for <a class='struct' href='style/logical_geometry/struct.LogicalMargin.html' title='struct style::logical_geometry::LogicalMargin'>LogicalMargin</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='style/logical_geometry/struct.LogicalMargin.html' title='struct style::logical_geometry::LogicalMargin'>LogicalMargin</a>&lt;T&gt;&gt; for <a class='struct' href='style/logical_geometry/struct.LogicalRect.html' title='struct style::logical_geometry::LogicalRect'>LogicalRect</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt; + <a class='trait' href='core/ops/trait.Sub.html' title='trait core::ops::Sub'>Sub</a>&lt;T, Output=T&gt; + <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a></span>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/struct.Timespec.html' title='struct time::Timespec'>Timespec</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/struct.SteadyTime.html' title='struct time::SteadyTime'>SteadyTime</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/struct.Tm.html' title='struct time::Tm'>Tm</a>","impl&lt;'a, 'b, T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'b <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt;&gt; for &amp;'a <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a> + <a class='trait' href='num_integer/trait.Integer.html' title='trait num_integer::Integer'>Integer</a></span>","impl&lt;T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt;&gt; for <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a> + <a class='trait' href='num_integer/trait.Integer.html' title='trait num_integer::Integer'>Integer</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt;&gt; for &amp;'a <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a> + <a class='trait' href='num_integer/trait.Integer.html' title='trait num_integer::Integer'>Integer</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt;&gt; for <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a> + <a class='trait' href='num_integer/trait.Integer.html' title='trait num_integer::Integer'>Integer</a></span>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.Instant.html' title='struct std::time::Instant'>Instant</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.SystemTime.html' title='struct std::time::SystemTime'>SystemTime</a>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='ordered_float/struct.NotNaN.html' title='struct ordered_float::NotNaN'>NotNaN</a>&lt;T&gt;&gt; for <a class='struct' href='ordered_float/struct.NotNaN.html' title='struct ordered_float::NotNaN'>NotNaN</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='num_traits/float/trait.Float.html' title='trait num_traits::float::Float'>Float</a></span>","impl&lt;T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T&gt; for <a class='struct' href='ordered_float/struct.NotNaN.html' title='struct ordered_float::NotNaN'>NotNaN</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='num_traits/float/trait.Float.html' title='trait num_traits::float::Float'>Float</a></span>","impl&lt;U, T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/length/struct.Length.html' title='struct euclid::length::Length'>Length</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/length/struct.Length.html' title='struct euclid::length::Length'>Length</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt; + <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/point/struct.TypedPoint2D.html' title='struct euclid::point::TypedPoint2D'>TypedPoint2D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/point/struct.TypedPoint2D.html' title='struct euclid::point::TypedPoint2D'>TypedPoint2D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/size/struct.TypedSize2D.html' title='struct euclid::size::TypedSize2D'>TypedSize2D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/point/struct.TypedPoint2D.html' title='struct euclid::point::TypedPoint2D'>TypedPoint2D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/point/struct.TypedPoint3D.html' title='struct euclid::point::TypedPoint3D'>TypedPoint3D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/point/struct.TypedPoint3D.html' title='struct euclid::point::TypedPoint3D'>TypedPoint3D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/point/struct.TypedPoint4D.html' title='struct euclid::point::TypedPoint4D'>TypedPoint4D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/point/struct.TypedPoint4D.html' title='struct euclid::point::TypedPoint4D'>TypedPoint4D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, Src, Dst&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/scale_factor/struct.ScaleFactor.html' title='struct euclid::scale_factor::ScaleFactor'>ScaleFactor</a>&lt;T, Src, Dst&gt;&gt; for <a class='struct' href='euclid/scale_factor/struct.ScaleFactor.html' title='struct euclid::scale_factor::ScaleFactor'>ScaleFactor</a>&lt;T, Src, Dst&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt; + <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/side_offsets/struct.TypedSideOffsets2D.html' title='struct euclid::side_offsets::TypedSideOffsets2D'>TypedSideOffsets2D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/side_offsets/struct.TypedSideOffsets2D.html' title='struct euclid::side_offsets::TypedSideOffsets2D'>TypedSideOffsets2D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/size/struct.TypedSize2D.html' title='struct euclid::size::TypedSize2D'>TypedSize2D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/size/struct.TypedSize2D.html' title='struct euclid::size::TypedSize2D'>TypedSize2D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='app_units/app_unit/struct.Au.html' title='struct app_units::app_unit::Au'>Au</a>&gt; for <a class='struct' href='app_units/app_unit/struct.Au.html' title='struct app_units::app_unit::Au'>Au</a>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a AutoLayoutCandidateGuess&gt; for &amp;'a AutoLayoutCandidateGuess","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='struct' href='openssl/bn/struct.BigNum.html' title='struct openssl::bn::BigNum'>BigNum</a>&gt; for &amp;'a <a class='struct' href='openssl/bn/struct.BigNum.html' title='struct openssl::bn::BigNum'>BigNum</a>",];
implementors["lazy_static"] = ["impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.Instant.html' title='struct std::time::Instant'>Instant</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.SystemTime.html' title='struct std::time::SystemTime'>SystemTime</a>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>",];
implementors["libc"] = ["impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.Instant.html' title='struct std::time::Instant'>Instant</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.SystemTime.html' title='struct std::time::SystemTime'>SystemTime</a>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>",];
implementors["libloading"] = ["impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.Instant.html' title='struct std::time::Instant'>Instant</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.SystemTime.html' title='struct std::time::SystemTime'>SystemTime</a>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>",];
implementors["mime_guess"] = ["impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.Instant.html' title='struct std::time::Instant'>Instant</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.SystemTime.html' title='struct std::time::SystemTime'>SystemTime</a>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>",];
implementors["mio"] = ["impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.Instant.html' title='struct std::time::Instant'>Instant</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.SystemTime.html' title='struct std::time::SystemTime'>SystemTime</a>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>",];
implementors["net"] = ["impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/struct.Timespec.html' title='struct time::Timespec'>Timespec</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/struct.SteadyTime.html' title='struct time::SteadyTime'>SteadyTime</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/struct.Tm.html' title='struct time::Tm'>Tm</a>","impl&lt;'a, 'b, T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'b <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt;&gt; for &amp;'a <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a> + <a class='trait' href='num_integer/trait.Integer.html' title='trait num_integer::Integer'>Integer</a></span>","impl&lt;T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt;&gt; for <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a> + <a class='trait' href='num_integer/trait.Integer.html' title='trait num_integer::Integer'>Integer</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt;&gt; for &amp;'a <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a> + <a class='trait' href='num_integer/trait.Integer.html' title='trait num_integer::Integer'>Integer</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt;&gt; for <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a> + <a class='trait' href='num_integer/trait.Integer.html' title='trait num_integer::Integer'>Integer</a></span>","impl&lt;U, T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/length/struct.Length.html' title='struct euclid::length::Length'>Length</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/length/struct.Length.html' title='struct euclid::length::Length'>Length</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt; + <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/point/struct.TypedPoint2D.html' title='struct euclid::point::TypedPoint2D'>TypedPoint2D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/point/struct.TypedPoint2D.html' title='struct euclid::point::TypedPoint2D'>TypedPoint2D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/size/struct.TypedSize2D.html' title='struct euclid::size::TypedSize2D'>TypedSize2D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/point/struct.TypedPoint2D.html' title='struct euclid::point::TypedPoint2D'>TypedPoint2D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/point/struct.TypedPoint3D.html' title='struct euclid::point::TypedPoint3D'>TypedPoint3D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/point/struct.TypedPoint3D.html' title='struct euclid::point::TypedPoint3D'>TypedPoint3D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/point/struct.TypedPoint4D.html' title='struct euclid::point::TypedPoint4D'>TypedPoint4D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/point/struct.TypedPoint4D.html' title='struct euclid::point::TypedPoint4D'>TypedPoint4D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, Src, Dst&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/scale_factor/struct.ScaleFactor.html' title='struct euclid::scale_factor::ScaleFactor'>ScaleFactor</a>&lt;T, Src, Dst&gt;&gt; for <a class='struct' href='euclid/scale_factor/struct.ScaleFactor.html' title='struct euclid::scale_factor::ScaleFactor'>ScaleFactor</a>&lt;T, Src, Dst&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt; + <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/side_offsets/struct.TypedSideOffsets2D.html' title='struct euclid::side_offsets::TypedSideOffsets2D'>TypedSideOffsets2D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/side_offsets/struct.TypedSideOffsets2D.html' title='struct euclid::side_offsets::TypedSideOffsets2D'>TypedSideOffsets2D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/size/struct.TypedSize2D.html' title='struct euclid::size::TypedSize2D'>TypedSize2D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/size/struct.TypedSize2D.html' title='struct euclid::size::TypedSize2D'>TypedSize2D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.Instant.html' title='struct std::time::Instant'>Instant</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.SystemTime.html' title='struct std::time::SystemTime'>SystemTime</a>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='struct' href='openssl/bn/struct.BigNum.html' title='struct openssl::bn::BigNum'>BigNum</a>&gt; for &amp;'a <a class='struct' href='openssl/bn/struct.BigNum.html' title='struct openssl::bn::BigNum'>BigNum</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='app_units/app_unit/struct.Au.html' title='struct app_units::app_unit::Au'>Au</a>&gt; for <a class='struct' href='app_units/app_unit/struct.Au.html' title='struct app_units::app_unit::Au'>Au</a>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>",];
implementors["net_traits"] = ["impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/struct.Timespec.html' title='struct time::Timespec'>Timespec</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/struct.SteadyTime.html' title='struct time::SteadyTime'>SteadyTime</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/struct.Tm.html' title='struct time::Tm'>Tm</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.Instant.html' title='struct std::time::Instant'>Instant</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.SystemTime.html' title='struct std::time::SystemTime'>SystemTime</a>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='struct' href='openssl/bn/struct.BigNum.html' title='struct openssl::bn::BigNum'>BigNum</a>&gt; for &amp;'a <a class='struct' href='openssl/bn/struct.BigNum.html' title='struct openssl::bn::BigNum'>BigNum</a>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='app_units/app_unit/struct.Au.html' title='struct app_units::app_unit::Au'>Au</a>&gt; for <a class='struct' href='app_units/app_unit/struct.Au.html' title='struct app_units::app_unit::Au'>Au</a>","impl&lt;'a, 'b, T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'b <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt;&gt; for &amp;'a <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a> + <a class='trait' href='num_integer/trait.Integer.html' title='trait num_integer::Integer'>Integer</a></span>","impl&lt;T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt;&gt; for <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a> + <a class='trait' href='num_integer/trait.Integer.html' title='trait num_integer::Integer'>Integer</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt;&gt; for &amp;'a <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a> + <a class='trait' href='num_integer/trait.Integer.html' title='trait num_integer::Integer'>Integer</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt;&gt; for <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a> + <a class='trait' href='num_integer/trait.Integer.html' title='trait num_integer::Integer'>Integer</a></span>","impl&lt;U, T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/length/struct.Length.html' title='struct euclid::length::Length'>Length</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/length/struct.Length.html' title='struct euclid::length::Length'>Length</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt; + <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/point/struct.TypedPoint2D.html' title='struct euclid::point::TypedPoint2D'>TypedPoint2D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/point/struct.TypedPoint2D.html' title='struct euclid::point::TypedPoint2D'>TypedPoint2D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/size/struct.TypedSize2D.html' title='struct euclid::size::TypedSize2D'>TypedSize2D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/point/struct.TypedPoint2D.html' title='struct euclid::point::TypedPoint2D'>TypedPoint2D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/point/struct.TypedPoint3D.html' title='struct euclid::point::TypedPoint3D'>TypedPoint3D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/point/struct.TypedPoint3D.html' title='struct euclid::point::TypedPoint3D'>TypedPoint3D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/point/struct.TypedPoint4D.html' title='struct euclid::point::TypedPoint4D'>TypedPoint4D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/point/struct.TypedPoint4D.html' title='struct euclid::point::TypedPoint4D'>TypedPoint4D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, Src, Dst&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/scale_factor/struct.ScaleFactor.html' title='struct euclid::scale_factor::ScaleFactor'>ScaleFactor</a>&lt;T, Src, Dst&gt;&gt; for <a class='struct' href='euclid/scale_factor/struct.ScaleFactor.html' title='struct euclid::scale_factor::ScaleFactor'>ScaleFactor</a>&lt;T, Src, Dst&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt; + <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/side_offsets/struct.TypedSideOffsets2D.html' title='struct euclid::side_offsets::TypedSideOffsets2D'>TypedSideOffsets2D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/side_offsets/struct.TypedSideOffsets2D.html' title='struct euclid::side_offsets::TypedSideOffsets2D'>TypedSideOffsets2D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/size/struct.TypedSize2D.html' title='struct euclid::size::TypedSize2D'>TypedSize2D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/size/struct.TypedSize2D.html' title='struct euclid::size::TypedSize2D'>TypedSize2D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>",];
implementors["num_rational"] = ["impl&lt;T:&nbsp;<a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a> + <a class='trait' href='num_integer/trait.Integer.html' title='trait num_integer::Integer'>Integer</a>&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt;&gt; for <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt;&gt; for &amp;'a <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a> + <a class='trait' href='num_integer/trait.Integer.html' title='trait num_integer::Integer'>Integer</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt;&gt; for <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a> + <a class='trait' href='num_integer/trait.Integer.html' title='trait num_integer::Integer'>Integer</a></span>","impl&lt;'a, 'b, T:&nbsp;<a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a> + <a class='trait' href='num_integer/trait.Integer.html' title='trait num_integer::Integer'>Integer</a>&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'b <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt;&gt; for &amp;'a <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt;",];
implementors["offscreen_gl_context"] = ["impl&lt;U, T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/length/struct.Length.html' title='struct euclid::length::Length'>Length</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/length/struct.Length.html' title='struct euclid::length::Length'>Length</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt; + <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/point/struct.TypedPoint2D.html' title='struct euclid::point::TypedPoint2D'>TypedPoint2D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/point/struct.TypedPoint2D.html' title='struct euclid::point::TypedPoint2D'>TypedPoint2D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/size/struct.TypedSize2D.html' title='struct euclid::size::TypedSize2D'>TypedSize2D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/point/struct.TypedPoint2D.html' title='struct euclid::point::TypedPoint2D'>TypedPoint2D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/point/struct.TypedPoint3D.html' title='struct euclid::point::TypedPoint3D'>TypedPoint3D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/point/struct.TypedPoint3D.html' title='struct euclid::point::TypedPoint3D'>TypedPoint3D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/point/struct.TypedPoint4D.html' title='struct euclid::point::TypedPoint4D'>TypedPoint4D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/point/struct.TypedPoint4D.html' title='struct euclid::point::TypedPoint4D'>TypedPoint4D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, Src, Dst&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/scale_factor/struct.ScaleFactor.html' title='struct euclid::scale_factor::ScaleFactor'>ScaleFactor</a>&lt;T, Src, Dst&gt;&gt; for <a class='struct' href='euclid/scale_factor/struct.ScaleFactor.html' title='struct euclid::scale_factor::ScaleFactor'>ScaleFactor</a>&lt;T, Src, Dst&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt; + <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/side_offsets/struct.TypedSideOffsets2D.html' title='struct euclid::side_offsets::TypedSideOffsets2D'>TypedSideOffsets2D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/side_offsets/struct.TypedSideOffsets2D.html' title='struct euclid::side_offsets::TypedSideOffsets2D'>TypedSideOffsets2D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/size/struct.TypedSize2D.html' title='struct euclid::size::TypedSize2D'>TypedSize2D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/size/struct.TypedSize2D.html' title='struct euclid::size::TypedSize2D'>TypedSize2D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.Instant.html' title='struct std::time::Instant'>Instant</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.SystemTime.html' title='struct std::time::SystemTime'>SystemTime</a>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>",];
implementors["openssl"] = ["impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='struct' href='openssl/bn/struct.BigNum.html' title='struct openssl::bn::BigNum'>BigNum</a>&gt; for &amp;'a <a class='struct' href='openssl/bn/struct.BigNum.html' title='struct openssl::bn::BigNum'>BigNum</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.Instant.html' title='struct std::time::Instant'>Instant</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.SystemTime.html' title='struct std::time::SystemTime'>SystemTime</a>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>",];
implementors["ordered_float"] = ["impl&lt;T:&nbsp;<a class='trait' href='num_traits/float/trait.Float.html' title='trait num_traits::float::Float'>Float</a>&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a> for <a class='struct' href='ordered_float/struct.NotNaN.html' title='struct ordered_float::NotNaN'>NotNaN</a>&lt;T&gt;","impl&lt;T:&nbsp;<a class='trait' href='num_traits/float/trait.Float.html' title='trait num_traits::float::Float'>Float</a>&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T&gt; for <a class='struct' href='ordered_float/struct.NotNaN.html' title='struct ordered_float::NotNaN'>NotNaN</a>&lt;T&gt;",];
implementors["phf"] = ["impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.Instant.html' title='struct std::time::Instant'>Instant</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.SystemTime.html' title='struct std::time::SystemTime'>SystemTime</a>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>",];
implementors["regex_syntax"] = ["impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.Instant.html' title='struct std::time::Instant'>Instant</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.SystemTime.html' title='struct std::time::SystemTime'>SystemTime</a>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>",];
implementors["script"] = ["impl&lt;U, T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/length/struct.Length.html' title='struct euclid::length::Length'>Length</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/length/struct.Length.html' title='struct euclid::length::Length'>Length</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt; + <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/point/struct.TypedPoint2D.html' title='struct euclid::point::TypedPoint2D'>TypedPoint2D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/point/struct.TypedPoint2D.html' title='struct euclid::point::TypedPoint2D'>TypedPoint2D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/size/struct.TypedSize2D.html' title='struct euclid::size::TypedSize2D'>TypedSize2D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/point/struct.TypedPoint2D.html' title='struct euclid::point::TypedPoint2D'>TypedPoint2D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/point/struct.TypedPoint3D.html' title='struct euclid::point::TypedPoint3D'>TypedPoint3D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/point/struct.TypedPoint3D.html' title='struct euclid::point::TypedPoint3D'>TypedPoint3D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/point/struct.TypedPoint4D.html' title='struct euclid::point::TypedPoint4D'>TypedPoint4D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/point/struct.TypedPoint4D.html' title='struct euclid::point::TypedPoint4D'>TypedPoint4D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, Src, Dst&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/scale_factor/struct.ScaleFactor.html' title='struct euclid::scale_factor::ScaleFactor'>ScaleFactor</a>&lt;T, Src, Dst&gt;&gt; for <a class='struct' href='euclid/scale_factor/struct.ScaleFactor.html' title='struct euclid::scale_factor::ScaleFactor'>ScaleFactor</a>&lt;T, Src, Dst&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt; + <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/side_offsets/struct.TypedSideOffsets2D.html' title='struct euclid::side_offsets::TypedSideOffsets2D'>TypedSideOffsets2D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/side_offsets/struct.TypedSideOffsets2D.html' title='struct euclid::side_offsets::TypedSideOffsets2D'>TypedSideOffsets2D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/size/struct.TypedSize2D.html' title='struct euclid::size::TypedSize2D'>TypedSize2D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/size/struct.TypedSize2D.html' title='struct euclid::size::TypedSize2D'>TypedSize2D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='app_units/app_unit/struct.Au.html' title='struct app_units::app_unit::Au'>Au</a>&gt; for <a class='struct' href='app_units/app_unit/struct.Au.html' title='struct app_units::app_unit::Au'>Au</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/struct.Timespec.html' title='struct time::Timespec'>Timespec</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/struct.SteadyTime.html' title='struct time::SteadyTime'>SteadyTime</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/struct.Tm.html' title='struct time::Tm'>Tm</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='gfx_traits/struct.ByteIndex.html' title='struct gfx_traits::ByteIndex'>ByteIndex</a>&gt; for <a class='struct' href='gfx_traits/struct.ByteIndex.html' title='struct gfx_traits::ByteIndex'>ByteIndex</a>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='struct' href='style/context/struct.TraversalStatistics.html' title='struct style::context::TraversalStatistics'>TraversalStatistics</a>&gt; for &amp;'a <a class='struct' href='style/context/struct.TraversalStatistics.html' title='struct style::context::TraversalStatistics'>TraversalStatistics</a>","impl&lt;T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='style/logical_geometry/struct.LogicalSize.html' title='struct style::logical_geometry::LogicalSize'>LogicalSize</a>&lt;T&gt;&gt; for <a class='struct' href='style/logical_geometry/struct.LogicalSize.html' title='struct style::logical_geometry::LogicalSize'>LogicalSize</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='style/logical_geometry/struct.LogicalSize.html' title='struct style::logical_geometry::LogicalSize'>LogicalSize</a>&lt;T&gt;&gt; for <a class='struct' href='style/logical_geometry/struct.LogicalPoint.html' title='struct style::logical_geometry::LogicalPoint'>LogicalPoint</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='style/logical_geometry/struct.LogicalMargin.html' title='struct style::logical_geometry::LogicalMargin'>LogicalMargin</a>&lt;T&gt;&gt; for <a class='struct' href='style/logical_geometry/struct.LogicalMargin.html' title='struct style::logical_geometry::LogicalMargin'>LogicalMargin</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='style/logical_geometry/struct.LogicalMargin.html' title='struct style::logical_geometry::LogicalMargin'>LogicalMargin</a>&lt;T&gt;&gt; for <a class='struct' href='style/logical_geometry/struct.LogicalRect.html' title='struct style::logical_geometry::LogicalRect'>LogicalRect</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt; + <a class='trait' href='core/ops/trait.Sub.html' title='trait core::ops::Sub'>Sub</a>&lt;T, Output=T&gt; + <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a></span>","impl&lt;'a, 'b, T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'b <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt;&gt; for &amp;'a <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a> + <a class='trait' href='num_integer/trait.Integer.html' title='trait num_integer::Integer'>Integer</a></span>","impl&lt;T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt;&gt; for <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a> + <a class='trait' href='num_integer/trait.Integer.html' title='trait num_integer::Integer'>Integer</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt;&gt; for &amp;'a <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a> + <a class='trait' href='num_integer/trait.Integer.html' title='trait num_integer::Integer'>Integer</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt;&gt; for <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a> + <a class='trait' href='num_integer/trait.Integer.html' title='trait num_integer::Integer'>Integer</a></span>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.Instant.html' title='struct std::time::Instant'>Instant</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.SystemTime.html' title='struct std::time::SystemTime'>SystemTime</a>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='struct' href='openssl/bn/struct.BigNum.html' title='struct openssl::bn::BigNum'>BigNum</a>&gt; for &amp;'a <a class='struct' href='openssl/bn/struct.BigNum.html' title='struct openssl::bn::BigNum'>BigNum</a>","impl&lt;T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='ordered_float/struct.NotNaN.html' title='struct ordered_float::NotNaN'>NotNaN</a>&lt;T&gt;&gt; for <a class='struct' href='ordered_float/struct.NotNaN.html' title='struct ordered_float::NotNaN'>NotNaN</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='num_traits/float/trait.Float.html' title='trait num_traits::float::Float'>Float</a></span>","impl&lt;T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T&gt; for <a class='struct' href='ordered_float/struct.NotNaN.html' title='struct ordered_float::NotNaN'>NotNaN</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='num_traits/float/trait.Float.html' title='trait num_traits::float::Float'>Float</a></span>",];
implementors["selectors"] = ["impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a> for <a class='struct' href='selectors/parser/struct.Specificity.html' title='struct selectors::parser::Specificity'>Specificity</a>",];
implementors["servo"] = ["impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/struct.Timespec.html' title='struct time::Timespec'>Timespec</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/struct.SteadyTime.html' title='struct time::SteadyTime'>SteadyTime</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/struct.Tm.html' title='struct time::Tm'>Tm</a>","impl&lt;U, T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/length/struct.Length.html' title='struct euclid::length::Length'>Length</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/length/struct.Length.html' title='struct euclid::length::Length'>Length</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt; + <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/point/struct.TypedPoint2D.html' title='struct euclid::point::TypedPoint2D'>TypedPoint2D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/point/struct.TypedPoint2D.html' title='struct euclid::point::TypedPoint2D'>TypedPoint2D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/size/struct.TypedSize2D.html' title='struct euclid::size::TypedSize2D'>TypedSize2D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/point/struct.TypedPoint2D.html' title='struct euclid::point::TypedPoint2D'>TypedPoint2D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/point/struct.TypedPoint3D.html' title='struct euclid::point::TypedPoint3D'>TypedPoint3D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/point/struct.TypedPoint3D.html' title='struct euclid::point::TypedPoint3D'>TypedPoint3D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/point/struct.TypedPoint4D.html' title='struct euclid::point::TypedPoint4D'>TypedPoint4D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/point/struct.TypedPoint4D.html' title='struct euclid::point::TypedPoint4D'>TypedPoint4D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, Src, Dst&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/scale_factor/struct.ScaleFactor.html' title='struct euclid::scale_factor::ScaleFactor'>ScaleFactor</a>&lt;T, Src, Dst&gt;&gt; for <a class='struct' href='euclid/scale_factor/struct.ScaleFactor.html' title='struct euclid::scale_factor::ScaleFactor'>ScaleFactor</a>&lt;T, Src, Dst&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt; + <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/side_offsets/struct.TypedSideOffsets2D.html' title='struct euclid::side_offsets::TypedSideOffsets2D'>TypedSideOffsets2D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/side_offsets/struct.TypedSideOffsets2D.html' title='struct euclid::side_offsets::TypedSideOffsets2D'>TypedSideOffsets2D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/size/struct.TypedSize2D.html' title='struct euclid::size::TypedSize2D'>TypedSize2D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/size/struct.TypedSize2D.html' title='struct euclid::size::TypedSize2D'>TypedSize2D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='ordered_float/struct.NotNaN.html' title='struct ordered_float::NotNaN'>NotNaN</a>&lt;T&gt;&gt; for <a class='struct' href='ordered_float/struct.NotNaN.html' title='struct ordered_float::NotNaN'>NotNaN</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='num_traits/float/trait.Float.html' title='trait num_traits::float::Float'>Float</a></span>","impl&lt;T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T&gt; for <a class='struct' href='ordered_float/struct.NotNaN.html' title='struct ordered_float::NotNaN'>NotNaN</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='num_traits/float/trait.Float.html' title='trait num_traits::float::Float'>Float</a></span>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='app_units/app_unit/struct.Au.html' title='struct app_units::app_unit::Au'>Au</a>&gt; for <a class='struct' href='app_units/app_unit/struct.Au.html' title='struct app_units::app_unit::Au'>Au</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='simd/struct.i8x16.html' title='struct simd::i8x16'>i8x16</a>&gt; for <a class='struct' href='simd/struct.i8x16.html' title='struct simd::i8x16'>i8x16</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='simd/struct.u8x16.html' title='struct simd::u8x16'>u8x16</a>&gt; for <a class='struct' href='simd/struct.u8x16.html' title='struct simd::u8x16'>u8x16</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='simd/struct.i16x8.html' title='struct simd::i16x8'>i16x8</a>&gt; for <a class='struct' href='simd/struct.i16x8.html' title='struct simd::i16x8'>i16x8</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='simd/struct.u16x8.html' title='struct simd::u16x8'>u16x8</a>&gt; for <a class='struct' href='simd/struct.u16x8.html' title='struct simd::u16x8'>u16x8</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='simd/struct.i32x4.html' title='struct simd::i32x4'>i32x4</a>&gt; for <a class='struct' href='simd/struct.i32x4.html' title='struct simd::i32x4'>i32x4</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='simd/struct.u32x4.html' title='struct simd::u32x4'>u32x4</a>&gt; for <a class='struct' href='simd/struct.u32x4.html' title='struct simd::u32x4'>u32x4</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='simd/struct.f32x4.html' title='struct simd::f32x4'>f32x4</a>&gt; for <a class='struct' href='simd/struct.f32x4.html' title='struct simd::f32x4'>f32x4</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='simd/sixty_four/struct.i64x2.html' title='struct simd::sixty_four::i64x2'>i64x2</a>&gt; for <a class='struct' href='simd/sixty_four/struct.i64x2.html' title='struct simd::sixty_four::i64x2'>i64x2</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='simd/sixty_four/struct.u64x2.html' title='struct simd::sixty_four::u64x2'>u64x2</a>&gt; for <a class='struct' href='simd/sixty_four/struct.u64x2.html' title='struct simd::sixty_four::u64x2'>u64x2</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='simd/sixty_four/struct.f64x2.html' title='struct simd::sixty_four::f64x2'>f64x2</a>&gt; for <a class='struct' href='simd/sixty_four/struct.f64x2.html' title='struct simd::sixty_four::f64x2'>f64x2</a>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='struct' href='style/context/struct.TraversalStatistics.html' title='struct style::context::TraversalStatistics'>TraversalStatistics</a>&gt; for &amp;'a <a class='struct' href='style/context/struct.TraversalStatistics.html' title='struct style::context::TraversalStatistics'>TraversalStatistics</a>","impl&lt;T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='style/logical_geometry/struct.LogicalSize.html' title='struct style::logical_geometry::LogicalSize'>LogicalSize</a>&lt;T&gt;&gt; for <a class='struct' href='style/logical_geometry/struct.LogicalSize.html' title='struct style::logical_geometry::LogicalSize'>LogicalSize</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='style/logical_geometry/struct.LogicalSize.html' title='struct style::logical_geometry::LogicalSize'>LogicalSize</a>&lt;T&gt;&gt; for <a class='struct' href='style/logical_geometry/struct.LogicalPoint.html' title='struct style::logical_geometry::LogicalPoint'>LogicalPoint</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='style/logical_geometry/struct.LogicalMargin.html' title='struct style::logical_geometry::LogicalMargin'>LogicalMargin</a>&lt;T&gt;&gt; for <a class='struct' href='style/logical_geometry/struct.LogicalMargin.html' title='struct style::logical_geometry::LogicalMargin'>LogicalMargin</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='style/logical_geometry/struct.LogicalMargin.html' title='struct style::logical_geometry::LogicalMargin'>LogicalMargin</a>&lt;T&gt;&gt; for <a class='struct' href='style/logical_geometry/struct.LogicalRect.html' title='struct style::logical_geometry::LogicalRect'>LogicalRect</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt; + <a class='trait' href='core/ops/trait.Sub.html' title='trait core::ops::Sub'>Sub</a>&lt;T, Output=T&gt; + <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a></span>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a AutoLayoutCandidateGuess&gt; for &amp;'a AutoLayoutCandidateGuess","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.Instant.html' title='struct std::time::Instant'>Instant</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.SystemTime.html' title='struct std::time::SystemTime'>SystemTime</a>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='struct' href='openssl/bn/struct.BigNum.html' title='struct openssl::bn::BigNum'>BigNum</a>&gt; for &amp;'a <a class='struct' href='openssl/bn/struct.BigNum.html' title='struct openssl::bn::BigNum'>BigNum</a>","impl&lt;'a, 'b, T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'b <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt;&gt; for &amp;'a <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a> + <a class='trait' href='num_integer/trait.Integer.html' title='trait num_integer::Integer'>Integer</a></span>","impl&lt;T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt;&gt; for <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a> + <a class='trait' href='num_integer/trait.Integer.html' title='trait num_integer::Integer'>Integer</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt;&gt; for &amp;'a <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a> + <a class='trait' href='num_integer/trait.Integer.html' title='trait num_integer::Integer'>Integer</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt;&gt; for <a class='struct' href='num_rational/struct.Ratio.html' title='struct num_rational::Ratio'>Ratio</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a> + <a class='trait' href='num_integer/trait.Integer.html' title='trait num_integer::Integer'>Integer</a></span>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='gfx_traits/struct.ByteIndex.html' title='struct gfx_traits::ByteIndex'>ByteIndex</a>&gt; for <a class='struct' href='gfx_traits/struct.ByteIndex.html' title='struct gfx_traits::ByteIndex'>ByteIndex</a>",];
implementors["servo_config"] = ["impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.Instant.html' title='struct std::time::Instant'>Instant</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.SystemTime.html' title='struct std::time::SystemTime'>SystemTime</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='app_units/app_unit/struct.Au.html' title='struct app_units::app_unit::Au'>Au</a>&gt; for <a class='struct' href='app_units/app_unit/struct.Au.html' title='struct app_units::app_unit::Au'>Au</a>","impl&lt;U, T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/length/struct.Length.html' title='struct euclid::length::Length'>Length</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/length/struct.Length.html' title='struct euclid::length::Length'>Length</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt; + <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/point/struct.TypedPoint2D.html' title='struct euclid::point::TypedPoint2D'>TypedPoint2D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/point/struct.TypedPoint2D.html' title='struct euclid::point::TypedPoint2D'>TypedPoint2D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/size/struct.TypedSize2D.html' title='struct euclid::size::TypedSize2D'>TypedSize2D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/point/struct.TypedPoint2D.html' title='struct euclid::point::TypedPoint2D'>TypedPoint2D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/point/struct.TypedPoint3D.html' title='struct euclid::point::TypedPoint3D'>TypedPoint3D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/point/struct.TypedPoint3D.html' title='struct euclid::point::TypedPoint3D'>TypedPoint3D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/point/struct.TypedPoint4D.html' title='struct euclid::point::TypedPoint4D'>TypedPoint4D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/point/struct.TypedPoint4D.html' title='struct euclid::point::TypedPoint4D'>TypedPoint4D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, Src, Dst&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/scale_factor/struct.ScaleFactor.html' title='struct euclid::scale_factor::ScaleFactor'>ScaleFactor</a>&lt;T, Src, Dst&gt;&gt; for <a class='struct' href='euclid/scale_factor/struct.ScaleFactor.html' title='struct euclid::scale_factor::ScaleFactor'>ScaleFactor</a>&lt;T, Src, Dst&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt; + <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/side_offsets/struct.TypedSideOffsets2D.html' title='struct euclid::side_offsets::TypedSideOffsets2D'>TypedSideOffsets2D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/side_offsets/struct.TypedSideOffsets2D.html' title='struct euclid::side_offsets::TypedSideOffsets2D'>TypedSideOffsets2D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/size/struct.TypedSize2D.html' title='struct euclid::size::TypedSize2D'>TypedSize2D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/size/struct.TypedSize2D.html' title='struct euclid::size::TypedSize2D'>TypedSize2D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>",];
implementors["servo_rand"] = ["impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.Instant.html' title='struct std::time::Instant'>Instant</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.SystemTime.html' title='struct std::time::SystemTime'>SystemTime</a>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>",];
implementors["servo_remutex"] = ["impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.Instant.html' title='struct std::time::Instant'>Instant</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.SystemTime.html' title='struct std::time::SystemTime'>SystemTime</a>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>",];
implementors["shared_library"] = ["impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.Instant.html' title='struct std::time::Instant'>Instant</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.SystemTime.html' title='struct std::time::SystemTime'>SystemTime</a>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>",];
implementors["simd"] = ["impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a> for <a class='struct' href='simd/struct.i8x16.html' title='struct simd::i8x16'>i8x16</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a> for <a class='struct' href='simd/struct.u8x16.html' title='struct simd::u8x16'>u8x16</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a> for <a class='struct' href='simd/struct.i16x8.html' title='struct simd::i16x8'>i16x8</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a> for <a class='struct' href='simd/struct.u16x8.html' title='struct simd::u16x8'>u16x8</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a> for <a class='struct' href='simd/struct.i32x4.html' title='struct simd::i32x4'>i32x4</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a> for <a class='struct' href='simd/struct.u32x4.html' title='struct simd::u32x4'>u32x4</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a> for <a class='struct' href='simd/struct.f32x4.html' title='struct simd::f32x4'>f32x4</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a> for <a class='struct' href='simd/sixty_four/struct.i64x2.html' title='struct simd::sixty_four::i64x2'>i64x2</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a> for <a class='struct' href='simd/sixty_four/struct.u64x2.html' title='struct simd::sixty_four::u64x2'>u64x2</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a> for <a class='struct' href='simd/sixty_four/struct.f64x2.html' title='struct simd::sixty_four::f64x2'>f64x2</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a> for <a class='struct' href='simd/v256/struct.i8x32.html' title='struct simd::v256::i8x32'>i8x32</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a> for <a class='struct' href='simd/v256/struct.u8x32.html' title='struct simd::v256::u8x32'>u8x32</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a> for <a class='struct' href='simd/v256/struct.i16x16.html' title='struct simd::v256::i16x16'>i16x16</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a> for <a class='struct' href='simd/v256/struct.u16x16.html' title='struct simd::v256::u16x16'>u16x16</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a> for <a class='struct' href='simd/v256/struct.i32x8.html' title='struct simd::v256::i32x8'>i32x8</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a> for <a class='struct' href='simd/v256/struct.u32x8.html' title='struct simd::v256::u32x8'>u32x8</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a> for <a class='struct' href='simd/v256/struct.i64x4.html' title='struct simd::v256::i64x4'>i64x4</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a> for <a class='struct' href='simd/v256/struct.u64x4.html' title='struct simd::v256::u64x4'>u64x4</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a> for <a class='struct' href='simd/v256/struct.f64x4.html' title='struct simd::v256::f64x4'>f64x4</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a> for <a class='struct' href='simd/v256/struct.f32x8.html' title='struct simd::v256::f32x8'>f32x8</a>",];
implementors["std_unicode"] = [];
implementors["string_cache"] = ["impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.Instant.html' title='struct std::time::Instant'>Instant</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.SystemTime.html' title='struct std::time::SystemTime'>SystemTime</a>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>",];
implementors["style"] = ["impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/struct.Timespec.html' title='struct time::Timespec'>Timespec</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/struct.SteadyTime.html' title='struct time::SteadyTime'>SteadyTime</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/struct.Tm.html' title='struct time::Tm'>Tm</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.Instant.html' title='struct std::time::Instant'>Instant</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.SystemTime.html' title='struct std::time::SystemTime'>SystemTime</a>","impl&lt;T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='ordered_float/struct.NotNaN.html' title='struct ordered_float::NotNaN'>NotNaN</a>&lt;T&gt;&gt; for <a class='struct' href='ordered_float/struct.NotNaN.html' title='struct ordered_float::NotNaN'>NotNaN</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='num_traits/float/trait.Float.html' title='trait num_traits::float::Float'>Float</a></span>","impl&lt;T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T&gt; for <a class='struct' href='ordered_float/struct.NotNaN.html' title='struct ordered_float::NotNaN'>NotNaN</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='num_traits/float/trait.Float.html' title='trait num_traits::float::Float'>Float</a></span>","impl&lt;U, T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/length/struct.Length.html' title='struct euclid::length::Length'>Length</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/length/struct.Length.html' title='struct euclid::length::Length'>Length</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt; + <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/point/struct.TypedPoint2D.html' title='struct euclid::point::TypedPoint2D'>TypedPoint2D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/point/struct.TypedPoint2D.html' title='struct euclid::point::TypedPoint2D'>TypedPoint2D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/size/struct.TypedSize2D.html' title='struct euclid::size::TypedSize2D'>TypedSize2D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/point/struct.TypedPoint2D.html' title='struct euclid::point::TypedPoint2D'>TypedPoint2D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/point/struct.TypedPoint3D.html' title='struct euclid::point::TypedPoint3D'>TypedPoint3D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/point/struct.TypedPoint3D.html' title='struct euclid::point::TypedPoint3D'>TypedPoint3D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/point/struct.TypedPoint4D.html' title='struct euclid::point::TypedPoint4D'>TypedPoint4D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/point/struct.TypedPoint4D.html' title='struct euclid::point::TypedPoint4D'>TypedPoint4D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, Src, Dst&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/scale_factor/struct.ScaleFactor.html' title='struct euclid::scale_factor::ScaleFactor'>ScaleFactor</a>&lt;T, Src, Dst&gt;&gt; for <a class='struct' href='euclid/scale_factor/struct.ScaleFactor.html' title='struct euclid::scale_factor::ScaleFactor'>ScaleFactor</a>&lt;T, Src, Dst&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt; + <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/side_offsets/struct.TypedSideOffsets2D.html' title='struct euclid::side_offsets::TypedSideOffsets2D'>TypedSideOffsets2D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/side_offsets/struct.TypedSideOffsets2D.html' title='struct euclid::side_offsets::TypedSideOffsets2D'>TypedSideOffsets2D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/size/struct.TypedSize2D.html' title='struct euclid::size::TypedSize2D'>TypedSize2D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/size/struct.TypedSize2D.html' title='struct euclid::size::TypedSize2D'>TypedSize2D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='app_units/app_unit/struct.Au.html' title='struct app_units::app_unit::Au'>Au</a>&gt; for <a class='struct' href='app_units/app_unit/struct.Au.html' title='struct app_units::app_unit::Au'>Au</a>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a> for &amp;'a <a class='struct' href='style/context/struct.TraversalStatistics.html' title='struct style::context::TraversalStatistics'>TraversalStatistics</a>","impl&lt;T:&nbsp;<a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a> for <a class='struct' href='style/logical_geometry/struct.LogicalSize.html' title='struct style::logical_geometry::LogicalSize'>LogicalSize</a>&lt;T&gt;","impl&lt;T:&nbsp;<a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='style/logical_geometry/struct.LogicalSize.html' title='struct style::logical_geometry::LogicalSize'>LogicalSize</a>&lt;T&gt;&gt; for <a class='struct' href='style/logical_geometry/struct.LogicalPoint.html' title='struct style::logical_geometry::LogicalPoint'>LogicalPoint</a>&lt;T&gt;","impl&lt;T:&nbsp;<a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a> for <a class='struct' href='style/logical_geometry/struct.LogicalMargin.html' title='struct style::logical_geometry::LogicalMargin'>LogicalMargin</a>&lt;T&gt;","impl&lt;T:&nbsp;<a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt; + <a class='trait' href='core/ops/trait.Sub.html' title='trait core::ops::Sub'>Sub</a>&lt;T, Output=T&gt;&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='style/logical_geometry/struct.LogicalMargin.html' title='struct style::logical_geometry::LogicalMargin'>LogicalMargin</a>&lt;T&gt;&gt; for <a class='struct' href='style/logical_geometry/struct.LogicalRect.html' title='struct style::logical_geometry::LogicalRect'>LogicalRect</a>&lt;T&gt;",];
implementors["tendril"] = ["impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.Instant.html' title='struct std::time::Instant'>Instant</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.SystemTime.html' title='struct std::time::SystemTime'>SystemTime</a>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>",];
implementors["time"] = ["impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a> for <a class='struct' href='time/struct.Duration.html' title='struct time::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/struct.Duration.html' title='struct time::Duration'>Duration</a>&gt; for <a class='struct' href='time/sys/inner/unix/struct.SteadyTime.html' title='struct time::sys::inner::unix::SteadyTime'>SteadyTime</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/struct.Duration.html' title='struct time::Duration'>Duration</a>&gt; for <a class='struct' href='time/struct.Timespec.html' title='struct time::Timespec'>Timespec</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/struct.Duration.html' title='struct time::Duration'>Duration</a>&gt; for <a class='struct' href='time/struct.SteadyTime.html' title='struct time::SteadyTime'>SteadyTime</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/struct.Duration.html' title='struct time::Duration'>Duration</a>&gt; for <a class='struct' href='time/struct.Tm.html' title='struct time::Tm'>Tm</a>",];
implementors["url"] = ["impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.Instant.html' title='struct std::time::Instant'>Instant</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.SystemTime.html' title='struct std::time::SystemTime'>SystemTime</a>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>",];
implementors["void"] = [];
implementors["webrender"] = ["impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='app_units/app_unit/struct.Au.html' title='struct app_units::app_unit::Au'>Au</a>&gt; for <a class='struct' href='app_units/app_unit/struct.Au.html' title='struct app_units::app_unit::Au'>Au</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.Instant.html' title='struct std::time::Instant'>Instant</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.SystemTime.html' title='struct std::time::SystemTime'>SystemTime</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/struct.Timespec.html' title='struct time::Timespec'>Timespec</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/struct.SteadyTime.html' title='struct time::SteadyTime'>SteadyTime</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/struct.Tm.html' title='struct time::Tm'>Tm</a>","impl&lt;U, T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/length/struct.Length.html' title='struct euclid::length::Length'>Length</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/length/struct.Length.html' title='struct euclid::length::Length'>Length</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt; + <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/point/struct.TypedPoint2D.html' title='struct euclid::point::TypedPoint2D'>TypedPoint2D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/point/struct.TypedPoint2D.html' title='struct euclid::point::TypedPoint2D'>TypedPoint2D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/size/struct.TypedSize2D.html' title='struct euclid::size::TypedSize2D'>TypedSize2D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/point/struct.TypedPoint2D.html' title='struct euclid::point::TypedPoint2D'>TypedPoint2D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/point/struct.TypedPoint3D.html' title='struct euclid::point::TypedPoint3D'>TypedPoint3D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/point/struct.TypedPoint3D.html' title='struct euclid::point::TypedPoint3D'>TypedPoint3D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/point/struct.TypedPoint4D.html' title='struct euclid::point::TypedPoint4D'>TypedPoint4D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/point/struct.TypedPoint4D.html' title='struct euclid::point::TypedPoint4D'>TypedPoint4D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, Src, Dst&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/scale_factor/struct.ScaleFactor.html' title='struct euclid::scale_factor::ScaleFactor'>ScaleFactor</a>&lt;T, Src, Dst&gt;&gt; for <a class='struct' href='euclid/scale_factor/struct.ScaleFactor.html' title='struct euclid::scale_factor::ScaleFactor'>ScaleFactor</a>&lt;T, Src, Dst&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt; + <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/side_offsets/struct.TypedSideOffsets2D.html' title='struct euclid::side_offsets::TypedSideOffsets2D'>TypedSideOffsets2D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/side_offsets/struct.TypedSideOffsets2D.html' title='struct euclid::side_offsets::TypedSideOffsets2D'>TypedSideOffsets2D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/size/struct.TypedSize2D.html' title='struct euclid::size::TypedSize2D'>TypedSize2D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/size/struct.TypedSize2D.html' title='struct euclid::size::TypedSize2D'>TypedSize2D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>",];
implementors["websocket"] = ["impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='struct' href='openssl/bn/struct.BigNum.html' title='struct openssl::bn::BigNum'>BigNum</a>&gt; for &amp;'a <a class='struct' href='openssl/bn/struct.BigNum.html' title='struct openssl::bn::BigNum'>BigNum</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.Instant.html' title='struct std::time::Instant'>Instant</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.SystemTime.html' title='struct std::time::SystemTime'>SystemTime</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/struct.Timespec.html' title='struct time::Timespec'>Timespec</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/struct.SteadyTime.html' title='struct time::SteadyTime'>SteadyTime</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/struct.Tm.html' title='struct time::Tm'>Tm</a>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>",];
implementors["webvr_traits"] = ["impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='app_units/app_unit/struct.Au.html' title='struct app_units::app_unit::Au'>Au</a>&gt; for <a class='struct' href='app_units/app_unit/struct.Au.html' title='struct app_units::app_unit::Au'>Au</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.Instant.html' title='struct std::time::Instant'>Instant</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.SystemTime.html' title='struct std::time::SystemTime'>SystemTime</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/struct.Timespec.html' title='struct time::Timespec'>Timespec</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/struct.SteadyTime.html' title='struct time::SteadyTime'>SteadyTime</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/struct.Tm.html' title='struct time::Tm'>Tm</a>","impl&lt;U, T&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/length/struct.Length.html' title='struct euclid::length::Length'>Length</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/length/struct.Length.html' title='struct euclid::length::Length'>Length</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt; + <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/point/struct.TypedPoint2D.html' title='struct euclid::point::TypedPoint2D'>TypedPoint2D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/point/struct.TypedPoint2D.html' title='struct euclid::point::TypedPoint2D'>TypedPoint2D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/size/struct.TypedSize2D.html' title='struct euclid::size::TypedSize2D'>TypedSize2D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/point/struct.TypedPoint2D.html' title='struct euclid::point::TypedPoint2D'>TypedPoint2D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/point/struct.TypedPoint3D.html' title='struct euclid::point::TypedPoint3D'>TypedPoint3D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/point/struct.TypedPoint3D.html' title='struct euclid::point::TypedPoint3D'>TypedPoint3D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/point/struct.TypedPoint4D.html' title='struct euclid::point::TypedPoint4D'>TypedPoint4D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/point/struct.TypedPoint4D.html' title='struct euclid::point::TypedPoint4D'>TypedPoint4D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, Src, Dst&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/scale_factor/struct.ScaleFactor.html' title='struct euclid::scale_factor::ScaleFactor'>ScaleFactor</a>&lt;T, Src, Dst&gt;&gt; for <a class='struct' href='euclid/scale_factor/struct.ScaleFactor.html' title='struct euclid::scale_factor::ScaleFactor'>ScaleFactor</a>&lt;T, Src, Dst&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt; + <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/side_offsets/struct.TypedSideOffsets2D.html' title='struct euclid::side_offsets::TypedSideOffsets2D'>TypedSideOffsets2D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/side_offsets/struct.TypedSideOffsets2D.html' title='struct euclid::side_offsets::TypedSideOffsets2D'>TypedSideOffsets2D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;T, U&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='euclid/size/struct.TypedSize2D.html' title='struct euclid::size::TypedSize2D'>TypedSize2D</a>&lt;T, U&gt;&gt; for <a class='struct' href='euclid/size/struct.TypedSize2D.html' title='struct euclid::size::TypedSize2D'>TypedSize2D</a>&lt;T, U&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;T, Output=T&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>",];
implementors["ws"] = ["impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.Instant.html' title='struct std::time::Instant'>Instant</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.SystemTime.html' title='struct std::time::SystemTime'>SystemTime</a>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>",];
implementors["xml5ever"] = ["impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.Instant.html' title='struct std::time::Instant'>Instant</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='struct std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='std/time/struct.SystemTime.html' title='struct std::time::SystemTime'>SystemTime</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/struct.Timespec.html' title='struct time::Timespec'>Timespec</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/struct.SteadyTime.html' title='struct time::SteadyTime'>SteadyTime</a>","impl <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='struct' href='time/duration/struct.Duration.html' title='struct time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/struct.Tm.html' title='struct time::Tm'>Tm</a>","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='trait core::ops::Add'>Add</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>",];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
