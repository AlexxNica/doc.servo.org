(function() {var implementors = {};
implementors["alloc"] = ["impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a, T:&nbsp;<a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a>&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a [T]&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;[T]&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a str&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;str&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='struct alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='struct alloc::rc::Rc'>Rc</a>&lt;T&gt;",];
implementors["arrayvec"] = ["impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='struct alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='struct alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='struct std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt;","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='struct std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/io/error/enum.ErrorKind.html' title='enum std::io::error::ErrorKind'>ErrorKind</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='primitive' href='std/primitive.u128.html'>u128</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u128.html'>u128</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV4.html' title='struct std::net::addr::SocketAddrV4'>SocketAddrV4</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV6.html' title='struct std::net::addr::SocketAddrV6'>SocketAddrV6</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl&lt;I&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>I, <a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a> <span class='where fmt-newline'>where I: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='struct std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='enum std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='odds/slice/iter/struct.SliceCopyIter.html' title='struct odds::slice::iter::SliceCopyIter'>SliceCopyIter</a>&lt;'a, T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a></span>","impl&lt;'a, T, Slice&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a Slice&gt; for &amp;'a <a class='struct' href='odds/slice/struct.RevSlice.html' title='struct odds::slice::RevSlice'>RevSlice</a>&lt;T&gt; <span class='where fmt-newline'>where Slice: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl&lt;'a, T, Slice&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a mut Slice&gt; for &amp;'a mut <a class='struct' href='odds/slice/struct.RevSlice.html' title='struct odds::slice::RevSlice'>RevSlice</a>&lt;T&gt; <span class='where fmt-newline'>where Slice: <a class='trait' href='core/convert/trait.AsMut.html' title='trait core::convert::AsMut'>AsMut</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='odds/slice/struct.RevSlice.html' title='struct odds::slice::RevSlice'>RevSlice</a>&lt;T&gt;&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='trait core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>: <a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>ToOwned</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>::<a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>Owned</a> == <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;A:&nbsp;<a class='trait' href='arrayvec/array/trait.Array.html' title='trait arrayvec::array::Array'>Array</a>&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;A&gt; for <a class='struct' href='arrayvec/struct.ArrayVec.html' title='struct arrayvec::ArrayVec'>ArrayVec</a>&lt;A&gt;",];
implementors["atomic_refcell"] = ["impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='atomic_refcell/struct.AtomicRefCell.html' title='struct atomic_refcell::AtomicRefCell'>AtomicRefCell</a>&lt;T&gt;",];
implementors["audio_video_metadata"] = ["impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='audio_video_metadata/enums/enum.AudioType.html' title='enum audio_video_metadata::enums::AudioType'>AudioType</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='audio_video_metadata/enums/enum.VideoType.html' title='enum audio_video_metadata::enums::VideoType'>VideoType</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='audio_video_metadata/types/struct.AudioMetadata.html' title='struct audio_video_metadata::types::AudioMetadata'>AudioMetadata</a>&gt; for <a class='enum' href='audio_video_metadata/enums/enum.Metadata.html' title='enum audio_video_metadata::enums::Metadata'>Metadata</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='audio_video_metadata/types/struct.VideoMetadata.html' title='struct audio_video_metadata::types::VideoMetadata'>VideoMetadata</a>&gt; for <a class='enum' href='audio_video_metadata/enums/enum.Metadata.html' title='enum audio_video_metadata::enums::Metadata'>Metadata</a>",];
implementors["backtrace"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='struct' href='backtrace/struct.BacktraceFrame.html' title='struct backtrace::BacktraceFrame'>BacktraceFrame</a>&gt;&gt; for <a class='struct' href='backtrace/struct.Backtrace.html' title='struct backtrace::Backtrace'>Backtrace</a>",];
implementors["bincode"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>IoError</a>&gt; for <a class='type' href='bincode/serde/type.Error.html' title='type bincode::serde::Error'>Error</a>",];
implementors["brotli"] = ["impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='struct alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='struct alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='struct std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt;","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='struct std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/io/error/enum.ErrorKind.html' title='enum std::io::error::ErrorKind'>ErrorKind</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='primitive' href='std/primitive.u128.html'>u128</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u128.html'>u128</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV4.html' title='struct std::net::addr::SocketAddrV4'>SocketAddrV4</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV6.html' title='struct std::net::addr::SocketAddrV6'>SocketAddrV6</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl&lt;I&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>I, <a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a> <span class='where fmt-newline'>where I: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='struct std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='enum std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='trait core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>: <a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>ToOwned</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>::<a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>Owned</a> == <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;",];
implementors["collections"] = ["impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='collections/boxed/struct.Box.html' title='struct collections::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a [T]&gt; for <a class='struct' href='collections/boxed/struct.Box.html' title='struct collections::boxed::Box'>Box</a>&lt;[T]&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a str&gt; for <a class='struct' href='collections/boxed/struct.Box.html' title='struct collections::boxed::Box'>Box</a>&lt;str&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='struct alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='struct alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl&lt;T:&nbsp;<a class='trait' href='core/cmp/trait.Ord.html' title='trait core::cmp::Ord'>Ord</a>&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a str&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, str&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a str&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, str&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, str&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;u8&gt;","impl&lt;'a, T:&nbsp;<a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a>&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a [T]&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, [T]&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where [T]: <a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>ToOwned</a>&lt;Owned=<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a str&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;u8&gt;","impl&lt;'a, T:&nbsp;<a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a>&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a [T]&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, [T]&gt;","impl&lt;'a, T:&nbsp;<a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a>&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, [T]&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;",];
implementors["core"] = [];
implementors["cssparser"] = ["impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='struct alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='struct alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for <a class='struct' href='serde/bytes/struct.Bytes.html' title='struct serde::bytes::Bytes'>Bytes</a>&lt;'a&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;&gt; for <a class='struct' href='serde/bytes/struct.Bytes.html' title='struct serde::bytes::Bytes'>Bytes</a>&lt;'a&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;&gt; for <a class='struct' href='serde/bytes/bytebuf/struct.ByteBuf.html' title='struct serde::bytes::bytebuf::ByteBuf'>ByteBuf</a>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='struct std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt;","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='struct std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/io/error/enum.ErrorKind.html' title='enum std::io::error::ErrorKind'>ErrorKind</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='primitive' href='std/primitive.u128.html'>u128</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u128.html'>u128</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV4.html' title='struct std::net::addr::SocketAddrV4'>SocketAddrV4</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV6.html' title='struct std::net::addr::SocketAddrV6'>SocketAddrV6</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl&lt;I&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>I, <a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a> <span class='where fmt-newline'>where I: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='struct std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='enum std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='trait core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>: <a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>ToOwned</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>::<a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>Owned</a> == <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='cssparser/unicode_range/struct.Error.html' title='struct cssparser::unicode_range::Error'>Error</a>&gt; for <a class='primitive' href='std/primitive.tuple.html'>()</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>()</a>&gt; for <a class='struct' href='cssparser/unicode_range/struct.Error.html' title='struct cssparser::unicode_range::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='struct' href='cssparser/unicode_range/struct.Error.html' title='struct cssparser::unicode_range::Error'>Error</a>",];
implementors["dbus"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt; for <a class='enum' href='dbus/enum.MessageItem.html' title='enum dbus::MessageItem'>MessageItem</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u64.html'>u64</a>&gt; for <a class='enum' href='dbus/enum.MessageItem.html' title='enum dbus::MessageItem'>MessageItem</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='enum' href='dbus/enum.MessageItem.html' title='enum dbus::MessageItem'>MessageItem</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u16.html'>u16</a>&gt; for <a class='enum' href='dbus/enum.MessageItem.html' title='enum dbus::MessageItem'>MessageItem</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.i16.html'>i16</a>&gt; for <a class='enum' href='dbus/enum.MessageItem.html' title='enum dbus::MessageItem'>MessageItem</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.i32.html'>i32</a>&gt; for <a class='enum' href='dbus/enum.MessageItem.html' title='enum dbus::MessageItem'>MessageItem</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.i64.html'>i64</a>&gt; for <a class='enum' href='dbus/enum.MessageItem.html' title='enum dbus::MessageItem'>MessageItem</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.f64.html'>f64</a>&gt; for <a class='enum' href='dbus/enum.MessageItem.html' title='enum dbus::MessageItem'>MessageItem</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.bool.html'>bool</a>&gt; for <a class='enum' href='dbus/enum.MessageItem.html' title='enum dbus::MessageItem'>MessageItem</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for <a class='enum' href='dbus/enum.MessageItem.html' title='enum dbus::MessageItem'>MessageItem</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='dbus/enum.MessageItem.html' title='enum dbus::MessageItem'>MessageItem</a>&gt; + <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a> + <a class='trait' href='core/default/trait.Default.html' title='trait core::default::Default'>Default</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='dbus/enum.MessageItem.html' title='enum dbus::MessageItem'>MessageItem</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='dbus/enum.MessageItem.html' title='enum dbus::MessageItem'>MessageItem</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='dbus/struct.Path.html' title='struct dbus::Path'>Path</a>&lt;'static&gt;&gt; for <a class='enum' href='dbus/enum.MessageItem.html' title='enum dbus::MessageItem'>MessageItem</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='dbus/struct.OwnedFd.html' title='struct dbus::OwnedFd'>OwnedFd</a>&gt; for <a class='enum' href='dbus/enum.MessageItem.html' title='enum dbus::MessageItem'>MessageItem</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='enum' href='dbus/enum.MessageItem.html' title='enum dbus::MessageItem'>MessageItem</a>&gt;&gt; for <a class='enum' href='dbus/enum.MessageItem.html' title='enum dbus::MessageItem'>MessageItem</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a><a class='enum' href='dbus/enum.MessageItem.html' title='enum dbus::MessageItem'>MessageItem</a>, <a class='enum' href='dbus/enum.MessageItem.html' title='enum dbus::MessageItem'>MessageItem</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='dbus/enum.MessageItem.html' title='enum dbus::MessageItem'>MessageItem</a>","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='dbus/struct.Signature.html' title='struct dbus::Signature'>Signature</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'m <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='dbus/struct.Signature.html' title='struct dbus::Signature'>Signature</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'m <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='dbus/struct.Signature.html' title='struct dbus::Signature'>Signature</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='dbus/struct.Path.html' title='struct dbus::Path'>Path</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'m <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='dbus/struct.Path.html' title='struct dbus::Path'>Path</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'m <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='dbus/struct.Path.html' title='struct dbus::Path'>Path</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='dbus/struct.Member.html' title='struct dbus::Member'>Member</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'m <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='dbus/struct.Member.html' title='struct dbus::Member'>Member</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'m <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='dbus/struct.Member.html' title='struct dbus::Member'>Member</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='dbus/struct.Interface.html' title='struct dbus::Interface'>Interface</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'m <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='dbus/struct.Interface.html' title='struct dbus::Interface'>Interface</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'m <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='dbus/struct.Interface.html' title='struct dbus::Interface'>Interface</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='dbus/struct.BusName.html' title='struct dbus::BusName'>BusName</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'m <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='dbus/struct.BusName.html' title='struct dbus::BusName'>BusName</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'m <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='dbus/struct.BusName.html' title='struct dbus::BusName'>BusName</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='dbus/struct.ErrorName.html' title='struct dbus::ErrorName'>ErrorName</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'m <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='dbus/struct.ErrorName.html' title='struct dbus::ErrorName'>ErrorName</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'m <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='dbus/struct.ErrorName.html' title='struct dbus::ErrorName'>ErrorName</a>&lt;'m&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='dbus/struct.Signature.html' title='struct dbus::Signature'>Signature</a>&lt;'static&gt;&gt; for <a class='struct' href='dbus/methoddisp/struct.Argument.html' title='struct dbus::methoddisp::Argument'>Argument</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='dbus/methoddisp/struct.Argument.html' title='struct dbus::methoddisp::Argument'>Argument</a>","impl&lt;N:&nbsp;<a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt;, S:&nbsp;<a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='struct' href='dbus/struct.Signature.html' title='struct dbus::Signature'>Signature</a>&lt;'static&gt;&gt;&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>N, S<a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='struct' href='dbus/methoddisp/struct.Argument.html' title='struct dbus::methoddisp::Argument'>Argument</a>","impl&lt;T:&nbsp;<a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='struct' href='dbus/struct.ErrorName.html' title='struct dbus::ErrorName'>ErrorName</a>&lt;'static&gt;&gt;, M:&nbsp;<a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt;&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>T, M<a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='struct' href='dbus/methoddisp/struct.MethodErr.html' title='struct dbus::methoddisp::MethodErr'>MethodErr</a>",];
implementors["deflate"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='deflate/enum.Compression.html' title='enum deflate::Compression'>Compression</a>&gt; for <a class='struct' href='deflate/struct.CompressionOptions.html' title='struct deflate::CompressionOptions'>CompressionOptions</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='deflate/huffman_table/enum.HuffmanError.html' title='enum deflate::huffman_table::HuffmanError'>HuffmanError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>",];
implementors["enum_primitive"] = ["impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='struct alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='struct alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='struct std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt;","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='struct std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/io/error/enum.ErrorKind.html' title='enum std::io::error::ErrorKind'>ErrorKind</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='primitive' href='std/primitive.u128.html'>u128</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u128.html'>u128</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV4.html' title='struct std::net::addr::SocketAddrV4'>SocketAddrV4</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV6.html' title='struct std::net::addr::SocketAddrV6'>SocketAddrV6</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl&lt;I&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>I, <a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a> <span class='where fmt-newline'>where I: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='struct std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='enum std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='trait core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>: <a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>ToOwned</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>::<a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>Owned</a> == <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;",];
implementors["flate2"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='flate2/struct.DataError.html' title='struct flate2::DataError'>DataError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>",];
implementors["fontsan"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='fontsan/enum.Error.html' title='enum fontsan::Error'>Error</a>",];
implementors["gfx"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='idna/uts46/struct.Errors.html' title='struct idna::uts46::Errors'>Errors</a>&gt; for <a class='enum' href='url/parser/enum.ParseError.html' title='enum url::parser::ParseError'>ParseError</a>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='url/percent_encoding/struct.PercentEncode.html' title='struct url::percent_encoding::PercentEncode'>PercentEncode</a>&lt;'a, E&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt; <span class='where fmt-newline'>where E: <a class='trait' href='url/percent_encoding/trait.EncodeSet.html' title='trait url::percent_encoding::EncodeSet'>EncodeSet</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='url/percent_encoding/struct.PercentDecode.html' title='struct url::percent_encoding::PercentDecode'>PercentDecode</a>&lt;'a&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.bool.html'>bool</a>&gt; for <a class='struct' href='simd/struct.bool8i.html' title='struct simd::bool8i'>bool8i</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='simd/struct.bool8i.html' title='struct simd::bool8i'>bool8i</a>&gt; for <a class='primitive' href='std/primitive.bool.html'>bool</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.bool.html'>bool</a>&gt; for <a class='struct' href='simd/struct.bool16i.html' title='struct simd::bool16i'>bool16i</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='simd/struct.bool16i.html' title='struct simd::bool16i'>bool16i</a>&gt; for <a class='primitive' href='std/primitive.bool.html'>bool</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.bool.html'>bool</a>&gt; for <a class='struct' href='simd/struct.bool32i.html' title='struct simd::bool32i'>bool32i</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='simd/struct.bool32i.html' title='struct simd::bool32i'>bool32i</a>&gt; for <a class='primitive' href='std/primitive.bool.html'>bool</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.bool.html'>bool</a>&gt; for <a class='struct' href='simd/struct.bool32f.html' title='struct simd::bool32f'>bool32f</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='simd/struct.bool32f.html' title='struct simd::bool32f'>bool32f</a>&gt; for <a class='primitive' href='std/primitive.bool.html'>bool</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XAnyEvent.html' title='struct x11::xlib::XAnyEvent'>XAnyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XAnyEvent.html' title='struct x11::xlib::XAnyEvent'>XAnyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XAnyEvent.html' title='struct x11::xlib::XAnyEvent'>XAnyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XAnyEvent.html' title='struct x11::xlib::XAnyEvent'>XAnyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XButtonEvent.html' title='struct x11::xlib::XButtonEvent'>XButtonEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XButtonEvent.html' title='struct x11::xlib::XButtonEvent'>XButtonEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XButtonEvent.html' title='struct x11::xlib::XButtonEvent'>XButtonEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XButtonEvent.html' title='struct x11::xlib::XButtonEvent'>XButtonEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XCirculateEvent.html' title='struct x11::xlib::XCirculateEvent'>XCirculateEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XCirculateEvent.html' title='struct x11::xlib::XCirculateEvent'>XCirculateEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCirculateEvent.html' title='struct x11::xlib::XCirculateEvent'>XCirculateEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCirculateEvent.html' title='struct x11::xlib::XCirculateEvent'>XCirculateEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XCirculateRequestEvent.html' title='struct x11::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XCirculateRequestEvent.html' title='struct x11::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCirculateRequestEvent.html' title='struct x11::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCirculateRequestEvent.html' title='struct x11::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XClientMessageEvent.html' title='struct x11::xlib::XClientMessageEvent'>XClientMessageEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XClientMessageEvent.html' title='struct x11::xlib::XClientMessageEvent'>XClientMessageEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XClientMessageEvent.html' title='struct x11::xlib::XClientMessageEvent'>XClientMessageEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XClientMessageEvent.html' title='struct x11::xlib::XClientMessageEvent'>XClientMessageEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XColormapEvent.html' title='struct x11::xlib::XColormapEvent'>XColormapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XColormapEvent.html' title='struct x11::xlib::XColormapEvent'>XColormapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XColormapEvent.html' title='struct x11::xlib::XColormapEvent'>XColormapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XColormapEvent.html' title='struct x11::xlib::XColormapEvent'>XColormapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XConfigureEvent.html' title='struct x11::xlib::XConfigureEvent'>XConfigureEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XConfigureEvent.html' title='struct x11::xlib::XConfigureEvent'>XConfigureEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XConfigureEvent.html' title='struct x11::xlib::XConfigureEvent'>XConfigureEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XConfigureEvent.html' title='struct x11::xlib::XConfigureEvent'>XConfigureEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XConfigureRequestEvent.html' title='struct x11::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XConfigureRequestEvent.html' title='struct x11::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XConfigureRequestEvent.html' title='struct x11::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XConfigureRequestEvent.html' title='struct x11::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XCreateWindowEvent.html' title='struct x11::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XCreateWindowEvent.html' title='struct x11::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCreateWindowEvent.html' title='struct x11::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCreateWindowEvent.html' title='struct x11::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XCrossingEvent.html' title='struct x11::xlib::XCrossingEvent'>XCrossingEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XCrossingEvent.html' title='struct x11::xlib::XCrossingEvent'>XCrossingEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCrossingEvent.html' title='struct x11::xlib::XCrossingEvent'>XCrossingEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCrossingEvent.html' title='struct x11::xlib::XCrossingEvent'>XCrossingEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XDestroyWindowEvent.html' title='struct x11::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XDestroyWindowEvent.html' title='struct x11::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XDestroyWindowEvent.html' title='struct x11::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XDestroyWindowEvent.html' title='struct x11::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XErrorEvent.html' title='struct x11::xlib::XErrorEvent'>XErrorEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XErrorEvent.html' title='struct x11::xlib::XErrorEvent'>XErrorEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XErrorEvent.html' title='struct x11::xlib::XErrorEvent'>XErrorEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XErrorEvent.html' title='struct x11::xlib::XErrorEvent'>XErrorEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XExposeEvent.html' title='struct x11::xlib::XExposeEvent'>XExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XExposeEvent.html' title='struct x11::xlib::XExposeEvent'>XExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XExposeEvent.html' title='struct x11::xlib::XExposeEvent'>XExposeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XExposeEvent.html' title='struct x11::xlib::XExposeEvent'>XExposeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XFocusChangeEvent.html' title='struct x11::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XFocusChangeEvent.html' title='struct x11::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XFocusChangeEvent.html' title='struct x11::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XFocusChangeEvent.html' title='struct x11::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XGenericEventCookie.html' title='struct x11::xlib::XGenericEventCookie'>XGenericEventCookie</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XGenericEventCookie.html' title='struct x11::xlib::XGenericEventCookie'>XGenericEventCookie</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGenericEventCookie.html' title='struct x11::xlib::XGenericEventCookie'>XGenericEventCookie</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGenericEventCookie.html' title='struct x11::xlib::XGenericEventCookie'>XGenericEventCookie</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XGraphicsExposeEvent.html' title='struct x11::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XGraphicsExposeEvent.html' title='struct x11::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGraphicsExposeEvent.html' title='struct x11::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGraphicsExposeEvent.html' title='struct x11::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XGravityEvent.html' title='struct x11::xlib::XGravityEvent'>XGravityEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XGravityEvent.html' title='struct x11::xlib::XGravityEvent'>XGravityEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGravityEvent.html' title='struct x11::xlib::XGravityEvent'>XGravityEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGravityEvent.html' title='struct x11::xlib::XGravityEvent'>XGravityEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XKeyEvent.html' title='struct x11::xlib::XKeyEvent'>XKeyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XKeyEvent.html' title='struct x11::xlib::XKeyEvent'>XKeyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XKeyEvent.html' title='struct x11::xlib::XKeyEvent'>XKeyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XKeyEvent.html' title='struct x11::xlib::XKeyEvent'>XKeyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XKeymapEvent.html' title='struct x11::xlib::XKeymapEvent'>XKeymapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XKeymapEvent.html' title='struct x11::xlib::XKeymapEvent'>XKeymapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XKeymapEvent.html' title='struct x11::xlib::XKeymapEvent'>XKeymapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XKeymapEvent.html' title='struct x11::xlib::XKeymapEvent'>XKeymapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XMapEvent.html' title='struct x11::xlib::XMapEvent'>XMapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XMapEvent.html' title='struct x11::xlib::XMapEvent'>XMapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMapEvent.html' title='struct x11::xlib::XMapEvent'>XMapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMapEvent.html' title='struct x11::xlib::XMapEvent'>XMapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XMappingEvent.html' title='struct x11::xlib::XMappingEvent'>XMappingEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XMappingEvent.html' title='struct x11::xlib::XMappingEvent'>XMappingEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMappingEvent.html' title='struct x11::xlib::XMappingEvent'>XMappingEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMappingEvent.html' title='struct x11::xlib::XMappingEvent'>XMappingEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XMapRequestEvent.html' title='struct x11::xlib::XMapRequestEvent'>XMapRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XMapRequestEvent.html' title='struct x11::xlib::XMapRequestEvent'>XMapRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMapRequestEvent.html' title='struct x11::xlib::XMapRequestEvent'>XMapRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMapRequestEvent.html' title='struct x11::xlib::XMapRequestEvent'>XMapRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XMotionEvent.html' title='struct x11::xlib::XMotionEvent'>XMotionEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XMotionEvent.html' title='struct x11::xlib::XMotionEvent'>XMotionEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMotionEvent.html' title='struct x11::xlib::XMotionEvent'>XMotionEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMotionEvent.html' title='struct x11::xlib::XMotionEvent'>XMotionEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XNoExposeEvent.html' title='struct x11::xlib::XNoExposeEvent'>XNoExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XNoExposeEvent.html' title='struct x11::xlib::XNoExposeEvent'>XNoExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XNoExposeEvent.html' title='struct x11::xlib::XNoExposeEvent'>XNoExposeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XNoExposeEvent.html' title='struct x11::xlib::XNoExposeEvent'>XNoExposeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XPropertyEvent.html' title='struct x11::xlib::XPropertyEvent'>XPropertyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XPropertyEvent.html' title='struct x11::xlib::XPropertyEvent'>XPropertyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XPropertyEvent.html' title='struct x11::xlib::XPropertyEvent'>XPropertyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XPropertyEvent.html' title='struct x11::xlib::XPropertyEvent'>XPropertyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XReparentEvent.html' title='struct x11::xlib::XReparentEvent'>XReparentEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XReparentEvent.html' title='struct x11::xlib::XReparentEvent'>XReparentEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XReparentEvent.html' title='struct x11::xlib::XReparentEvent'>XReparentEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XReparentEvent.html' title='struct x11::xlib::XReparentEvent'>XReparentEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XResizeRequestEvent.html' title='struct x11::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XResizeRequestEvent.html' title='struct x11::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XResizeRequestEvent.html' title='struct x11::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XResizeRequestEvent.html' title='struct x11::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XSelectionClearEvent.html' title='struct x11::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XSelectionClearEvent.html' title='struct x11::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionClearEvent.html' title='struct x11::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionClearEvent.html' title='struct x11::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XSelectionEvent.html' title='struct x11::xlib::XSelectionEvent'>XSelectionEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XSelectionEvent.html' title='struct x11::xlib::XSelectionEvent'>XSelectionEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionEvent.html' title='struct x11::xlib::XSelectionEvent'>XSelectionEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionEvent.html' title='struct x11::xlib::XSelectionEvent'>XSelectionEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XSelectionRequestEvent.html' title='struct x11::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XSelectionRequestEvent.html' title='struct x11::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionRequestEvent.html' title='struct x11::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionRequestEvent.html' title='struct x11::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XUnmapEvent.html' title='struct x11::xlib::XUnmapEvent'>XUnmapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XUnmapEvent.html' title='struct x11::xlib::XUnmapEvent'>XUnmapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XUnmapEvent.html' title='struct x11::xlib::XUnmapEvent'>XUnmapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XUnmapEvent.html' title='struct x11::xlib::XUnmapEvent'>XUnmapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XVisibilityEvent.html' title='struct x11::xlib::XVisibilityEvent'>XVisibilityEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XVisibilityEvent.html' title='struct x11::xlib::XVisibilityEvent'>XVisibilityEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XVisibilityEvent.html' title='struct x11::xlib::XVisibilityEvent'>XVisibilityEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XVisibilityEvent.html' title='struct x11::xlib::XVisibilityEvent'>XVisibilityEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.i8.html'>i8</a><a class='primitive' href='std/primitive.array.html'>; 20]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 20]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.i16.html'>i16</a><a class='primitive' href='std/primitive.array.html'>; 10]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 10]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.i64.html'>i64</a><a class='primitive' href='std/primitive.array.html'>; 5]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u64.html'>u64</a><a class='primitive' href='std/primitive.array.html'>; 5]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xf86vmode/struct.XF86VidModeNotifyEvent.html' title='struct x11::xf86vmode::XF86VidModeNotifyEvent'>XF86VidModeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xf86vmode/struct.XF86VidModeNotifyEvent.html' title='struct x11::xf86vmode::XF86VidModeNotifyEvent'>XF86VidModeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xf86vmode/struct.XF86VidModeNotifyEvent.html' title='struct x11::xf86vmode::XF86VidModeNotifyEvent'>XF86VidModeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xf86vmode/struct.XF86VidModeNotifyEvent.html' title='struct x11::xf86vmode::XF86VidModeNotifyEvent'>XF86VidModeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRScreenChangeNotifyEvent.html' title='struct x11::xrandr::XRRScreenChangeNotifyEvent'>XRRScreenChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRScreenChangeNotifyEvent.html' title='struct x11::xrandr::XRRScreenChangeNotifyEvent'>XRRScreenChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRScreenChangeNotifyEvent.html' title='struct x11::xrandr::XRRScreenChangeNotifyEvent'>XRRScreenChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRScreenChangeNotifyEvent.html' title='struct x11::xrandr::XRRScreenChangeNotifyEvent'>XRRScreenChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRNotifyEvent.html' title='struct x11::xrandr::XRRNotifyEvent'>XRRNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRNotifyEvent.html' title='struct x11::xrandr::XRRNotifyEvent'>XRRNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRNotifyEvent.html' title='struct x11::xrandr::XRRNotifyEvent'>XRRNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRNotifyEvent.html' title='struct x11::xrandr::XRRNotifyEvent'>XRRNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRROutputChangeNotifyEvent.html' title='struct x11::xrandr::XRROutputChangeNotifyEvent'>XRROutputChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRROutputChangeNotifyEvent.html' title='struct x11::xrandr::XRROutputChangeNotifyEvent'>XRROutputChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRROutputChangeNotifyEvent.html' title='struct x11::xrandr::XRROutputChangeNotifyEvent'>XRROutputChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRROutputChangeNotifyEvent.html' title='struct x11::xrandr::XRROutputChangeNotifyEvent'>XRROutputChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRCrtcChangeNotifyEvent.html' title='struct x11::xrandr::XRRCrtcChangeNotifyEvent'>XRRCrtcChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRCrtcChangeNotifyEvent.html' title='struct x11::xrandr::XRRCrtcChangeNotifyEvent'>XRRCrtcChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRCrtcChangeNotifyEvent.html' title='struct x11::xrandr::XRRCrtcChangeNotifyEvent'>XRRCrtcChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRCrtcChangeNotifyEvent.html' title='struct x11::xrandr::XRRCrtcChangeNotifyEvent'>XRRCrtcChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRROutputPropertyNotifyEvent.html' title='struct x11::xrandr::XRROutputPropertyNotifyEvent'>XRROutputPropertyNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRROutputPropertyNotifyEvent.html' title='struct x11::xrandr::XRROutputPropertyNotifyEvent'>XRROutputPropertyNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRROutputPropertyNotifyEvent.html' title='struct x11::xrandr::XRROutputPropertyNotifyEvent'>XRROutputPropertyNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRROutputPropertyNotifyEvent.html' title='struct x11::xrandr::XRROutputPropertyNotifyEvent'>XRROutputPropertyNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRProviderChangeNotifyEvent.html' title='struct x11::xrandr::XRRProviderChangeNotifyEvent'>XRRProviderChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRProviderChangeNotifyEvent.html' title='struct x11::xrandr::XRRProviderChangeNotifyEvent'>XRRProviderChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRProviderChangeNotifyEvent.html' title='struct x11::xrandr::XRRProviderChangeNotifyEvent'>XRRProviderChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRProviderChangeNotifyEvent.html' title='struct x11::xrandr::XRRProviderChangeNotifyEvent'>XRRProviderChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRProviderPropertyNotifyEvent.html' title='struct x11::xrandr::XRRProviderPropertyNotifyEvent'>XRRProviderPropertyNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRProviderPropertyNotifyEvent.html' title='struct x11::xrandr::XRRProviderPropertyNotifyEvent'>XRRProviderPropertyNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRProviderPropertyNotifyEvent.html' title='struct x11::xrandr::XRRProviderPropertyNotifyEvent'>XRRProviderPropertyNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRProviderPropertyNotifyEvent.html' title='struct x11::xrandr::XRRProviderPropertyNotifyEvent'>XRRProviderPropertyNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRResourceChangeNotifyEvent.html' title='struct x11::xrandr::XRRResourceChangeNotifyEvent'>XRRResourceChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRResourceChangeNotifyEvent.html' title='struct x11::xrandr::XRRResourceChangeNotifyEvent'>XRRResourceChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRResourceChangeNotifyEvent.html' title='struct x11::xrandr::XRRResourceChangeNotifyEvent'>XRRResourceChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRResourceChangeNotifyEvent.html' title='struct x11::xrandr::XRRResourceChangeNotifyEvent'>XRRResourceChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xss/struct.XScreenSaverNotifyEvent.html' title='struct x11::xss::XScreenSaverNotifyEvent'>XScreenSaverNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xss/struct.XScreenSaverNotifyEvent.html' title='struct x11::xss::XScreenSaverNotifyEvent'>XScreenSaverNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xss/struct.XScreenSaverNotifyEvent.html' title='struct x11::xss::XScreenSaverNotifyEvent'>XScreenSaverNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xss/struct.XScreenSaverNotifyEvent.html' title='struct x11::xss::XScreenSaverNotifyEvent'>XScreenSaverNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='enum' href='bincode/serde/enum.ErrorKind.html' title='enum bincode::serde::ErrorKind'>ErrorKind</a>&gt;","impl&lt;'a, Static&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='string_cache/atom/struct.Atom.html' title='struct string_cache::atom::Atom'>Atom</a>&lt;Static&gt; <span class='where fmt-newline'>where Static: <a class='trait' href='string_cache/atom/trait.StaticAtomSet.html' title='trait string_cache::atom::StaticAtomSet'>StaticAtomSet</a></span>","impl&lt;'a, Static&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='string_cache/atom/struct.Atom.html' title='struct string_cache::atom::Atom'>Atom</a>&lt;Static&gt; <span class='where fmt-newline'>where Static: <a class='trait' href='string_cache/atom/trait.StaticAtomSet.html' title='trait string_cache::atom::StaticAtomSet'>StaticAtomSet</a></span>","impl&lt;Static&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='string_cache/atom/struct.Atom.html' title='struct string_cache::atom::Atom'>Atom</a>&lt;Static&gt; <span class='where fmt-newline'>where Static: <a class='trait' href='string_cache/atom/trait.StaticAtomSet.html' title='trait string_cache::atom::StaticAtomSet'>StaticAtomSet</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;Specificity&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='style/restyle_hints/struct.RestyleHint.html' title='struct style::restyle_hints::RestyleHint'>RestyleHint</a>&gt; for <a class='struct' href='style/data/struct.StoredRestyleHint.html' title='struct style::data::StoredRestyleHint'>StoredRestyleHint</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='style/stylesheets/enum.SingleRuleParseError.html' title='enum style::stylesheets::SingleRuleParseError'>SingleRuleParseError</a>&gt; for <a class='enum' href='style/stylesheets/enum.RulesMutateError.html' title='enum style::stylesheets::RulesMutateError'>RulesMutateError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='style/values/computed/length/enum.LengthOrPercentage.html' title='enum style::values::computed::length::LengthOrPercentage'>LengthOrPercentage</a>&gt; for <a class='struct' href='style/values/computed/length/struct.CalcLengthOrPercentage.html' title='struct style::values::computed::length::CalcLengthOrPercentage'>CalcLengthOrPercentage</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='style/values/computed/length/enum.LengthOrPercentageOrAuto.html' title='enum style::values::computed::length::LengthOrPercentageOrAuto'>LengthOrPercentageOrAuto</a>&gt; for <a class='enum' href='core/option/enum.Option.html' title='enum core::option::Option'>Option</a>&lt;<a class='struct' href='style/values/computed/length/struct.CalcLengthOrPercentage.html' title='struct style::values::computed::length::CalcLengthOrPercentage'>CalcLengthOrPercentage</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='style/values/specified/length/enum.NoCalcLength.html' title='enum style::values::specified::length::NoCalcLength'>NoCalcLength</a>&gt; for <a class='enum' href='style/values/specified/length/enum.Length.html' title='enum style::values::specified::length::Length'>Length</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='style/values/specified/length/enum.Length.html' title='enum style::values::specified::length::Length'>Length</a>&gt; for <a class='enum' href='style/values/specified/length/enum.LengthOrPercentage.html' title='enum style::values::specified::length::LengthOrPercentage'>LengthOrPercentage</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='style/values/specified/length/enum.NoCalcLength.html' title='enum style::values::specified::length::NoCalcLength'>NoCalcLength</a>&gt; for <a class='enum' href='style/values/specified/length/enum.LengthOrPercentage.html' title='enum style::values::specified::length::LengthOrPercentage'>LengthOrPercentage</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='style/values/specified/length/struct.Percentage.html' title='struct style::values::specified::length::Percentage'>Percentage</a>&gt; for <a class='enum' href='style/values/specified/length/enum.LengthOrPercentage.html' title='enum style::values::specified::length::LengthOrPercentage'>LengthOrPercentage</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='style/values/specified/length/enum.NoCalcLength.html' title='enum style::values::specified::length::NoCalcLength'>NoCalcLength</a>&gt; for <a class='enum' href='style/values/specified/length/enum.LengthOrPercentageOrAuto.html' title='enum style::values::specified::length::LengthOrPercentageOrAuto'>LengthOrPercentageOrAuto</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='style/values/specified/length/struct.Percentage.html' title='struct style::values::specified::length::Percentage'>Percentage</a>&gt; for <a class='enum' href='style/values/specified/length/enum.LengthOrPercentageOrAuto.html' title='enum style::values::specified::length::LengthOrPercentageOrAuto'>LengthOrPercentageOrAuto</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='style/properties/longhands/background_origin/single_value/computed_value/enum.T.html' title='enum style::properties::longhands::background_origin::single_value::computed_value::T'>T</a>&gt; for <a class='enum' href='style/properties/longhands/background_clip/single_value/computed_value/enum.T.html' title='enum style::properties::longhands::background_clip::single_value::computed_value::T'>T</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='style/properties/longhands/transform/computed_value/struct.ComputedMatrix.html' title='struct style::properties::longhands::transform::computed_value::ComputedMatrix'>ComputedMatrix</a>&gt; for <a class='struct' href='style/properties/animated_properties/struct.MatrixDecomposed2D.html' title='struct style::properties::animated_properties::MatrixDecomposed2D'>MatrixDecomposed2D</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='style/properties/animated_properties/struct.MatrixDecomposed2D.html' title='struct style::properties::animated_properties::MatrixDecomposed2D'>MatrixDecomposed2D</a>&gt; for <a class='struct' href='style/properties/longhands/transform/computed_value/struct.ComputedMatrix.html' title='struct style::properties::longhands::transform::computed_value::ComputedMatrix'>ComputedMatrix</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='style/properties/animated_properties/struct.MatrixDecomposed3D.html' title='struct style::properties::animated_properties::MatrixDecomposed3D'>MatrixDecomposed3D</a>&gt; for <a class='struct' href='style/properties/longhands/transform/computed_value/struct.ComputedMatrix.html' title='struct style::properties::longhands::transform::computed_value::ComputedMatrix'>ComputedMatrix</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='ordered_float/struct.OrderedFloat.html' title='struct ordered_float::OrderedFloat'>OrderedFloat</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='num_traits/float/trait.Float.html' title='trait num_traits::float::Float'>Float</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='ordered_float/struct.NotNaN.html' title='struct ordered_float::NotNaN'>NotNaN</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='num_traits/float/trait.Float.html' title='trait num_traits::float::Float'>Float</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for <a class='struct' href='serde/bytes/struct.Bytes.html' title='struct serde::bytes::Bytes'>Bytes</a>&lt;'a&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;&gt; for <a class='struct' href='serde/bytes/struct.Bytes.html' title='struct serde::bytes::Bytes'>Bytes</a>&lt;'a&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;&gt; for <a class='struct' href='serde/bytes/bytebuf/struct.ByteBuf.html' title='struct serde::bytes::bytebuf::ByteBuf'>ByteBuf</a>","impl&lt;O, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;O&gt; for <a class='struct' href='owning_ref/struct.OwningRef.html' title='struct owning_ref::OwningRef'>OwningRef</a>&lt;O, T&gt; <span class='where fmt-newline'>where O: <a class='trait' href='owning_ref/trait.StableAddress.html' title='trait owning_ref::StableAddress'>StableAddress</a>&lt;Target=T&gt; + <a class='trait' href='core/ops/trait.Deref.html' title='trait core::ops::Deref'>Deref</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T: ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='enum' href='webrender_traits/enum.PropertyBinding.html' title='enum webrender_traits::PropertyBinding'>PropertyBinding</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='webrender_traits/struct.PropertyBindingKey.html' title='struct webrender_traits::PropertyBindingKey'>PropertyBindingKey</a>&lt;T&gt;&gt; for <a class='enum' href='webrender_traits/enum.PropertyBinding.html' title='enum webrender_traits::PropertyBinding'>PropertyBinding</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='webrender_traits/struct.ColorF.html' title='struct webrender_traits::ColorF'>ColorF</a>&gt; for <a class='struct' href='webrender_traits/struct.ColorU.html' title='struct webrender_traits::ColorU'>ColorU</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;Error&gt; for <a class='primitive' href='std/primitive.tuple.html'>()</a>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='struct std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt;","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='struct std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/io/error/enum.ErrorKind.html' title='enum std::io::error::ErrorKind'>ErrorKind</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='primitive' href='std/primitive.u128.html'>u128</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u128.html'>u128</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV4.html' title='struct std::net::addr::SocketAddrV4'>SocketAddrV4</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV6.html' title='struct std::net::addr::SocketAddrV6'>SocketAddrV6</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl&lt;I&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>I, <a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a> <span class='where fmt-newline'>where I: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='struct std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='enum std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='png/decoder/stream/enum.DecodingError.html' title='enum png::decoder::stream::DecodingError'>DecodingError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='png/decoder/stream/enum.DecodingError.html' title='enum png::decoder::stream::DecodingError'>DecodingError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='png/decoder/stream/enum.DecodingError.html' title='enum png::decoder::stream::DecodingError'>DecodingError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='png/encoder/enum.EncodingError.html' title='enum png::encoder::EncodingError'>EncodingError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='png/encoder/enum.EncodingError.html' title='enum png::encoder::EncodingError'>EncodingError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='websocket/result/enum.WebSocketError.html' title='enum websocket::result::WebSocketError'>WebSocketError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>&gt; for <a class='enum' href='websocket/result/enum.WebSocketError.html' title='enum websocket::result::WebSocketError'>WebSocketError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='url/parser/enum.ParseError.html' title='enum url::parser::ParseError'>ParseError</a>&gt; for <a class='enum' href='websocket/result/enum.WebSocketError.html' title='enum websocket::result::WebSocketError'>WebSocketError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='openssl/ssl/error/enum.SslError.html' title='enum openssl::ssl::error::SslError'>SslError</a>&gt; for <a class='enum' href='websocket/result/enum.WebSocketError.html' title='enum websocket::result::WebSocketError'>WebSocketError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='core/str/struct.Utf8Error.html' title='struct core::str::Utf8Error'>Utf8Error</a>&gt; for <a class='enum' href='websocket/result/enum.WebSocketError.html' title='enum websocket::result::WebSocketError'>WebSocketError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='websocket/result/enum.WSUrlErrorKind.html' title='enum websocket::result::WSUrlErrorKind'>WSUrlErrorKind</a>&gt; for <a class='enum' href='websocket/result/enum.WebSocketError.html' title='enum websocket::result::WebSocketError'>WebSocketError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='gif/reader/decoder/enum.DecodingError.html' title='enum gif::reader::decoder::DecodingError'>DecodingError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a><a class='enum' href='png/common/enum.ColorType.html' title='enum png::common::ColorType'>ColorType</a>, <a class='enum' href='png/common/enum.BitDepth.html' title='enum png::common::BitDepth'>BitDepth</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='image/color/enum.ColorType.html' title='enum image::color::ColorType'>ColorType</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='image/color/enum.ColorType.html' title='enum image::color::ColorType'>ColorType</a>&gt; for <a class='primitive' href='std/primitive.tuple.html'>(</a><a class='enum' href='png/common/enum.ColorType.html' title='enum png::common::ColorType'>ColorType</a>, <a class='enum' href='png/common/enum.BitDepth.html' title='enum png::common::BitDepth'>BitDepth</a><a class='primitive' href='std/primitive.tuple.html'>)</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='png/decoder/stream/enum.DecodingError.html' title='enum png::decoder::stream::DecodingError'>DecodingError</a>&gt; for <a class='enum' href='image/image/enum.ImageError.html' title='enum image::image::ImageError'>ImageError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='jpeg_decoder/decoder/enum.PixelFormat.html' title='enum jpeg_decoder::decoder::PixelFormat'>PixelFormat</a>&gt; for <a class='enum' href='image/color/enum.ColorType.html' title='enum image::color::ColorType'>ColorType</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='jpeg_decoder/error/enum.Error.html' title='enum jpeg_decoder::error::Error'>Error</a>&gt; for <a class='enum' href='image/image/enum.ImageError.html' title='enum image::image::ImageError'>ImageError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='gif/reader/decoder/enum.DecodingError.html' title='enum gif::reader::decoder::DecodingError'>DecodingError</a>&gt; for <a class='enum' href='image/image/enum.ImageError.html' title='enum image::image::ImageError'>ImageError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='image/image/enum.ImageError.html' title='enum image::image::ImageError'>ImageError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='rustc_serialize/json/enum.ParserError.html' title='enum rustc_serialize::json::ParserError'>ParserError</a>&gt; for <a class='enum' href='rustc_serialize/json/enum.DecoderError.html' title='enum rustc_serialize::json::DecoderError'>DecoderError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='rustc_serialize/json/enum.ParserError.html' title='enum rustc_serialize::json::ParserError'>ParserError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='core/fmt/struct.Error.html' title='struct core::fmt::Error'>Error</a>&gt; for <a class='enum' href='rustc_serialize/json/enum.EncoderError.html' title='enum rustc_serialize::json::EncoderError'>EncoderError</a>","impl&lt;'a, R&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a mut R&gt; for <a class='enum' href='hyper/client/enum.Body.html' title='enum hyper::client::Body'>Body</a>&lt;'a&gt; <span class='where fmt-newline'>where R: <a class='trait' href='std/io/trait.Read.html' title='trait std::io::Read'>Read</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='url/parser/enum.ParseError.html' title='enum url::parser::ParseError'>ParseError</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='openssl/ssl/error/enum.SslError.html' title='enum openssl::ssl::error::SslError'>SslError</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='core/str/struct.Utf8Error.html' title='struct core::str::Utf8Error'>Utf8Error</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.FromUtf8Error.html' title='struct collections::string::FromUtf8Error'>FromUtf8Error</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='httparse/enum.Error.html' title='enum httparse::Error'>Error</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='solicit/http/enum.HttpError.html' title='enum solicit::http::HttpError'>HttpError</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='hyper/http/h1/struct.EndError.html' title='struct hyper::http::h1::EndError'>EndError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a> <span class='where fmt-newline'>where W: <a class='trait' href='std/io/trait.Write.html' title='trait std::io::Write'>Write</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='hyper/net/trait.NetworkStream.html' title='trait hyper::net::NetworkStream'>NetworkStream</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='hyper/net/trait.NetworkStream.html' title='trait hyper::net::NetworkStream'>NetworkStream</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/tcp/struct.TcpListener.html' title='struct std::net::tcp::TcpListener'>TcpListener</a>&gt; for <a class='struct' href='hyper/net/struct.HttpListener.html' title='struct hyper::net::HttpListener'>HttpListener</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='trait core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>: <a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>ToOwned</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>::<a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>Owned</a> == <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='url/struct.Url.html' title='struct url::Url'>Url</a>&gt; for <a class='struct' href='servo_url/struct.ServoUrl.html' title='struct servo_url::ServoUrl'>ServoUrl</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='deflate/compression_options/enum.Compression.html' title='enum deflate::compression_options::Compression'>Compression</a>&gt; for <a class='struct' href='deflate/compression_options/struct.CompressionOptions.html' title='struct deflate::compression_options::CompressionOptions'>CompressionOptions</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;HuffmanError&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;&gt; for <a class='struct' href='solicit/http/frame/struct.RawFrame.html' title='struct solicit::http::frame::RawFrame'>RawFrame</a>","impl&lt;E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='enum' href='solicit/http/session/enum.StreamDataError.html' title='enum solicit::http::session::StreamDataError'>StreamDataError</a> <span class='where fmt-newline'>where E: <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a> + 'static</span>","impl&lt;E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='enum' href='solicit/http/enum.HttpError.html' title='enum solicit::http::HttpError'>HttpError</a> <span class='where fmt-newline'>where E: <a class='trait' href='solicit/http/client/trait.HttpConnectError.html' title='trait solicit::http::client::HttpConnectError'>HttpConnectError</a> + 'static</span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='struct' href='solicit/http/client/struct.CleartextConnectError.html' title='struct solicit::http::client::CleartextConnectError'>CleartextConnectError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='solicit/http/enum.HttpError.html' title='enum solicit::http::HttpError'>HttpError</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='atomic_refcell/struct.AtomicRefCell.html' title='struct atomic_refcell::AtomicRefCell'>AtomicRefCell</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='enum' href='hyper/header/common/referrer_policy/enum.ReferrerPolicy.html' title='enum hyper::header::common::referrer_policy::ReferrerPolicy'>ReferrerPolicy</a>&gt; for <a class='enum' href='net_traits/enum.ReferrerPolicy.html' title='enum net_traits::ReferrerPolicy'>ReferrerPolicy</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for &amp;'a <a class='struct' href='mio/iovec/struct.IoVec.html' title='struct mio::iovec::IoVec'>IoVec</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a mut [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for &amp;'a mut <a class='struct' href='mio/iovec/struct.IoVec.html' title='struct mio::iovec::IoVec'>IoVec</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for &amp;'a IoVec","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a mut [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for &amp;'a mut IoVec","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.usize.html'>usize</a>&gt; for <a class='struct' href='mio/token/struct.Token.html' title='struct mio::token::Token'>Token</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='mio/token/struct.Token.html' title='struct mio::token::Token'>Token</a>&gt; for <a class='primitive' href='std/primitive.usize.html'>usize</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sync/mpsc/struct.SendError.html' title='struct std::sync::mpsc::SendError'>SendError</a>&lt;T&gt;&gt; for <a class='enum' href='mio/channel/enum.SendError.html' title='enum mio::channel::SendError'>SendError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='mio/channel/enum.SendError.html' title='enum mio::channel::SendError'>SendError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/sync/mpsc/enum.TrySendError.html' title='enum std::sync::mpsc::TrySendError'>TrySendError</a>&lt;T&gt;&gt; for <a class='enum' href='mio/channel/enum.TrySendError.html' title='enum mio::channel::TrySendError'>TrySendError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sync/mpsc/struct.SendError.html' title='struct std::sync::mpsc::SendError'>SendError</a>&lt;T&gt;&gt; for <a class='enum' href='mio/channel/enum.TrySendError.html' title='enum mio::channel::TrySendError'>TrySendError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='mio/channel/enum.TrySendError.html' title='enum mio::channel::TrySendError'>TrySendError</a>&lt;T&gt;","impl&lt;M&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='mio/channel/enum.TrySendError.html' title='enum mio::channel::TrySendError'>TrySendError</a>&lt;M&gt;&gt; for <a class='enum' href='mio/deprecated/notify/enum.NotifyError.html' title='enum mio::deprecated::notify::NotifyError'>NotifyError</a>&lt;M&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;UnixSocket&gt; for <a class='struct' href='mio/deprecated/unix/struct.UnixSocket.html' title='struct mio::deprecated::unix::UnixSocket'>UnixSocket</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;UnixSocket&gt; for <a class='struct' href='mio/deprecated/unix/struct.UnixStream.html' title='struct mio::deprecated::unix::UnixStream'>UnixStream</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;UnixSocket&gt; for <a class='struct' href='mio/deprecated/unix/struct.UnixListener.html' title='struct mio::deprecated::unix::UnixListener'>UnixListener</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='mio/sys/unix/io/struct.Io.html' title='struct mio::sys::unix::io::Io'>Io</a>&gt; for <a class='struct' href='mio/deprecated/unix/struct.PipeReader.html' title='struct mio::deprecated::unix::PipeReader'>PipeReader</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='mio/sys/unix/io/struct.Io.html' title='struct mio::sys::unix::io::Io'>Io</a>&gt; for <a class='struct' href='mio/deprecated/unix/struct.PipeWriter.html' title='struct mio::deprecated::unix::PipeWriter'>PipeWriter</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='fontsan/enum.Error.html' title='enum fontsan::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='struct alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='struct alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;UnixError&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='enum' href='bincode/serde/enum.ErrorKind.html' title='enum bincode::serde::ErrorKind'>ErrorKind</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;UnixError&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='jpeg_decoder/error/enum.Error.html' title='enum jpeg_decoder::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sync/mpsc/struct.RecvError.html' title='struct std::sync::mpsc::RecvError'>RecvError</a>&gt; for <a class='enum' href='jpeg_decoder/error/enum.Error.html' title='enum jpeg_decoder::error::Error'>Error</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sync/mpsc/struct.SendError.html' title='struct std::sync::mpsc::SendError'>SendError</a>&lt;T&gt;&gt; for <a class='enum' href='jpeg_decoder/error/enum.Error.html' title='enum jpeg_decoder::error::Error'>Error</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/any/trait.Any.html' title='trait core::any::Any'>Any</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='openssl/ssl/error/enum.SslError.html' title='enum openssl::ssl::error::SslError'>SslError</a>&gt; for <a class='enum' href='openssl/ssl/error/enum.NonblockingSslError.html' title='enum openssl::ssl::error::NonblockingSslError'>NonblockingSslError</a>",];
implementors["gif"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='gif/enum.DecodingError.html' title='enum gif::DecodingError'>DecodingError</a>",];
implementors["gleam"] = ["impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='struct alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='struct alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='struct std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt;","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='struct std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/io/error/enum.ErrorKind.html' title='enum std::io::error::ErrorKind'>ErrorKind</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='primitive' href='std/primitive.u128.html'>u128</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u128.html'>u128</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV4.html' title='struct std::net::addr::SocketAddrV4'>SocketAddrV4</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV6.html' title='struct std::net::addr::SocketAddrV6'>SocketAddrV6</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl&lt;I&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>I, <a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a> <span class='where fmt-newline'>where I: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='struct std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='enum std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='trait core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>: <a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>ToOwned</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>::<a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>Owned</a> == <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;",];
implementors["glutin"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='jpeg_decoder/error/enum.Error.html' title='enum jpeg_decoder::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sync/mpsc/struct.RecvError.html' title='struct std::sync::mpsc::RecvError'>RecvError</a>&gt; for <a class='enum' href='jpeg_decoder/error/enum.Error.html' title='enum jpeg_decoder::error::Error'>Error</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sync/mpsc/struct.SendError.html' title='struct std::sync::mpsc::SendError'>SendError</a>&lt;T&gt;&gt; for <a class='enum' href='jpeg_decoder/error/enum.Error.html' title='enum jpeg_decoder::error::Error'>Error</a> <span class='where fmt-newline'>where T: <a class='trait' href='glutin/api/x11/ffi/glx_extra/__gl_imports/trait.Send.html' title='trait glutin::api::x11::ffi::glx_extra::__gl_imports::Send'>Send</a> + <a class='trait' href='core/any/trait.Any.html' title='trait core::any::Any'>Any</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a><a class='enum' href='png/common/enum.ColorType.html' title='enum png::common::ColorType'>ColorType</a>, <a class='enum' href='png/common/enum.BitDepth.html' title='enum png::common::BitDepth'>BitDepth</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='image/color/enum.ColorType.html' title='enum image::color::ColorType'>ColorType</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='image/color/enum.ColorType.html' title='enum image::color::ColorType'>ColorType</a>&gt; for <a class='primitive' href='std/primitive.tuple.html'>(</a><a class='enum' href='png/common/enum.ColorType.html' title='enum png::common::ColorType'>ColorType</a>, <a class='enum' href='png/common/enum.BitDepth.html' title='enum png::common::BitDepth'>BitDepth</a><a class='primitive' href='std/primitive.tuple.html'>)</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='png/decoder/stream/enum.DecodingError.html' title='enum png::decoder::stream::DecodingError'>DecodingError</a>&gt; for <a class='enum' href='image/image/enum.ImageError.html' title='enum image::image::ImageError'>ImageError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='jpeg_decoder/decoder/enum.PixelFormat.html' title='enum jpeg_decoder::decoder::PixelFormat'>PixelFormat</a>&gt; for <a class='enum' href='image/color/enum.ColorType.html' title='enum image::color::ColorType'>ColorType</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='jpeg_decoder/error/enum.Error.html' title='enum jpeg_decoder::error::Error'>Error</a>&gt; for <a class='enum' href='image/image/enum.ImageError.html' title='enum image::image::ImageError'>ImageError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='gif/reader/decoder/enum.DecodingError.html' title='enum gif::reader::decoder::DecodingError'>DecodingError</a>&gt; for <a class='enum' href='image/image/enum.ImageError.html' title='enum image::image::ImageError'>ImageError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='image/image/enum.ImageError.html' title='enum image::image::ImageError'>ImageError</a>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='glutin/api/x11/ffi/glx_extra/__gl_imports/trait.Send.html' title='trait glutin::api::x11::ffi::glx_extra::__gl_imports::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='glutin/api/x11/ffi/glx_extra/__gl_imports/trait.Send.html' title='trait glutin::api::x11::ffi::glx_extra::__gl_imports::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static + <a class='trait' href='glutin/api/x11/ffi/glx_extra/__gl_imports/trait.Send.html' title='trait glutin::api::x11::ffi::glx_extra::__gl_imports::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='glutin/api/x11/ffi/glx_extra/__gl_imports/trait.Send.html' title='trait glutin::api::x11::ffi::glx_extra::__gl_imports::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='struct std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt;","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='struct std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/io/error/enum.ErrorKind.html' title='enum std::io::error::ErrorKind'>ErrorKind</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='primitive' href='std/primitive.u128.html'>u128</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u128.html'>u128</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV4.html' title='struct std::net::addr::SocketAddrV4'>SocketAddrV4</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV6.html' title='struct std::net::addr::SocketAddrV6'>SocketAddrV6</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl&lt;I&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>I, <a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a> <span class='where fmt-newline'>where I: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='struct std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='enum std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='deflate/compression_options/enum.Compression.html' title='enum deflate::compression_options::Compression'>Compression</a>&gt; for <a class='struct' href='deflate/compression_options/struct.CompressionOptions.html' title='struct deflate::compression_options::CompressionOptions'>CompressionOptions</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;HuffmanError&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='png/decoder/stream/enum.DecodingError.html' title='enum png::decoder::stream::DecodingError'>DecodingError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='png/decoder/stream/enum.DecodingError.html' title='enum png::decoder::stream::DecodingError'>DecodingError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='png/decoder/stream/enum.DecodingError.html' title='enum png::decoder::stream::DecodingError'>DecodingError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='png/encoder/enum.EncodingError.html' title='enum png::encoder::EncodingError'>EncodingError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='png/encoder/enum.EncodingError.html' title='enum png::encoder::EncodingError'>EncodingError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='struct alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='struct alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='gif/reader/decoder/enum.DecodingError.html' title='enum gif::reader::decoder::DecodingError'>DecodingError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XAnyEvent.html' title='struct x11_dl::xlib::XAnyEvent'>XAnyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XAnyEvent.html' title='struct x11_dl::xlib::XAnyEvent'>XAnyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XAnyEvent.html' title='struct x11_dl::xlib::XAnyEvent'>XAnyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XAnyEvent.html' title='struct x11_dl::xlib::XAnyEvent'>XAnyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XButtonEvent.html' title='struct x11_dl::xlib::XButtonEvent'>XButtonEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XButtonEvent.html' title='struct x11_dl::xlib::XButtonEvent'>XButtonEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XButtonEvent.html' title='struct x11_dl::xlib::XButtonEvent'>XButtonEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XButtonEvent.html' title='struct x11_dl::xlib::XButtonEvent'>XButtonEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XCirculateEvent.html' title='struct x11_dl::xlib::XCirculateEvent'>XCirculateEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XCirculateEvent.html' title='struct x11_dl::xlib::XCirculateEvent'>XCirculateEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XCirculateEvent.html' title='struct x11_dl::xlib::XCirculateEvent'>XCirculateEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XCirculateEvent.html' title='struct x11_dl::xlib::XCirculateEvent'>XCirculateEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XCirculateRequestEvent.html' title='struct x11_dl::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XCirculateRequestEvent.html' title='struct x11_dl::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XCirculateRequestEvent.html' title='struct x11_dl::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XCirculateRequestEvent.html' title='struct x11_dl::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XClientMessageEvent.html' title='struct x11_dl::xlib::XClientMessageEvent'>XClientMessageEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XClientMessageEvent.html' title='struct x11_dl::xlib::XClientMessageEvent'>XClientMessageEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XClientMessageEvent.html' title='struct x11_dl::xlib::XClientMessageEvent'>XClientMessageEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XClientMessageEvent.html' title='struct x11_dl::xlib::XClientMessageEvent'>XClientMessageEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XColormapEvent.html' title='struct x11_dl::xlib::XColormapEvent'>XColormapEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XColormapEvent.html' title='struct x11_dl::xlib::XColormapEvent'>XColormapEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XColormapEvent.html' title='struct x11_dl::xlib::XColormapEvent'>XColormapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XColormapEvent.html' title='struct x11_dl::xlib::XColormapEvent'>XColormapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XConfigureEvent.html' title='struct x11_dl::xlib::XConfigureEvent'>XConfigureEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XConfigureEvent.html' title='struct x11_dl::xlib::XConfigureEvent'>XConfigureEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XConfigureEvent.html' title='struct x11_dl::xlib::XConfigureEvent'>XConfigureEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XConfigureEvent.html' title='struct x11_dl::xlib::XConfigureEvent'>XConfigureEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XConfigureRequestEvent.html' title='struct x11_dl::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XConfigureRequestEvent.html' title='struct x11_dl::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XConfigureRequestEvent.html' title='struct x11_dl::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XConfigureRequestEvent.html' title='struct x11_dl::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XCreateWindowEvent.html' title='struct x11_dl::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XCreateWindowEvent.html' title='struct x11_dl::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XCreateWindowEvent.html' title='struct x11_dl::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XCreateWindowEvent.html' title='struct x11_dl::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XCrossingEvent.html' title='struct x11_dl::xlib::XCrossingEvent'>XCrossingEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XCrossingEvent.html' title='struct x11_dl::xlib::XCrossingEvent'>XCrossingEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XCrossingEvent.html' title='struct x11_dl::xlib::XCrossingEvent'>XCrossingEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XCrossingEvent.html' title='struct x11_dl::xlib::XCrossingEvent'>XCrossingEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XDestroyWindowEvent.html' title='struct x11_dl::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XDestroyWindowEvent.html' title='struct x11_dl::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XDestroyWindowEvent.html' title='struct x11_dl::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XDestroyWindowEvent.html' title='struct x11_dl::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XErrorEvent.html' title='struct x11_dl::xlib::XErrorEvent'>XErrorEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XErrorEvent.html' title='struct x11_dl::xlib::XErrorEvent'>XErrorEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XErrorEvent.html' title='struct x11_dl::xlib::XErrorEvent'>XErrorEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XErrorEvent.html' title='struct x11_dl::xlib::XErrorEvent'>XErrorEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XExposeEvent.html' title='struct x11_dl::xlib::XExposeEvent'>XExposeEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XExposeEvent.html' title='struct x11_dl::xlib::XExposeEvent'>XExposeEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XExposeEvent.html' title='struct x11_dl::xlib::XExposeEvent'>XExposeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XExposeEvent.html' title='struct x11_dl::xlib::XExposeEvent'>XExposeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XFocusChangeEvent.html' title='struct x11_dl::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XFocusChangeEvent.html' title='struct x11_dl::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XFocusChangeEvent.html' title='struct x11_dl::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XFocusChangeEvent.html' title='struct x11_dl::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XGenericEventCookie.html' title='struct x11_dl::xlib::XGenericEventCookie'>XGenericEventCookie</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XGenericEventCookie.html' title='struct x11_dl::xlib::XGenericEventCookie'>XGenericEventCookie</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XGenericEventCookie.html' title='struct x11_dl::xlib::XGenericEventCookie'>XGenericEventCookie</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XGenericEventCookie.html' title='struct x11_dl::xlib::XGenericEventCookie'>XGenericEventCookie</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XGraphicsExposeEvent.html' title='struct x11_dl::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XGraphicsExposeEvent.html' title='struct x11_dl::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XGraphicsExposeEvent.html' title='struct x11_dl::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XGraphicsExposeEvent.html' title='struct x11_dl::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XGravityEvent.html' title='struct x11_dl::xlib::XGravityEvent'>XGravityEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XGravityEvent.html' title='struct x11_dl::xlib::XGravityEvent'>XGravityEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XGravityEvent.html' title='struct x11_dl::xlib::XGravityEvent'>XGravityEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XGravityEvent.html' title='struct x11_dl::xlib::XGravityEvent'>XGravityEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XKeyEvent.html' title='struct x11_dl::xlib::XKeyEvent'>XKeyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XKeyEvent.html' title='struct x11_dl::xlib::XKeyEvent'>XKeyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XKeyEvent.html' title='struct x11_dl::xlib::XKeyEvent'>XKeyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XKeyEvent.html' title='struct x11_dl::xlib::XKeyEvent'>XKeyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XKeymapEvent.html' title='struct x11_dl::xlib::XKeymapEvent'>XKeymapEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XKeymapEvent.html' title='struct x11_dl::xlib::XKeymapEvent'>XKeymapEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XKeymapEvent.html' title='struct x11_dl::xlib::XKeymapEvent'>XKeymapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XKeymapEvent.html' title='struct x11_dl::xlib::XKeymapEvent'>XKeymapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XMapEvent.html' title='struct x11_dl::xlib::XMapEvent'>XMapEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XMapEvent.html' title='struct x11_dl::xlib::XMapEvent'>XMapEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XMapEvent.html' title='struct x11_dl::xlib::XMapEvent'>XMapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XMapEvent.html' title='struct x11_dl::xlib::XMapEvent'>XMapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XMappingEvent.html' title='struct x11_dl::xlib::XMappingEvent'>XMappingEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XMappingEvent.html' title='struct x11_dl::xlib::XMappingEvent'>XMappingEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XMappingEvent.html' title='struct x11_dl::xlib::XMappingEvent'>XMappingEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XMappingEvent.html' title='struct x11_dl::xlib::XMappingEvent'>XMappingEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XMapRequestEvent.html' title='struct x11_dl::xlib::XMapRequestEvent'>XMapRequestEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XMapRequestEvent.html' title='struct x11_dl::xlib::XMapRequestEvent'>XMapRequestEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XMapRequestEvent.html' title='struct x11_dl::xlib::XMapRequestEvent'>XMapRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XMapRequestEvent.html' title='struct x11_dl::xlib::XMapRequestEvent'>XMapRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XMotionEvent.html' title='struct x11_dl::xlib::XMotionEvent'>XMotionEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XMotionEvent.html' title='struct x11_dl::xlib::XMotionEvent'>XMotionEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XMotionEvent.html' title='struct x11_dl::xlib::XMotionEvent'>XMotionEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XMotionEvent.html' title='struct x11_dl::xlib::XMotionEvent'>XMotionEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XNoExposeEvent.html' title='struct x11_dl::xlib::XNoExposeEvent'>XNoExposeEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XNoExposeEvent.html' title='struct x11_dl::xlib::XNoExposeEvent'>XNoExposeEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XNoExposeEvent.html' title='struct x11_dl::xlib::XNoExposeEvent'>XNoExposeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XNoExposeEvent.html' title='struct x11_dl::xlib::XNoExposeEvent'>XNoExposeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XPropertyEvent.html' title='struct x11_dl::xlib::XPropertyEvent'>XPropertyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XPropertyEvent.html' title='struct x11_dl::xlib::XPropertyEvent'>XPropertyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XPropertyEvent.html' title='struct x11_dl::xlib::XPropertyEvent'>XPropertyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XPropertyEvent.html' title='struct x11_dl::xlib::XPropertyEvent'>XPropertyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XReparentEvent.html' title='struct x11_dl::xlib::XReparentEvent'>XReparentEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XReparentEvent.html' title='struct x11_dl::xlib::XReparentEvent'>XReparentEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XReparentEvent.html' title='struct x11_dl::xlib::XReparentEvent'>XReparentEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XReparentEvent.html' title='struct x11_dl::xlib::XReparentEvent'>XReparentEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XResizeRequestEvent.html' title='struct x11_dl::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XResizeRequestEvent.html' title='struct x11_dl::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XResizeRequestEvent.html' title='struct x11_dl::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XResizeRequestEvent.html' title='struct x11_dl::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XSelectionClearEvent.html' title='struct x11_dl::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XSelectionClearEvent.html' title='struct x11_dl::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XSelectionClearEvent.html' title='struct x11_dl::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XSelectionClearEvent.html' title='struct x11_dl::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XSelectionEvent.html' title='struct x11_dl::xlib::XSelectionEvent'>XSelectionEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XSelectionEvent.html' title='struct x11_dl::xlib::XSelectionEvent'>XSelectionEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XSelectionEvent.html' title='struct x11_dl::xlib::XSelectionEvent'>XSelectionEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XSelectionEvent.html' title='struct x11_dl::xlib::XSelectionEvent'>XSelectionEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XSelectionRequestEvent.html' title='struct x11_dl::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XSelectionRequestEvent.html' title='struct x11_dl::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XSelectionRequestEvent.html' title='struct x11_dl::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XSelectionRequestEvent.html' title='struct x11_dl::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XUnmapEvent.html' title='struct x11_dl::xlib::XUnmapEvent'>XUnmapEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XUnmapEvent.html' title='struct x11_dl::xlib::XUnmapEvent'>XUnmapEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XUnmapEvent.html' title='struct x11_dl::xlib::XUnmapEvent'>XUnmapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XUnmapEvent.html' title='struct x11_dl::xlib::XUnmapEvent'>XUnmapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XVisibilityEvent.html' title='struct x11_dl::xlib::XVisibilityEvent'>XVisibilityEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XVisibilityEvent.html' title='struct x11_dl::xlib::XVisibilityEvent'>XVisibilityEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XVisibilityEvent.html' title='struct x11_dl::xlib::XVisibilityEvent'>XVisibilityEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XVisibilityEvent.html' title='struct x11_dl::xlib::XVisibilityEvent'>XVisibilityEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.i8.html'>i8</a><a class='primitive' href='std/primitive.array.html'>; 20]</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.ClientMessageData.html' title='struct x11_dl::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 20]</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.ClientMessageData.html' title='struct x11_dl::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.i16.html'>i16</a><a class='primitive' href='std/primitive.array.html'>; 10]</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.ClientMessageData.html' title='struct x11_dl::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 10]</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.ClientMessageData.html' title='struct x11_dl::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.i64.html'>i64</a><a class='primitive' href='std/primitive.array.html'>; 5]</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.ClientMessageData.html' title='struct x11_dl::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u64.html'>u64</a><a class='primitive' href='std/primitive.array.html'>; 5]</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.ClientMessageData.html' title='struct x11_dl::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xf86vmode/struct.XF86VidModeNotifyEvent.html' title='struct x11_dl::xf86vmode::XF86VidModeNotifyEvent'>XF86VidModeNotifyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xf86vmode/struct.XF86VidModeNotifyEvent.html' title='struct x11_dl::xf86vmode::XF86VidModeNotifyEvent'>XF86VidModeNotifyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xf86vmode/struct.XF86VidModeNotifyEvent.html' title='struct x11_dl::xf86vmode::XF86VidModeNotifyEvent'>XF86VidModeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xf86vmode/struct.XF86VidModeNotifyEvent.html' title='struct x11_dl::xf86vmode::XF86VidModeNotifyEvent'>XF86VidModeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xss/struct.XScreenSaverNotifyEvent.html' title='struct x11_dl::xss::XScreenSaverNotifyEvent'>XScreenSaverNotifyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xss/struct.XScreenSaverNotifyEvent.html' title='struct x11_dl::xss::XScreenSaverNotifyEvent'>XScreenSaverNotifyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xss/struct.XScreenSaverNotifyEvent.html' title='struct x11_dl::xss::XScreenSaverNotifyEvent'>XScreenSaverNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xss/struct.XScreenSaverNotifyEvent.html' title='struct x11_dl::xss::XScreenSaverNotifyEvent'>XScreenSaverNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xrandr/struct.XRRScreenChangeNotifyEvent.html' title='struct x11_dl::xrandr::XRRScreenChangeNotifyEvent'>XRRScreenChangeNotifyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xrandr/struct.XRRScreenChangeNotifyEvent.html' title='struct x11_dl::xrandr::XRRScreenChangeNotifyEvent'>XRRScreenChangeNotifyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xrandr/struct.XRRScreenChangeNotifyEvent.html' title='struct x11_dl::xrandr::XRRScreenChangeNotifyEvent'>XRRScreenChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xrandr/struct.XRRScreenChangeNotifyEvent.html' title='struct x11_dl::xrandr::XRRScreenChangeNotifyEvent'>XRRScreenChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xrandr/struct.XRRNotifyEvent.html' title='struct x11_dl::xrandr::XRRNotifyEvent'>XRRNotifyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xrandr/struct.XRRNotifyEvent.html' title='struct x11_dl::xrandr::XRRNotifyEvent'>XRRNotifyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xrandr/struct.XRRNotifyEvent.html' title='struct x11_dl::xrandr::XRRNotifyEvent'>XRRNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xrandr/struct.XRRNotifyEvent.html' title='struct x11_dl::xrandr::XRRNotifyEvent'>XRRNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xrandr/struct.XRROutputChangeNotifyEvent.html' title='struct x11_dl::xrandr::XRROutputChangeNotifyEvent'>XRROutputChangeNotifyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xrandr/struct.XRROutputChangeNotifyEvent.html' title='struct x11_dl::xrandr::XRROutputChangeNotifyEvent'>XRROutputChangeNotifyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xrandr/struct.XRROutputChangeNotifyEvent.html' title='struct x11_dl::xrandr::XRROutputChangeNotifyEvent'>XRROutputChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xrandr/struct.XRROutputChangeNotifyEvent.html' title='struct x11_dl::xrandr::XRROutputChangeNotifyEvent'>XRROutputChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xrandr/struct.XRRCrtcChangeNotifyEvent.html' title='struct x11_dl::xrandr::XRRCrtcChangeNotifyEvent'>XRRCrtcChangeNotifyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xrandr/struct.XRRCrtcChangeNotifyEvent.html' title='struct x11_dl::xrandr::XRRCrtcChangeNotifyEvent'>XRRCrtcChangeNotifyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xrandr/struct.XRRCrtcChangeNotifyEvent.html' title='struct x11_dl::xrandr::XRRCrtcChangeNotifyEvent'>XRRCrtcChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xrandr/struct.XRRCrtcChangeNotifyEvent.html' title='struct x11_dl::xrandr::XRRCrtcChangeNotifyEvent'>XRRCrtcChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xrandr/struct.XRROutputPropertyNotifyEvent.html' title='struct x11_dl::xrandr::XRROutputPropertyNotifyEvent'>XRROutputPropertyNotifyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xrandr/struct.XRROutputPropertyNotifyEvent.html' title='struct x11_dl::xrandr::XRROutputPropertyNotifyEvent'>XRROutputPropertyNotifyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xrandr/struct.XRROutputPropertyNotifyEvent.html' title='struct x11_dl::xrandr::XRROutputPropertyNotifyEvent'>XRROutputPropertyNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xrandr/struct.XRROutputPropertyNotifyEvent.html' title='struct x11_dl::xrandr::XRROutputPropertyNotifyEvent'>XRROutputPropertyNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xrandr/struct.XRRProviderChangeNotifyEvent.html' title='struct x11_dl::xrandr::XRRProviderChangeNotifyEvent'>XRRProviderChangeNotifyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xrandr/struct.XRRProviderChangeNotifyEvent.html' title='struct x11_dl::xrandr::XRRProviderChangeNotifyEvent'>XRRProviderChangeNotifyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xrandr/struct.XRRProviderChangeNotifyEvent.html' title='struct x11_dl::xrandr::XRRProviderChangeNotifyEvent'>XRRProviderChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xrandr/struct.XRRProviderChangeNotifyEvent.html' title='struct x11_dl::xrandr::XRRProviderChangeNotifyEvent'>XRRProviderChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xrandr/struct.XRRProviderPropertyNotifyEvent.html' title='struct x11_dl::xrandr::XRRProviderPropertyNotifyEvent'>XRRProviderPropertyNotifyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xrandr/struct.XRRProviderPropertyNotifyEvent.html' title='struct x11_dl::xrandr::XRRProviderPropertyNotifyEvent'>XRRProviderPropertyNotifyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xrandr/struct.XRRProviderPropertyNotifyEvent.html' title='struct x11_dl::xrandr::XRRProviderPropertyNotifyEvent'>XRRProviderPropertyNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xrandr/struct.XRRProviderPropertyNotifyEvent.html' title='struct x11_dl::xrandr::XRRProviderPropertyNotifyEvent'>XRRProviderPropertyNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xrandr/struct.XRRResourceChangeNotifyEvent.html' title='struct x11_dl::xrandr::XRRResourceChangeNotifyEvent'>XRRResourceChangeNotifyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xrandr/struct.XRRResourceChangeNotifyEvent.html' title='struct x11_dl::xrandr::XRRResourceChangeNotifyEvent'>XRRResourceChangeNotifyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xrandr/struct.XRRResourceChangeNotifyEvent.html' title='struct x11_dl::xrandr::XRRResourceChangeNotifyEvent'>XRRResourceChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xrandr/struct.XRRResourceChangeNotifyEvent.html' title='struct x11_dl::xrandr::XRRResourceChangeNotifyEvent'>XRRResourceChangeNotifyEvent</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='trait core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>: <a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>ToOwned</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>::<a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>Owned</a> == <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='glutin/enum.CreationError.html' title='enum glutin::CreationError'>CreationError</a>&gt; for <a class='enum' href='glutin/api/osmesa/enum.OsMesaCreationError.html' title='enum glutin::api::osmesa::OsMesaCreationError'>OsMesaCreationError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='glutin/api/x11/ffi/struct.OpenError.html' title='struct glutin::api::x11::ffi::OpenError'>OpenError</a>&gt; for <a class='enum' href='glutin/api/x11/xdisplay/enum.XNotSupported.html' title='enum glutin::api::x11::xdisplay::XNotSupported'>XNotSupported</a>",];
implementors["glx"] = ["impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='struct alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='struct alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='struct std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt;","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='struct std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/io/error/enum.ErrorKind.html' title='enum std::io::error::ErrorKind'>ErrorKind</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='primitive' href='std/primitive.u128.html'>u128</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u128.html'>u128</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV4.html' title='struct std::net::addr::SocketAddrV4'>SocketAddrV4</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV6.html' title='struct std::net::addr::SocketAddrV6'>SocketAddrV6</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl&lt;I&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>I, <a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a> <span class='where fmt-newline'>where I: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='struct std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='enum std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='trait core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>: <a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>ToOwned</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>::<a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>Owned</a> == <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;",];
implementors["heartbeats_simple"] = ["impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='struct alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='struct alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='struct std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt;","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='struct std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/io/error/enum.ErrorKind.html' title='enum std::io::error::ErrorKind'>ErrorKind</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='primitive' href='std/primitive.u128.html'>u128</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u128.html'>u128</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV4.html' title='struct std::net::addr::SocketAddrV4'>SocketAddrV4</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV6.html' title='struct std::net::addr::SocketAddrV6'>SocketAddrV6</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl&lt;I&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>I, <a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a> <span class='where fmt-newline'>where I: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='struct std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='enum std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='trait core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>: <a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>ToOwned</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>::<a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>Owned</a> == <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;",];
implementors["html5ever"] = ["impl&lt;F, A&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='tendril/tendril/struct.Tendril.html' title='struct tendril::tendril::Tendril'>Tendril</a>&lt;F, A&gt;&gt; for <a class='struct' href='tendril/tendril/struct.SendTendril.html' title='struct tendril::tendril::SendTendril'>SendTendril</a>&lt;F&gt; <span class='where fmt-newline'>where A: <a class='trait' href='tendril/tendril/trait.Atomicity.html' title='trait tendril::tendril::Atomicity'>Atomicity</a>, F: <a class='trait' href='tendril/fmt/trait.Format.html' title='trait tendril::fmt::Format'>Format</a></span>","impl&lt;F, A&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='tendril/tendril/struct.SendTendril.html' title='struct tendril::tendril::SendTendril'>SendTendril</a>&lt;F&gt;&gt; for <a class='struct' href='tendril/tendril/struct.Tendril.html' title='struct tendril::tendril::Tendril'>Tendril</a>&lt;F, A&gt; <span class='where fmt-newline'>where A: <a class='trait' href='tendril/tendril/trait.Atomicity.html' title='trait tendril::tendril::Atomicity'>Atomicity</a>, F: <a class='trait' href='tendril/fmt/trait.Format.html' title='trait tendril::fmt::Format'>Format</a></span>","impl&lt;'a, F, A&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a F::<a class='trait' href='tendril/fmt/trait.SliceFormat.html' title='trait tendril::fmt::SliceFormat'>Slice</a>&gt; for <a class='struct' href='tendril/tendril/struct.Tendril.html' title='struct tendril::tendril::Tendril'>Tendril</a>&lt;F, A&gt; <span class='where fmt-newline'>where A: <a class='trait' href='tendril/tendril/trait.Atomicity.html' title='trait tendril::tendril::Atomicity'>Atomicity</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;F: <a class='trait' href='tendril/fmt/trait.SliceFormat.html' title='trait tendril::fmt::SliceFormat'>SliceFormat</a></span>","impl&lt;A&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='tendril/tendril/struct.Tendril.html' title='struct tendril::tendril::Tendril'>Tendril</a>&lt;<a class='struct' href='tendril/fmt/struct.UTF8.html' title='struct tendril::fmt::UTF8'>UTF8</a>, A&gt; <span class='where fmt-newline'>where A: <a class='trait' href='tendril/tendril/trait.Atomicity.html' title='trait tendril::tendril::Atomicity'>Atomicity</a></span>","impl&lt;A&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='tendril/tendril/struct.Tendril.html' title='struct tendril::tendril::Tendril'>Tendril</a>&lt;<a class='struct' href='tendril/fmt/struct.UTF8.html' title='struct tendril::fmt::UTF8'>UTF8</a>, A&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a> <span class='where fmt-newline'>where A: <a class='trait' href='tendril/tendril/trait.Atomicity.html' title='trait tendril::tendril::Atomicity'>Atomicity</a></span>","impl&lt;'a, A&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='tendril/tendril/struct.Tendril.html' title='struct tendril::tendril::Tendril'>Tendril</a>&lt;<a class='struct' href='tendril/fmt/struct.UTF8.html' title='struct tendril::fmt::UTF8'>UTF8</a>, A&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a> <span class='where fmt-newline'>where A: <a class='trait' href='tendril/tendril/trait.Atomicity.html' title='trait tendril::tendril::Atomicity'>Atomicity</a></span>","impl&lt;'a, Static&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='string_cache/atom/struct.Atom.html' title='struct string_cache::atom::Atom'>Atom</a>&lt;Static&gt; <span class='where fmt-newline'>where Static: <a class='trait' href='string_cache/atom/trait.StaticAtomSet.html' title='trait string_cache::atom::StaticAtomSet'>StaticAtomSet</a></span>","impl&lt;'a, Static&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='string_cache/atom/struct.Atom.html' title='struct string_cache::atom::Atom'>Atom</a>&lt;Static&gt; <span class='where fmt-newline'>where Static: <a class='trait' href='string_cache/atom/trait.StaticAtomSet.html' title='trait string_cache::atom::StaticAtomSet'>StaticAtomSet</a></span>","impl&lt;Static&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='string_cache/atom/struct.Atom.html' title='struct string_cache::atom::Atom'>Atom</a>&lt;Static&gt; <span class='where fmt-newline'>where Static: <a class='trait' href='string_cache/atom/trait.StaticAtomSet.html' title='trait string_cache::atom::StaticAtomSet'>StaticAtomSet</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='struct std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt;","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='struct std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/io/error/enum.ErrorKind.html' title='enum std::io::error::ErrorKind'>ErrorKind</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='primitive' href='std/primitive.u128.html'>u128</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u128.html'>u128</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV4.html' title='struct std::net::addr::SocketAddrV4'>SocketAddrV4</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV6.html' title='struct std::net::addr::SocketAddrV6'>SocketAddrV6</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl&lt;I&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>I, <a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a> <span class='where fmt-newline'>where I: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='struct std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='enum std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='struct alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='struct alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for <a class='struct' href='serde/bytes/struct.Bytes.html' title='struct serde::bytes::Bytes'>Bytes</a>&lt;'a&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;&gt; for <a class='struct' href='serde/bytes/struct.Bytes.html' title='struct serde::bytes::Bytes'>Bytes</a>&lt;'a&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;&gt; for <a class='struct' href='serde/bytes/bytebuf/struct.ByteBuf.html' title='struct serde::bytes::bytebuf::ByteBuf'>ByteBuf</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='trait core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>: <a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>ToOwned</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>::<a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>Owned</a> == <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;",];
implementors["hyper"] = ["impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt;","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='struct std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt;","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='struct std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/io/error/enum.ErrorKind.html' title='enum std::io::error::ErrorKind'>ErrorKind</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='primitive' href='std/primitive.u128.html'>u128</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u128.html'>u128</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV4.html' title='struct std::net::addr::SocketAddrV4'>SocketAddrV4</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV6.html' title='struct std::net::addr::SocketAddrV6'>SocketAddrV6</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl&lt;I&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>I, <a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a> <span class='where fmt-newline'>where I: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='struct std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='enum std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='struct alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='struct alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;&gt; for <a class='struct' href='solicit/http/frame/struct.RawFrame.html' title='struct solicit::http::frame::RawFrame'>RawFrame</a>","impl&lt;E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='enum' href='solicit/http/session/enum.StreamDataError.html' title='enum solicit::http::session::StreamDataError'>StreamDataError</a> <span class='where fmt-newline'>where E: <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a> + 'static</span>","impl&lt;E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='enum' href='solicit/http/enum.HttpError.html' title='enum solicit::http::HttpError'>HttpError</a> <span class='where fmt-newline'>where E: <a class='trait' href='solicit/http/client/trait.HttpConnectError.html' title='trait solicit::http::client::HttpConnectError'>HttpConnectError</a> + 'static</span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='struct' href='solicit/http/client/struct.CleartextConnectError.html' title='struct solicit::http::client::CleartextConnectError'>CleartextConnectError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='solicit/http/enum.HttpError.html' title='enum solicit::http::HttpError'>HttpError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='openssl/ssl/error/enum.SslError.html' title='enum openssl::ssl::error::SslError'>SslError</a>&gt; for <a class='enum' href='openssl/ssl/error/enum.NonblockingSslError.html' title='enum openssl::ssl::error::NonblockingSslError'>NonblockingSslError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='idna/uts46/struct.Errors.html' title='struct idna::uts46::Errors'>Errors</a>&gt; for <a class='enum' href='hyper/error/enum.ParseError.html' title='enum hyper::error::ParseError'>ParseError</a>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='url/percent_encoding/struct.PercentEncode.html' title='struct url::percent_encoding::PercentEncode'>PercentEncode</a>&lt;'a, E&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt; <span class='where fmt-newline'>where E: <a class='trait' href='url/percent_encoding/trait.EncodeSet.html' title='trait url::percent_encoding::EncodeSet'>EncodeSet</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='url/percent_encoding/struct.PercentDecode.html' title='struct url::percent_encoding::PercentDecode'>PercentDecode</a>&lt;'a&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='rustc_serialize/json/enum.ParserError.html' title='enum rustc_serialize::json::ParserError'>ParserError</a>&gt; for <a class='enum' href='rustc_serialize/json/enum.DecoderError.html' title='enum rustc_serialize::json::DecoderError'>DecoderError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='rustc_serialize/json/enum.ParserError.html' title='enum rustc_serialize::json::ParserError'>ParserError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='core/fmt/struct.Error.html' title='struct core::fmt::Error'>Error</a>&gt; for <a class='enum' href='rustc_serialize/json/enum.EncoderError.html' title='enum rustc_serialize::json::EncoderError'>EncoderError</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='trait core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>: <a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>ToOwned</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>::<a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>Owned</a> == <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='hyper/client/pool/enum.Scheme.html' title='enum hyper::client::pool::Scheme'>Scheme</a>","impl&lt;'a, R:&nbsp;<a class='trait' href='std/io/trait.Read.html' title='trait std::io::Read'>Read</a>&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a mut R&gt; for <a class='enum' href='hyper/client/enum.Body.html' title='enum hyper::client::Body'>Body</a>&lt;'a&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>IoError</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='hyper/error/enum.ParseError.html' title='enum hyper::error::ParseError'>ParseError</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='openssl/ssl/error/enum.SslError.html' title='enum openssl::ssl::error::SslError'>SslError</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='core/str/struct.Utf8Error.html' title='struct core::str::Utf8Error'>Utf8Error</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.FromUtf8Error.html' title='struct collections::string::FromUtf8Error'>FromUtf8Error</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='httparse/enum.Error.html' title='enum httparse::Error'>Error</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='solicit/http/enum.HttpError.html' title='enum solicit::http::HttpError'>Http2Error</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl&lt;W:&nbsp;<a class='trait' href='std/io/trait.Write.html' title='trait std::io::Write'>Write</a>&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='hyper/http/h1/struct.EndError.html' title='struct hyper::http::h1::EndError'>EndError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='struct' href='hyper/http/h2/struct.Http2ConnectError.html' title='struct hyper::http::h2::Http2ConnectError'>Http2ConnectError</a>","impl&lt;T:&nbsp;<a class='trait' href='hyper/net/trait.NetworkStream.html' title='trait hyper::net::NetworkStream'>NetworkStream</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a>&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='hyper/net/trait.NetworkStream.html' title='trait hyper::net::NetworkStream'>NetworkStream</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/tcp/struct.TcpListener.html' title='struct std::net::tcp::TcpListener'>TcpListener</a>&gt; for <a class='struct' href='hyper/net/struct.HttpListener.html' title='struct hyper::net::HttpListener'>HttpListener</a>",];
implementors["image"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a><a class='enum' href='png/common/enum.ColorType.html' title='enum png::common::ColorType'>ColorType</a>, <a class='enum' href='png/common/enum.BitDepth.html' title='enum png::common::BitDepth'>BitDepth</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='image/enum.ColorType.html' title='enum image::ColorType'>ColorType</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='image/enum.ColorType.html' title='enum image::ColorType'>ColorType</a>&gt; for <a class='primitive' href='std/primitive.tuple.html'>(</a><a class='enum' href='png/common/enum.ColorType.html' title='enum png::common::ColorType'>ColorType</a>, <a class='enum' href='png/common/enum.BitDepth.html' title='enum png::common::BitDepth'>BitDepth</a><a class='primitive' href='std/primitive.tuple.html'>)</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='png/decoder/stream/enum.DecodingError.html' title='enum png::decoder::stream::DecodingError'>DecodingError</a>&gt; for <a class='enum' href='image/enum.ImageError.html' title='enum image::ImageError'>ImageError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='jpeg_decoder/decoder/enum.PixelFormat.html' title='enum jpeg_decoder::decoder::PixelFormat'>PixelFormat</a>&gt; for <a class='enum' href='image/enum.ColorType.html' title='enum image::ColorType'>ColorType</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='jpeg_decoder/error/enum.Error.html' title='enum jpeg_decoder::error::Error'>Error</a>&gt; for <a class='enum' href='image/enum.ImageError.html' title='enum image::ImageError'>ImageError</a>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='struct std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt;","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='struct std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/io/error/enum.ErrorKind.html' title='enum std::io::error::ErrorKind'>ErrorKind</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='primitive' href='std/primitive.u128.html'>u128</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u128.html'>u128</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV4.html' title='struct std::net::addr::SocketAddrV4'>SocketAddrV4</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV6.html' title='struct std::net::addr::SocketAddrV6'>SocketAddrV6</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl&lt;I&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>I, <a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a> <span class='where fmt-newline'>where I: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='struct std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='enum std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='gif/reader/decoder/enum.DecodingError.html' title='enum gif::reader::decoder::DecodingError'>DecodingError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='jpeg_decoder/error/enum.Error.html' title='enum jpeg_decoder::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sync/mpsc/struct.RecvError.html' title='struct std::sync::mpsc::RecvError'>RecvError</a>&gt; for <a class='enum' href='jpeg_decoder/error/enum.Error.html' title='enum jpeg_decoder::error::Error'>Error</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sync/mpsc/struct.SendError.html' title='struct std::sync::mpsc::SendError'>SendError</a>&lt;T&gt;&gt; for <a class='enum' href='jpeg_decoder/error/enum.Error.html' title='enum jpeg_decoder::error::Error'>Error</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/any/trait.Any.html' title='trait core::any::Any'>Any</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='struct alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='struct alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='deflate/compression_options/enum.Compression.html' title='enum deflate::compression_options::Compression'>Compression</a>&gt; for <a class='struct' href='deflate/compression_options/struct.CompressionOptions.html' title='struct deflate::compression_options::CompressionOptions'>CompressionOptions</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;HuffmanError&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='png/decoder/stream/enum.DecodingError.html' title='enum png::decoder::stream::DecodingError'>DecodingError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='png/decoder/stream/enum.DecodingError.html' title='enum png::decoder::stream::DecodingError'>DecodingError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='png/decoder/stream/enum.DecodingError.html' title='enum png::decoder::stream::DecodingError'>DecodingError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='png/encoder/enum.EncodingError.html' title='enum png::encoder::EncodingError'>EncodingError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='png/encoder/enum.EncodingError.html' title='enum png::encoder::EncodingError'>EncodingError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='trait core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>: <a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>ToOwned</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>::<a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>Owned</a> == <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='gif/reader/decoder/enum.DecodingError.html' title='enum gif::reader::decoder::DecodingError'>DecodingError</a>&gt; for <a class='enum' href='image/enum.ImageError.html' title='enum image::ImageError'>ImageError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='image/enum.ImageError.html' title='enum image::ImageError'>ImageError</a>",];
implementors["immeta"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='immeta/enum.Error.html' title='enum immeta::Error'>Error</a>","impl&lt;T:&nbsp;<a class='trait' href='num_traits/cast/trait.ToPrimitive.html' title='trait num_traits::cast::ToPrimitive'>ToPrimitive</a>, U:&nbsp;<a class='trait' href='num_traits/cast/trait.ToPrimitive.html' title='trait num_traits::cast::ToPrimitive'>ToPrimitive</a>&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>T, U<a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='struct' href='immeta/struct.Dimensions.html' title='struct immeta::Dimensions'>Dimensions</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u16.html'>u16</a>&gt; for <a class='enum' href='immeta/common/tiff/enum.EntryType.html' title='enum immeta::common::tiff::EntryType'>EntryType</a>",];
implementors["ipc_channel"] = ["impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='struct alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='struct alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for &amp;'a <a class='struct' href='mio/iovec/struct.IoVec.html' title='struct mio::iovec::IoVec'>IoVec</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a mut [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for &amp;'a mut <a class='struct' href='mio/iovec/struct.IoVec.html' title='struct mio::iovec::IoVec'>IoVec</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for &amp;'a IoVec","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a mut [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for &amp;'a mut IoVec","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.usize.html'>usize</a>&gt; for <a class='struct' href='mio/token/struct.Token.html' title='struct mio::token::Token'>Token</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='mio/token/struct.Token.html' title='struct mio::token::Token'>Token</a>&gt; for <a class='primitive' href='std/primitive.usize.html'>usize</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sync/mpsc/struct.SendError.html' title='struct std::sync::mpsc::SendError'>SendError</a>&lt;T&gt;&gt; for <a class='enum' href='mio/channel/enum.SendError.html' title='enum mio::channel::SendError'>SendError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='mio/channel/enum.SendError.html' title='enum mio::channel::SendError'>SendError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/sync/mpsc/enum.TrySendError.html' title='enum std::sync::mpsc::TrySendError'>TrySendError</a>&lt;T&gt;&gt; for <a class='enum' href='mio/channel/enum.TrySendError.html' title='enum mio::channel::TrySendError'>TrySendError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sync/mpsc/struct.SendError.html' title='struct std::sync::mpsc::SendError'>SendError</a>&lt;T&gt;&gt; for <a class='enum' href='mio/channel/enum.TrySendError.html' title='enum mio::channel::TrySendError'>TrySendError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='mio/channel/enum.TrySendError.html' title='enum mio::channel::TrySendError'>TrySendError</a>&lt;T&gt;","impl&lt;M&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='mio/channel/enum.TrySendError.html' title='enum mio::channel::TrySendError'>TrySendError</a>&lt;M&gt;&gt; for <a class='enum' href='mio/deprecated/notify/enum.NotifyError.html' title='enum mio::deprecated::notify::NotifyError'>NotifyError</a>&lt;M&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;UnixSocket&gt; for <a class='struct' href='mio/deprecated/unix/struct.UnixSocket.html' title='struct mio::deprecated::unix::UnixSocket'>UnixSocket</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;UnixSocket&gt; for <a class='struct' href='mio/deprecated/unix/struct.UnixStream.html' title='struct mio::deprecated::unix::UnixStream'>UnixStream</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;UnixSocket&gt; for <a class='struct' href='mio/deprecated/unix/struct.UnixListener.html' title='struct mio::deprecated::unix::UnixListener'>UnixListener</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='mio/sys/unix/io/struct.Io.html' title='struct mio::sys::unix::io::Io'>Io</a>&gt; for <a class='struct' href='mio/deprecated/unix/struct.PipeReader.html' title='struct mio::deprecated::unix::PipeReader'>PipeReader</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='mio/sys/unix/io/struct.Io.html' title='struct mio::sys::unix::io::Io'>Io</a>&gt; for <a class='struct' href='mio/deprecated/unix/struct.PipeWriter.html' title='struct mio::deprecated::unix::PipeWriter'>PipeWriter</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for <a class='struct' href='serde/bytes/struct.Bytes.html' title='struct serde::bytes::Bytes'>Bytes</a>&lt;'a&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;&gt; for <a class='struct' href='serde/bytes/struct.Bytes.html' title='struct serde::bytes::Bytes'>Bytes</a>&lt;'a&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;&gt; for <a class='struct' href='serde/bytes/bytebuf/struct.ByteBuf.html' title='struct serde::bytes::bytebuf::ByteBuf'>ByteBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='enum' href='bincode/serde/enum.ErrorKind.html' title='enum bincode::serde::ErrorKind'>ErrorKind</a>&gt;","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='struct std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt;","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='struct std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/io/error/enum.ErrorKind.html' title='enum std::io::error::ErrorKind'>ErrorKind</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='primitive' href='std/primitive.u128.html'>u128</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u128.html'>u128</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV4.html' title='struct std::net::addr::SocketAddrV4'>SocketAddrV4</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV6.html' title='struct std::net::addr::SocketAddrV6'>SocketAddrV6</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl&lt;I&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>I, <a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a> <span class='where fmt-newline'>where I: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='struct std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='enum std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='trait core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>: <a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>ToOwned</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>::<a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>Owned</a> == <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='ipc_channel/platform/unix/struct.UnixError.html' title='struct ipc_channel::platform::unix::UnixError'>UnixError</a>&gt; for <a class='type' href='ipc_channel/type.Error.html' title='type ipc_channel::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='ipc_channel/platform/unix/struct.UnixError.html' title='struct ipc_channel::platform::unix::UnixError'>UnixError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='struct' href='ipc_channel/platform/unix/struct.UnixError.html' title='struct ipc_channel::platform::unix::UnixError'>UnixError</a>",];
implementors["jpeg_decoder"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>IoError</a>&gt; for <a class='enum' href='jpeg_decoder/enum.Error.html' title='enum jpeg_decoder::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sync/mpsc/struct.RecvError.html' title='struct std::sync::mpsc::RecvError'>RecvError</a>&gt; for <a class='enum' href='jpeg_decoder/enum.Error.html' title='enum jpeg_decoder::Error'>Error</a>","impl&lt;T:&nbsp;<a class='trait' href='core/any/trait.Any.html' title='trait core::any::Any'>Any</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a>&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sync/mpsc/struct.SendError.html' title='struct std::sync::mpsc::SendError'>SendError</a>&lt;T&gt;&gt; for <a class='enum' href='jpeg_decoder/enum.Error.html' title='enum jpeg_decoder::Error'>Error</a>",];
implementors["layout_thread"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='idna/uts46/struct.Errors.html' title='struct idna::uts46::Errors'>Errors</a>&gt; for <a class='enum' href='url/parser/enum.ParseError.html' title='enum url::parser::ParseError'>ParseError</a>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='url/percent_encoding/struct.PercentEncode.html' title='struct url::percent_encoding::PercentEncode'>PercentEncode</a>&lt;'a, E&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt; <span class='where fmt-newline'>where E: <a class='trait' href='url/percent_encoding/trait.EncodeSet.html' title='trait url::percent_encoding::EncodeSet'>EncodeSet</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='url/percent_encoding/struct.PercentDecode.html' title='struct url::percent_encoding::PercentDecode'>PercentDecode</a>&lt;'a&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XAnyEvent.html' title='struct x11::xlib::XAnyEvent'>XAnyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XAnyEvent.html' title='struct x11::xlib::XAnyEvent'>XAnyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XAnyEvent.html' title='struct x11::xlib::XAnyEvent'>XAnyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XAnyEvent.html' title='struct x11::xlib::XAnyEvent'>XAnyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XButtonEvent.html' title='struct x11::xlib::XButtonEvent'>XButtonEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XButtonEvent.html' title='struct x11::xlib::XButtonEvent'>XButtonEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XButtonEvent.html' title='struct x11::xlib::XButtonEvent'>XButtonEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XButtonEvent.html' title='struct x11::xlib::XButtonEvent'>XButtonEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XCirculateEvent.html' title='struct x11::xlib::XCirculateEvent'>XCirculateEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XCirculateEvent.html' title='struct x11::xlib::XCirculateEvent'>XCirculateEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCirculateEvent.html' title='struct x11::xlib::XCirculateEvent'>XCirculateEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCirculateEvent.html' title='struct x11::xlib::XCirculateEvent'>XCirculateEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XCirculateRequestEvent.html' title='struct x11::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XCirculateRequestEvent.html' title='struct x11::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCirculateRequestEvent.html' title='struct x11::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCirculateRequestEvent.html' title='struct x11::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XClientMessageEvent.html' title='struct x11::xlib::XClientMessageEvent'>XClientMessageEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XClientMessageEvent.html' title='struct x11::xlib::XClientMessageEvent'>XClientMessageEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XClientMessageEvent.html' title='struct x11::xlib::XClientMessageEvent'>XClientMessageEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XClientMessageEvent.html' title='struct x11::xlib::XClientMessageEvent'>XClientMessageEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XColormapEvent.html' title='struct x11::xlib::XColormapEvent'>XColormapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XColormapEvent.html' title='struct x11::xlib::XColormapEvent'>XColormapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XColormapEvent.html' title='struct x11::xlib::XColormapEvent'>XColormapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XColormapEvent.html' title='struct x11::xlib::XColormapEvent'>XColormapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XConfigureEvent.html' title='struct x11::xlib::XConfigureEvent'>XConfigureEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XConfigureEvent.html' title='struct x11::xlib::XConfigureEvent'>XConfigureEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XConfigureEvent.html' title='struct x11::xlib::XConfigureEvent'>XConfigureEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XConfigureEvent.html' title='struct x11::xlib::XConfigureEvent'>XConfigureEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XConfigureRequestEvent.html' title='struct x11::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XConfigureRequestEvent.html' title='struct x11::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XConfigureRequestEvent.html' title='struct x11::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XConfigureRequestEvent.html' title='struct x11::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XCreateWindowEvent.html' title='struct x11::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XCreateWindowEvent.html' title='struct x11::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCreateWindowEvent.html' title='struct x11::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCreateWindowEvent.html' title='struct x11::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XCrossingEvent.html' title='struct x11::xlib::XCrossingEvent'>XCrossingEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XCrossingEvent.html' title='struct x11::xlib::XCrossingEvent'>XCrossingEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCrossingEvent.html' title='struct x11::xlib::XCrossingEvent'>XCrossingEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCrossingEvent.html' title='struct x11::xlib::XCrossingEvent'>XCrossingEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XDestroyWindowEvent.html' title='struct x11::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XDestroyWindowEvent.html' title='struct x11::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XDestroyWindowEvent.html' title='struct x11::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XDestroyWindowEvent.html' title='struct x11::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XErrorEvent.html' title='struct x11::xlib::XErrorEvent'>XErrorEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XErrorEvent.html' title='struct x11::xlib::XErrorEvent'>XErrorEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XErrorEvent.html' title='struct x11::xlib::XErrorEvent'>XErrorEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XErrorEvent.html' title='struct x11::xlib::XErrorEvent'>XErrorEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XExposeEvent.html' title='struct x11::xlib::XExposeEvent'>XExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XExposeEvent.html' title='struct x11::xlib::XExposeEvent'>XExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XExposeEvent.html' title='struct x11::xlib::XExposeEvent'>XExposeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XExposeEvent.html' title='struct x11::xlib::XExposeEvent'>XExposeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XFocusChangeEvent.html' title='struct x11::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XFocusChangeEvent.html' title='struct x11::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XFocusChangeEvent.html' title='struct x11::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XFocusChangeEvent.html' title='struct x11::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XGenericEventCookie.html' title='struct x11::xlib::XGenericEventCookie'>XGenericEventCookie</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XGenericEventCookie.html' title='struct x11::xlib::XGenericEventCookie'>XGenericEventCookie</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGenericEventCookie.html' title='struct x11::xlib::XGenericEventCookie'>XGenericEventCookie</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGenericEventCookie.html' title='struct x11::xlib::XGenericEventCookie'>XGenericEventCookie</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XGraphicsExposeEvent.html' title='struct x11::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XGraphicsExposeEvent.html' title='struct x11::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGraphicsExposeEvent.html' title='struct x11::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGraphicsExposeEvent.html' title='struct x11::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XGravityEvent.html' title='struct x11::xlib::XGravityEvent'>XGravityEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XGravityEvent.html' title='struct x11::xlib::XGravityEvent'>XGravityEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGravityEvent.html' title='struct x11::xlib::XGravityEvent'>XGravityEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGravityEvent.html' title='struct x11::xlib::XGravityEvent'>XGravityEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XKeyEvent.html' title='struct x11::xlib::XKeyEvent'>XKeyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XKeyEvent.html' title='struct x11::xlib::XKeyEvent'>XKeyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XKeyEvent.html' title='struct x11::xlib::XKeyEvent'>XKeyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XKeyEvent.html' title='struct x11::xlib::XKeyEvent'>XKeyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XKeymapEvent.html' title='struct x11::xlib::XKeymapEvent'>XKeymapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XKeymapEvent.html' title='struct x11::xlib::XKeymapEvent'>XKeymapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XKeymapEvent.html' title='struct x11::xlib::XKeymapEvent'>XKeymapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XKeymapEvent.html' title='struct x11::xlib::XKeymapEvent'>XKeymapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XMapEvent.html' title='struct x11::xlib::XMapEvent'>XMapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XMapEvent.html' title='struct x11::xlib::XMapEvent'>XMapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMapEvent.html' title='struct x11::xlib::XMapEvent'>XMapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMapEvent.html' title='struct x11::xlib::XMapEvent'>XMapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XMappingEvent.html' title='struct x11::xlib::XMappingEvent'>XMappingEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XMappingEvent.html' title='struct x11::xlib::XMappingEvent'>XMappingEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMappingEvent.html' title='struct x11::xlib::XMappingEvent'>XMappingEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMappingEvent.html' title='struct x11::xlib::XMappingEvent'>XMappingEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XMapRequestEvent.html' title='struct x11::xlib::XMapRequestEvent'>XMapRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XMapRequestEvent.html' title='struct x11::xlib::XMapRequestEvent'>XMapRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMapRequestEvent.html' title='struct x11::xlib::XMapRequestEvent'>XMapRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMapRequestEvent.html' title='struct x11::xlib::XMapRequestEvent'>XMapRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XMotionEvent.html' title='struct x11::xlib::XMotionEvent'>XMotionEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XMotionEvent.html' title='struct x11::xlib::XMotionEvent'>XMotionEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMotionEvent.html' title='struct x11::xlib::XMotionEvent'>XMotionEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMotionEvent.html' title='struct x11::xlib::XMotionEvent'>XMotionEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XNoExposeEvent.html' title='struct x11::xlib::XNoExposeEvent'>XNoExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XNoExposeEvent.html' title='struct x11::xlib::XNoExposeEvent'>XNoExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XNoExposeEvent.html' title='struct x11::xlib::XNoExposeEvent'>XNoExposeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XNoExposeEvent.html' title='struct x11::xlib::XNoExposeEvent'>XNoExposeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XPropertyEvent.html' title='struct x11::xlib::XPropertyEvent'>XPropertyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XPropertyEvent.html' title='struct x11::xlib::XPropertyEvent'>XPropertyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XPropertyEvent.html' title='struct x11::xlib::XPropertyEvent'>XPropertyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XPropertyEvent.html' title='struct x11::xlib::XPropertyEvent'>XPropertyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XReparentEvent.html' title='struct x11::xlib::XReparentEvent'>XReparentEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XReparentEvent.html' title='struct x11::xlib::XReparentEvent'>XReparentEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XReparentEvent.html' title='struct x11::xlib::XReparentEvent'>XReparentEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XReparentEvent.html' title='struct x11::xlib::XReparentEvent'>XReparentEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XResizeRequestEvent.html' title='struct x11::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XResizeRequestEvent.html' title='struct x11::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XResizeRequestEvent.html' title='struct x11::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XResizeRequestEvent.html' title='struct x11::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XSelectionClearEvent.html' title='struct x11::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XSelectionClearEvent.html' title='struct x11::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionClearEvent.html' title='struct x11::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionClearEvent.html' title='struct x11::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XSelectionEvent.html' title='struct x11::xlib::XSelectionEvent'>XSelectionEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XSelectionEvent.html' title='struct x11::xlib::XSelectionEvent'>XSelectionEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionEvent.html' title='struct x11::xlib::XSelectionEvent'>XSelectionEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionEvent.html' title='struct x11::xlib::XSelectionEvent'>XSelectionEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XSelectionRequestEvent.html' title='struct x11::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XSelectionRequestEvent.html' title='struct x11::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionRequestEvent.html' title='struct x11::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionRequestEvent.html' title='struct x11::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XUnmapEvent.html' title='struct x11::xlib::XUnmapEvent'>XUnmapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XUnmapEvent.html' title='struct x11::xlib::XUnmapEvent'>XUnmapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XUnmapEvent.html' title='struct x11::xlib::XUnmapEvent'>XUnmapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XUnmapEvent.html' title='struct x11::xlib::XUnmapEvent'>XUnmapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XVisibilityEvent.html' title='struct x11::xlib::XVisibilityEvent'>XVisibilityEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XVisibilityEvent.html' title='struct x11::xlib::XVisibilityEvent'>XVisibilityEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XVisibilityEvent.html' title='struct x11::xlib::XVisibilityEvent'>XVisibilityEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XVisibilityEvent.html' title='struct x11::xlib::XVisibilityEvent'>XVisibilityEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.i8.html'>i8</a><a class='primitive' href='std/primitive.array.html'>; 20]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 20]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.i16.html'>i16</a><a class='primitive' href='std/primitive.array.html'>; 10]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 10]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.i64.html'>i64</a><a class='primitive' href='std/primitive.array.html'>; 5]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u64.html'>u64</a><a class='primitive' href='std/primitive.array.html'>; 5]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xf86vmode/struct.XF86VidModeNotifyEvent.html' title='struct x11::xf86vmode::XF86VidModeNotifyEvent'>XF86VidModeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xf86vmode/struct.XF86VidModeNotifyEvent.html' title='struct x11::xf86vmode::XF86VidModeNotifyEvent'>XF86VidModeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xf86vmode/struct.XF86VidModeNotifyEvent.html' title='struct x11::xf86vmode::XF86VidModeNotifyEvent'>XF86VidModeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xf86vmode/struct.XF86VidModeNotifyEvent.html' title='struct x11::xf86vmode::XF86VidModeNotifyEvent'>XF86VidModeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRScreenChangeNotifyEvent.html' title='struct x11::xrandr::XRRScreenChangeNotifyEvent'>XRRScreenChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRScreenChangeNotifyEvent.html' title='struct x11::xrandr::XRRScreenChangeNotifyEvent'>XRRScreenChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRScreenChangeNotifyEvent.html' title='struct x11::xrandr::XRRScreenChangeNotifyEvent'>XRRScreenChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRScreenChangeNotifyEvent.html' title='struct x11::xrandr::XRRScreenChangeNotifyEvent'>XRRScreenChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRNotifyEvent.html' title='struct x11::xrandr::XRRNotifyEvent'>XRRNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRNotifyEvent.html' title='struct x11::xrandr::XRRNotifyEvent'>XRRNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRNotifyEvent.html' title='struct x11::xrandr::XRRNotifyEvent'>XRRNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRNotifyEvent.html' title='struct x11::xrandr::XRRNotifyEvent'>XRRNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRROutputChangeNotifyEvent.html' title='struct x11::xrandr::XRROutputChangeNotifyEvent'>XRROutputChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRROutputChangeNotifyEvent.html' title='struct x11::xrandr::XRROutputChangeNotifyEvent'>XRROutputChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRROutputChangeNotifyEvent.html' title='struct x11::xrandr::XRROutputChangeNotifyEvent'>XRROutputChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRROutputChangeNotifyEvent.html' title='struct x11::xrandr::XRROutputChangeNotifyEvent'>XRROutputChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRCrtcChangeNotifyEvent.html' title='struct x11::xrandr::XRRCrtcChangeNotifyEvent'>XRRCrtcChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRCrtcChangeNotifyEvent.html' title='struct x11::xrandr::XRRCrtcChangeNotifyEvent'>XRRCrtcChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRCrtcChangeNotifyEvent.html' title='struct x11::xrandr::XRRCrtcChangeNotifyEvent'>XRRCrtcChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRCrtcChangeNotifyEvent.html' title='struct x11::xrandr::XRRCrtcChangeNotifyEvent'>XRRCrtcChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRROutputPropertyNotifyEvent.html' title='struct x11::xrandr::XRROutputPropertyNotifyEvent'>XRROutputPropertyNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRROutputPropertyNotifyEvent.html' title='struct x11::xrandr::XRROutputPropertyNotifyEvent'>XRROutputPropertyNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRROutputPropertyNotifyEvent.html' title='struct x11::xrandr::XRROutputPropertyNotifyEvent'>XRROutputPropertyNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRROutputPropertyNotifyEvent.html' title='struct x11::xrandr::XRROutputPropertyNotifyEvent'>XRROutputPropertyNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRProviderChangeNotifyEvent.html' title='struct x11::xrandr::XRRProviderChangeNotifyEvent'>XRRProviderChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRProviderChangeNotifyEvent.html' title='struct x11::xrandr::XRRProviderChangeNotifyEvent'>XRRProviderChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRProviderChangeNotifyEvent.html' title='struct x11::xrandr::XRRProviderChangeNotifyEvent'>XRRProviderChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRProviderChangeNotifyEvent.html' title='struct x11::xrandr::XRRProviderChangeNotifyEvent'>XRRProviderChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRProviderPropertyNotifyEvent.html' title='struct x11::xrandr::XRRProviderPropertyNotifyEvent'>XRRProviderPropertyNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRProviderPropertyNotifyEvent.html' title='struct x11::xrandr::XRRProviderPropertyNotifyEvent'>XRRProviderPropertyNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRProviderPropertyNotifyEvent.html' title='struct x11::xrandr::XRRProviderPropertyNotifyEvent'>XRRProviderPropertyNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRProviderPropertyNotifyEvent.html' title='struct x11::xrandr::XRRProviderPropertyNotifyEvent'>XRRProviderPropertyNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRResourceChangeNotifyEvent.html' title='struct x11::xrandr::XRRResourceChangeNotifyEvent'>XRRResourceChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRResourceChangeNotifyEvent.html' title='struct x11::xrandr::XRRResourceChangeNotifyEvent'>XRRResourceChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRResourceChangeNotifyEvent.html' title='struct x11::xrandr::XRRResourceChangeNotifyEvent'>XRRResourceChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRResourceChangeNotifyEvent.html' title='struct x11::xrandr::XRRResourceChangeNotifyEvent'>XRRResourceChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xss/struct.XScreenSaverNotifyEvent.html' title='struct x11::xss::XScreenSaverNotifyEvent'>XScreenSaverNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xss/struct.XScreenSaverNotifyEvent.html' title='struct x11::xss::XScreenSaverNotifyEvent'>XScreenSaverNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xss/struct.XScreenSaverNotifyEvent.html' title='struct x11::xss::XScreenSaverNotifyEvent'>XScreenSaverNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xss/struct.XScreenSaverNotifyEvent.html' title='struct x11::xss::XScreenSaverNotifyEvent'>XScreenSaverNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='enum' href='bincode/serde/enum.ErrorKind.html' title='enum bincode::serde::ErrorKind'>ErrorKind</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='bitreader/enum.BitReaderError.html' title='enum bitreader::BitReaderError'>BitReaderError</a>&gt; for <a class='enum' href='mp4parse/enum.Error.html' title='enum mp4parse::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='mp4parse/enum.Error.html' title='enum mp4parse::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.FromUtf8Error.html' title='struct collections::string::FromUtf8Error'>FromUtf8Error</a>&gt; for <a class='enum' href='mp4parse/enum.Error.html' title='enum mp4parse::Error'>Error</a>","impl&lt;F, A&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='tendril/tendril/struct.Tendril.html' title='struct tendril::tendril::Tendril'>Tendril</a>&lt;F, A&gt;&gt; for <a class='struct' href='tendril/tendril/struct.SendTendril.html' title='struct tendril::tendril::SendTendril'>SendTendril</a>&lt;F&gt; <span class='where fmt-newline'>where A: <a class='trait' href='tendril/tendril/trait.Atomicity.html' title='trait tendril::tendril::Atomicity'>Atomicity</a>, F: <a class='trait' href='tendril/fmt/trait.Format.html' title='trait tendril::fmt::Format'>Format</a></span>","impl&lt;F, A&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='tendril/tendril/struct.SendTendril.html' title='struct tendril::tendril::SendTendril'>SendTendril</a>&lt;F&gt;&gt; for <a class='struct' href='tendril/tendril/struct.Tendril.html' title='struct tendril::tendril::Tendril'>Tendril</a>&lt;F, A&gt; <span class='where fmt-newline'>where A: <a class='trait' href='tendril/tendril/trait.Atomicity.html' title='trait tendril::tendril::Atomicity'>Atomicity</a>, F: <a class='trait' href='tendril/fmt/trait.Format.html' title='trait tendril::fmt::Format'>Format</a></span>","impl&lt;'a, F, A&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a F::<a class='trait' href='tendril/fmt/trait.SliceFormat.html' title='trait tendril::fmt::SliceFormat'>Slice</a>&gt; for <a class='struct' href='tendril/tendril/struct.Tendril.html' title='struct tendril::tendril::Tendril'>Tendril</a>&lt;F, A&gt; <span class='where fmt-newline'>where A: <a class='trait' href='tendril/tendril/trait.Atomicity.html' title='trait tendril::tendril::Atomicity'>Atomicity</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;F: <a class='trait' href='tendril/fmt/trait.SliceFormat.html' title='trait tendril::fmt::SliceFormat'>SliceFormat</a></span>","impl&lt;A&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='tendril/tendril/struct.Tendril.html' title='struct tendril::tendril::Tendril'>Tendril</a>&lt;<a class='struct' href='tendril/fmt/struct.UTF8.html' title='struct tendril::fmt::UTF8'>UTF8</a>, A&gt; <span class='where fmt-newline'>where A: <a class='trait' href='tendril/tendril/trait.Atomicity.html' title='trait tendril::tendril::Atomicity'>Atomicity</a></span>","impl&lt;A&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='tendril/tendril/struct.Tendril.html' title='struct tendril::tendril::Tendril'>Tendril</a>&lt;<a class='struct' href='tendril/fmt/struct.UTF8.html' title='struct tendril::fmt::UTF8'>UTF8</a>, A&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a> <span class='where fmt-newline'>where A: <a class='trait' href='tendril/tendril/trait.Atomicity.html' title='trait tendril::tendril::Atomicity'>Atomicity</a></span>","impl&lt;'a, A&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='tendril/tendril/struct.Tendril.html' title='struct tendril::tendril::Tendril'>Tendril</a>&lt;<a class='struct' href='tendril/fmt/struct.UTF8.html' title='struct tendril::fmt::UTF8'>UTF8</a>, A&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a> <span class='where fmt-newline'>where A: <a class='trait' href='tendril/tendril/trait.Atomicity.html' title='trait tendril::tendril::Atomicity'>Atomicity</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='atomic_refcell/struct.AtomicRefCell.html' title='struct atomic_refcell::AtomicRefCell'>AtomicRefCell</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='ordered_float/struct.OrderedFloat.html' title='struct ordered_float::OrderedFloat'>OrderedFloat</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='num_traits/float/trait.Float.html' title='trait num_traits::float::Float'>Float</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='ordered_float/struct.NotNaN.html' title='struct ordered_float::NotNaN'>NotNaN</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='num_traits/float/trait.Float.html' title='trait num_traits::float::Float'>Float</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='ogg_metadata/enum.OggMetadataError.html' title='enum ogg_metadata::OggMetadataError'>OggMetadataError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='ogg/enum.OggReadError.html' title='enum ogg::OggReadError'>OggReadError</a>&gt; for <a class='enum' href='ogg_metadata/enum.OggMetadataError.html' title='enum ogg_metadata::OggMetadataError'>OggMetadataError</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for <a class='struct' href='serde/bytes/struct.Bytes.html' title='struct serde::bytes::Bytes'>Bytes</a>&lt;'a&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;&gt; for <a class='struct' href='serde/bytes/struct.Bytes.html' title='struct serde::bytes::Bytes'>Bytes</a>&lt;'a&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;&gt; for <a class='struct' href='serde/bytes/bytebuf/struct.ByteBuf.html' title='struct serde::bytes::bytebuf::ByteBuf'>ByteBuf</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='enum' href='webrender_traits/enum.PropertyBinding.html' title='enum webrender_traits::PropertyBinding'>PropertyBinding</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='webrender_traits/struct.PropertyBindingKey.html' title='struct webrender_traits::PropertyBindingKey'>PropertyBindingKey</a>&lt;T&gt;&gt; for <a class='enum' href='webrender_traits/enum.PropertyBinding.html' title='enum webrender_traits::PropertyBinding'>PropertyBinding</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='webrender_traits/struct.ColorF.html' title='struct webrender_traits::ColorF'>ColorF</a>&gt; for <a class='struct' href='webrender_traits/struct.ColorU.html' title='struct webrender_traits::ColorU'>ColorU</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='fontsan/enum.Error.html' title='enum fontsan::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;ErrorImpl&gt; for <a class='struct' href='serde_json/error/struct.Error.html' title='struct serde_json::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='struct' href='serde_json/error/struct.Error.html' title='struct serde_json::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='serde/de/value/struct.Error.html' title='struct serde::de::value::Error'>Error</a>&gt; for <a class='struct' href='serde_json/error/struct.Error.html' title='struct serde_json::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.f32.html'>f32</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.f64.html'>f64</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.bool.html'>bool</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='serde_json/map/struct.Map.html' title='struct serde_json::map::Map'>Map</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>, <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>&gt;&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>&gt;</span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a> + <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>&gt;</span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.i8.html'>i8</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.i16.html'>i16</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.i32.html'>i32</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.i64.html'>i64</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.isize.html'>isize</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u16.html'>u16</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u64.html'>u64</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.usize.html'>usize</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.i8.html'>i8</a>&gt; for <a class='struct' href='serde_json/number/struct.Number.html' title='struct serde_json::number::Number'>Number</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.i16.html'>i16</a>&gt; for <a class='struct' href='serde_json/number/struct.Number.html' title='struct serde_json::number::Number'>Number</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.i32.html'>i32</a>&gt; for <a class='struct' href='serde_json/number/struct.Number.html' title='struct serde_json::number::Number'>Number</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.i64.html'>i64</a>&gt; for <a class='struct' href='serde_json/number/struct.Number.html' title='struct serde_json::number::Number'>Number</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.isize.html'>isize</a>&gt; for <a class='struct' href='serde_json/number/struct.Number.html' title='struct serde_json::number::Number'>Number</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt; for <a class='struct' href='serde_json/number/struct.Number.html' title='struct serde_json::number::Number'>Number</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u16.html'>u16</a>&gt; for <a class='struct' href='serde_json/number/struct.Number.html' title='struct serde_json::number::Number'>Number</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='serde_json/number/struct.Number.html' title='struct serde_json::number::Number'>Number</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u64.html'>u64</a>&gt; for <a class='struct' href='serde_json/number/struct.Number.html' title='struct serde_json::number::Number'>Number</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.usize.html'>usize</a>&gt; for <a class='struct' href='serde_json/number/struct.Number.html' title='struct serde_json::number::Number'>Number</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.bool.html'>bool</a>&gt; for <a class='struct' href='simd/struct.bool8i.html' title='struct simd::bool8i'>bool8i</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='simd/struct.bool8i.html' title='struct simd::bool8i'>bool8i</a>&gt; for <a class='primitive' href='std/primitive.bool.html'>bool</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.bool.html'>bool</a>&gt; for <a class='struct' href='simd/struct.bool16i.html' title='struct simd::bool16i'>bool16i</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='simd/struct.bool16i.html' title='struct simd::bool16i'>bool16i</a>&gt; for <a class='primitive' href='std/primitive.bool.html'>bool</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.bool.html'>bool</a>&gt; for <a class='struct' href='simd/struct.bool32i.html' title='struct simd::bool32i'>bool32i</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='simd/struct.bool32i.html' title='struct simd::bool32i'>bool32i</a>&gt; for <a class='primitive' href='std/primitive.bool.html'>bool</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.bool.html'>bool</a>&gt; for <a class='struct' href='simd/struct.bool32f.html' title='struct simd::bool32f'>bool32f</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='simd/struct.bool32f.html' title='struct simd::bool32f'>bool32f</a>&gt; for <a class='primitive' href='std/primitive.bool.html'>bool</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt; for <a class='enum' href='mp3_metadata/enums/enum.Version.html' title='enum mp3_metadata::enums::Version'>Version</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt; for <a class='enum' href='mp3_metadata/enums/enum.Layer.html' title='enum mp3_metadata::enums::Layer'>Layer</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt; for <a class='enum' href='mp3_metadata/enums/enum.CRC.html' title='enum mp3_metadata::enums::CRC'>CRC</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt; for <a class='enum' href='mp3_metadata/enums/enum.ChannelType.html' title='enum mp3_metadata::enums::ChannelType'>ChannelType</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt; for <a class='enum' href='mp3_metadata/enums/enum.Copyright.html' title='enum mp3_metadata::enums::Copyright'>Copyright</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt; for <a class='enum' href='mp3_metadata/enums/enum.Status.html' title='enum mp3_metadata::enums::Status'>Status</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt; for <a class='enum' href='mp3_metadata/enums/enum.Emphasis.html' title='enum mp3_metadata::enums::Emphasis'>Emphasis</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='mp3_metadata/enums/enum.Genre.html' title='enum mp3_metadata::enums::Genre'>Genre</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt; for <a class='enum' href='mp3_metadata/enums/enum.Genre.html' title='enum mp3_metadata::enums::Genre'>Genre</a>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='struct std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt;","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='struct std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/io/error/enum.ErrorKind.html' title='enum std::io::error::ErrorKind'>ErrorKind</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='primitive' href='std/primitive.u128.html'>u128</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u128.html'>u128</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV4.html' title='struct std::net::addr::SocketAddrV4'>SocketAddrV4</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV6.html' title='struct std::net::addr::SocketAddrV6'>SocketAddrV6</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl&lt;I&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>I, <a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a> <span class='where fmt-newline'>where I: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='struct std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='enum std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;'a, Static&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='string_cache/atom/struct.Atom.html' title='struct string_cache::atom::Atom'>Atom</a>&lt;Static&gt; <span class='where fmt-newline'>where Static: <a class='trait' href='string_cache/atom/trait.StaticAtomSet.html' title='trait string_cache::atom::StaticAtomSet'>StaticAtomSet</a></span>","impl&lt;'a, Static&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='string_cache/atom/struct.Atom.html' title='struct string_cache::atom::Atom'>Atom</a>&lt;Static&gt; <span class='where fmt-newline'>where Static: <a class='trait' href='string_cache/atom/trait.StaticAtomSet.html' title='trait string_cache::atom::StaticAtomSet'>StaticAtomSet</a></span>","impl&lt;Static&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='string_cache/atom/struct.Atom.html' title='struct string_cache::atom::Atom'>Atom</a>&lt;Static&gt; <span class='where fmt-newline'>where Static: <a class='trait' href='string_cache/atom/trait.StaticAtomSet.html' title='trait string_cache::atom::StaticAtomSet'>StaticAtomSet</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='png/decoder/stream/enum.DecodingError.html' title='enum png::decoder::stream::DecodingError'>DecodingError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='png/decoder/stream/enum.DecodingError.html' title='enum png::decoder::stream::DecodingError'>DecodingError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='png/decoder/stream/enum.DecodingError.html' title='enum png::decoder::stream::DecodingError'>DecodingError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='png/encoder/enum.EncodingError.html' title='enum png::encoder::EncodingError'>EncodingError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='png/encoder/enum.EncodingError.html' title='enum png::encoder::EncodingError'>EncodingError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='regex_syntax/struct.Error.html' title='struct regex_syntax::Error'>Error</a>&gt; for <a class='enum' href='regex/error/enum.Error.html' title='enum regex::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;Exec&gt; for <a class='struct' href='regex/re_bytes/struct.Regex.html' title='struct regex::re_bytes::Regex'>Regex</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;Exec&gt; for <a class='struct' href='regex/re_unicode/struct.Regex.html' title='struct regex::re_unicode::Regex'>Regex</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;Exec&gt; for <a class='struct' href='regex/re_set/unicode/struct.RegexSet.html' title='struct regex::re_set::unicode::RegexSet'>RegexSet</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;Exec&gt; for <a class='struct' href='regex/re_set/bytes/struct.RegexSet.html' title='struct regex::re_set::bytes::RegexSet'>RegexSet</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;Specificity&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='style/restyle_hints/struct.RestyleHint.html' title='struct style::restyle_hints::RestyleHint'>RestyleHint</a>&gt; for <a class='struct' href='style/data/struct.StoredRestyleHint.html' title='struct style::data::StoredRestyleHint'>StoredRestyleHint</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='style/stylesheets/enum.SingleRuleParseError.html' title='enum style::stylesheets::SingleRuleParseError'>SingleRuleParseError</a>&gt; for <a class='enum' href='style/stylesheets/enum.RulesMutateError.html' title='enum style::stylesheets::RulesMutateError'>RulesMutateError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='style/values/computed/length/enum.LengthOrPercentage.html' title='enum style::values::computed::length::LengthOrPercentage'>LengthOrPercentage</a>&gt; for <a class='struct' href='style/values/computed/length/struct.CalcLengthOrPercentage.html' title='struct style::values::computed::length::CalcLengthOrPercentage'>CalcLengthOrPercentage</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='style/values/computed/length/enum.LengthOrPercentageOrAuto.html' title='enum style::values::computed::length::LengthOrPercentageOrAuto'>LengthOrPercentageOrAuto</a>&gt; for <a class='enum' href='core/option/enum.Option.html' title='enum core::option::Option'>Option</a>&lt;<a class='struct' href='style/values/computed/length/struct.CalcLengthOrPercentage.html' title='struct style::values::computed::length::CalcLengthOrPercentage'>CalcLengthOrPercentage</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='style/values/specified/length/enum.NoCalcLength.html' title='enum style::values::specified::length::NoCalcLength'>NoCalcLength</a>&gt; for <a class='enum' href='style/values/specified/length/enum.Length.html' title='enum style::values::specified::length::Length'>Length</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='style/values/specified/length/enum.Length.html' title='enum style::values::specified::length::Length'>Length</a>&gt; for <a class='enum' href='style/values/specified/length/enum.LengthOrPercentage.html' title='enum style::values::specified::length::LengthOrPercentage'>LengthOrPercentage</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='style/values/specified/length/enum.NoCalcLength.html' title='enum style::values::specified::length::NoCalcLength'>NoCalcLength</a>&gt; for <a class='enum' href='style/values/specified/length/enum.LengthOrPercentage.html' title='enum style::values::specified::length::LengthOrPercentage'>LengthOrPercentage</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='style/values/specified/length/struct.Percentage.html' title='struct style::values::specified::length::Percentage'>Percentage</a>&gt; for <a class='enum' href='style/values/specified/length/enum.LengthOrPercentage.html' title='enum style::values::specified::length::LengthOrPercentage'>LengthOrPercentage</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='style/values/specified/length/enum.NoCalcLength.html' title='enum style::values::specified::length::NoCalcLength'>NoCalcLength</a>&gt; for <a class='enum' href='style/values/specified/length/enum.LengthOrPercentageOrAuto.html' title='enum style::values::specified::length::LengthOrPercentageOrAuto'>LengthOrPercentageOrAuto</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='style/values/specified/length/struct.Percentage.html' title='struct style::values::specified::length::Percentage'>Percentage</a>&gt; for <a class='enum' href='style/values/specified/length/enum.LengthOrPercentageOrAuto.html' title='enum style::values::specified::length::LengthOrPercentageOrAuto'>LengthOrPercentageOrAuto</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='style/properties/longhands/background_origin/single_value/computed_value/enum.T.html' title='enum style::properties::longhands::background_origin::single_value::computed_value::T'>T</a>&gt; for <a class='enum' href='style/properties/longhands/background_clip/single_value/computed_value/enum.T.html' title='enum style::properties::longhands::background_clip::single_value::computed_value::T'>T</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='style/properties/longhands/transform/computed_value/struct.ComputedMatrix.html' title='struct style::properties::longhands::transform::computed_value::ComputedMatrix'>ComputedMatrix</a>&gt; for <a class='struct' href='style/properties/animated_properties/struct.MatrixDecomposed2D.html' title='struct style::properties::animated_properties::MatrixDecomposed2D'>MatrixDecomposed2D</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='style/properties/animated_properties/struct.MatrixDecomposed2D.html' title='struct style::properties::animated_properties::MatrixDecomposed2D'>MatrixDecomposed2D</a>&gt; for <a class='struct' href='style/properties/longhands/transform/computed_value/struct.ComputedMatrix.html' title='struct style::properties::longhands::transform::computed_value::ComputedMatrix'>ComputedMatrix</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='style/properties/animated_properties/struct.MatrixDecomposed3D.html' title='struct style::properties::animated_properties::MatrixDecomposed3D'>MatrixDecomposed3D</a>&gt; for <a class='struct' href='style/properties/longhands/transform/computed_value/struct.ComputedMatrix.html' title='struct style::properties::longhands::transform::computed_value::ComputedMatrix'>ComputedMatrix</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='websocket/result/enum.WebSocketError.html' title='enum websocket::result::WebSocketError'>WebSocketError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>&gt; for <a class='enum' href='websocket/result/enum.WebSocketError.html' title='enum websocket::result::WebSocketError'>WebSocketError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='url/parser/enum.ParseError.html' title='enum url::parser::ParseError'>ParseError</a>&gt; for <a class='enum' href='websocket/result/enum.WebSocketError.html' title='enum websocket::result::WebSocketError'>WebSocketError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='openssl/ssl/error/enum.SslError.html' title='enum openssl::ssl::error::SslError'>SslError</a>&gt; for <a class='enum' href='websocket/result/enum.WebSocketError.html' title='enum websocket::result::WebSocketError'>WebSocketError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='core/str/struct.Utf8Error.html' title='struct core::str::Utf8Error'>Utf8Error</a>&gt; for <a class='enum' href='websocket/result/enum.WebSocketError.html' title='enum websocket::result::WebSocketError'>WebSocketError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='websocket/result/enum.WSUrlErrorKind.html' title='enum websocket::result::WSUrlErrorKind'>WSUrlErrorKind</a>&gt; for <a class='enum' href='websocket/result/enum.WebSocketError.html' title='enum websocket::result::WebSocketError'>WebSocketError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='gif/reader/decoder/enum.DecodingError.html' title='enum gif::reader::decoder::DecodingError'>DecodingError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a><a class='enum' href='png/common/enum.ColorType.html' title='enum png::common::ColorType'>ColorType</a>, <a class='enum' href='png/common/enum.BitDepth.html' title='enum png::common::BitDepth'>BitDepth</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='image/color/enum.ColorType.html' title='enum image::color::ColorType'>ColorType</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='image/color/enum.ColorType.html' title='enum image::color::ColorType'>ColorType</a>&gt; for <a class='primitive' href='std/primitive.tuple.html'>(</a><a class='enum' href='png/common/enum.ColorType.html' title='enum png::common::ColorType'>ColorType</a>, <a class='enum' href='png/common/enum.BitDepth.html' title='enum png::common::BitDepth'>BitDepth</a><a class='primitive' href='std/primitive.tuple.html'>)</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='png/decoder/stream/enum.DecodingError.html' title='enum png::decoder::stream::DecodingError'>DecodingError</a>&gt; for <a class='enum' href='image/image/enum.ImageError.html' title='enum image::image::ImageError'>ImageError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='jpeg_decoder/decoder/enum.PixelFormat.html' title='enum jpeg_decoder::decoder::PixelFormat'>PixelFormat</a>&gt; for <a class='enum' href='image/color/enum.ColorType.html' title='enum image::color::ColorType'>ColorType</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='jpeg_decoder/error/enum.Error.html' title='enum jpeg_decoder::error::Error'>Error</a>&gt; for <a class='enum' href='image/image/enum.ImageError.html' title='enum image::image::ImageError'>ImageError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='gif/reader/decoder/enum.DecodingError.html' title='enum gif::reader::decoder::DecodingError'>DecodingError</a>&gt; for <a class='enum' href='image/image/enum.ImageError.html' title='enum image::image::ImageError'>ImageError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='image/image/enum.ImageError.html' title='enum image::image::ImageError'>ImageError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='rustc_serialize/json/enum.ParserError.html' title='enum rustc_serialize::json::ParserError'>ParserError</a>&gt; for <a class='enum' href='rustc_serialize/json/enum.DecoderError.html' title='enum rustc_serialize::json::DecoderError'>DecoderError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='rustc_serialize/json/enum.ParserError.html' title='enum rustc_serialize::json::ParserError'>ParserError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='core/fmt/struct.Error.html' title='struct core::fmt::Error'>Error</a>&gt; for <a class='enum' href='rustc_serialize/json/enum.EncoderError.html' title='enum rustc_serialize::json::EncoderError'>EncoderError</a>","impl&lt;'a, R&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a mut R&gt; for <a class='enum' href='hyper/client/enum.Body.html' title='enum hyper::client::Body'>Body</a>&lt;'a&gt; <span class='where fmt-newline'>where R: <a class='trait' href='std/io/trait.Read.html' title='trait std::io::Read'>Read</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='url/parser/enum.ParseError.html' title='enum url::parser::ParseError'>ParseError</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='openssl/ssl/error/enum.SslError.html' title='enum openssl::ssl::error::SslError'>SslError</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='core/str/struct.Utf8Error.html' title='struct core::str::Utf8Error'>Utf8Error</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.FromUtf8Error.html' title='struct collections::string::FromUtf8Error'>FromUtf8Error</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='httparse/enum.Error.html' title='enum httparse::Error'>Error</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='solicit/http/enum.HttpError.html' title='enum solicit::http::HttpError'>HttpError</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='hyper/http/h1/struct.EndError.html' title='struct hyper::http::h1::EndError'>EndError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a> <span class='where fmt-newline'>where W: <a class='trait' href='std/io/trait.Write.html' title='trait std::io::Write'>Write</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='hyper/net/trait.NetworkStream.html' title='trait hyper::net::NetworkStream'>NetworkStream</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='hyper/net/trait.NetworkStream.html' title='trait hyper::net::NetworkStream'>NetworkStream</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/tcp/struct.TcpListener.html' title='struct std::net::tcp::TcpListener'>TcpListener</a>&gt; for <a class='struct' href='hyper/net/struct.HttpListener.html' title='struct hyper::net::HttpListener'>HttpListener</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='trait core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>: <a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>ToOwned</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>::<a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>Owned</a> == <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;O, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;O&gt; for <a class='struct' href='owning_ref/struct.OwningRef.html' title='struct owning_ref::OwningRef'>OwningRef</a>&lt;O, T&gt; <span class='where fmt-newline'>where O: <a class='trait' href='owning_ref/trait.StableAddress.html' title='trait owning_ref::StableAddress'>StableAddress</a>&lt;Target=T&gt; + <a class='trait' href='core/ops/trait.Deref.html' title='trait core::ops::Deref'>Deref</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T: ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='url/struct.Url.html' title='struct url::Url'>Url</a>&gt; for <a class='struct' href='servo_url/struct.ServoUrl.html' title='struct servo_url::ServoUrl'>ServoUrl</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='script/dom/bindings/str/struct.DOMString.html' title='struct script::dom::bindings::str::DOMString'>DOMString</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='script/dom/bindings/str/struct.DOMString.html' title='struct script::dom::bindings::str::DOMString'>DOMString</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='script/dom/bindings/str/struct.DOMString.html' title='struct script::dom::bindings::str::DOMString'>DOMString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='script/dom/bindings/str/struct.DOMString.html' title='struct script::dom::bindings::str::DOMString'>DOMString</a>&gt; for <a class='struct' href='string_cache/atom/struct.Atom.html' title='struct string_cache::atom::Atom'>Atom</a>&lt;<a class='struct' href='html5ever_atoms/struct.LocalNameStaticSet.html' title='struct html5ever_atoms::LocalNameStaticSet'>LocalNameStaticSet</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='script/dom/bindings/str/struct.DOMString.html' title='struct script::dom::bindings::str::DOMString'>DOMString</a>&gt; for <a class='struct' href='string_cache/atom/struct.Atom.html' title='struct string_cache::atom::Atom'>Atom</a>&lt;<a class='struct' href='html5ever_atoms/struct.NamespaceStaticSet.html' title='struct html5ever_atoms::NamespaceStaticSet'>NamespaceStaticSet</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='script/dom/bindings/str/struct.DOMString.html' title='struct script::dom::bindings::str::DOMString'>DOMString</a>&gt; for <a class='struct' href='string_cache/atom/struct.Atom.html' title='struct string_cache::atom::Atom'>Atom</a>&lt;<a class='struct' href='servo_atoms/struct.AtomStaticSet.html' title='struct servo_atoms::AtomStaticSet'>AtomStaticSet</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='script/dom/bindings/str/struct.DOMString.html' title='struct script::dom::bindings::str::DOMString'>DOMString</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;EventBubbles&gt; for <a class='primitive' href='std/primitive.bool.html'>bool</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;EventCancelable&gt; for <a class='primitive' href='std/primitive.bool.html'>bool</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a WebGLContextAttributes&gt; for <a class='struct' href='offscreen_gl_context/gl_context_attributes/struct.GLContextAttributes.html' title='struct offscreen_gl_context::gl_context_attributes::GLContextAttributes'>GLContextAttributes</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='script/dom/bindings/str/struct.DOMString.html' title='struct script::dom::bindings::str::DOMString'>DOMString</a>&gt; for <a class='enum' href='script/textinput/enum.SelectionDirection.html' title='enum script::textinput::SelectionDirection'>SelectionDirection</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='script/textinput/enum.SelectionDirection.html' title='enum script::textinput::SelectionDirection'>SelectionDirection</a>&gt; for <a class='struct' href='script/dom/bindings/str/struct.DOMString.html' title='struct script::dom::bindings::str::DOMString'>DOMString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='deflate/compression_options/enum.Compression.html' title='enum deflate::compression_options::Compression'>Compression</a>&gt; for <a class='struct' href='deflate/compression_options/struct.CompressionOptions.html' title='struct deflate::compression_options::CompressionOptions'>CompressionOptions</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;HuffmanError&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;&gt; for <a class='struct' href='solicit/http/frame/struct.RawFrame.html' title='struct solicit::http::frame::RawFrame'>RawFrame</a>","impl&lt;E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='enum' href='solicit/http/session/enum.StreamDataError.html' title='enum solicit::http::session::StreamDataError'>StreamDataError</a> <span class='where fmt-newline'>where E: <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a> + 'static</span>","impl&lt;E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='enum' href='solicit/http/enum.HttpError.html' title='enum solicit::http::HttpError'>HttpError</a> <span class='where fmt-newline'>where E: <a class='trait' href='solicit/http/client/trait.HttpConnectError.html' title='trait solicit::http::client::HttpConnectError'>HttpConnectError</a> + 'static</span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='struct' href='solicit/http/client/struct.CleartextConnectError.html' title='struct solicit::http::client::CleartextConnectError'>CleartextConnectError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='solicit/http/enum.HttpError.html' title='enum solicit::http::HttpError'>HttpError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;Error&gt; for <a class='primitive' href='std/primitive.tuple.html'>()</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='enum' href='hyper/header/common/referrer_policy/enum.ReferrerPolicy.html' title='enum hyper::header::common::referrer_policy::ReferrerPolicy'>ReferrerPolicy</a>&gt; for <a class='enum' href='net_traits/enum.ReferrerPolicy.html' title='enum net_traits::ReferrerPolicy'>ReferrerPolicy</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for &amp;'a <a class='struct' href='mio/iovec/struct.IoVec.html' title='struct mio::iovec::IoVec'>IoVec</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a mut [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for &amp;'a mut <a class='struct' href='mio/iovec/struct.IoVec.html' title='struct mio::iovec::IoVec'>IoVec</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for &amp;'a IoVec","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a mut [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for &amp;'a mut IoVec","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.usize.html'>usize</a>&gt; for <a class='struct' href='mio/token/struct.Token.html' title='struct mio::token::Token'>Token</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='mio/token/struct.Token.html' title='struct mio::token::Token'>Token</a>&gt; for <a class='primitive' href='std/primitive.usize.html'>usize</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sync/mpsc/struct.SendError.html' title='struct std::sync::mpsc::SendError'>SendError</a>&lt;T&gt;&gt; for <a class='enum' href='mio/channel/enum.SendError.html' title='enum mio::channel::SendError'>SendError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='mio/channel/enum.SendError.html' title='enum mio::channel::SendError'>SendError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/sync/mpsc/enum.TrySendError.html' title='enum std::sync::mpsc::TrySendError'>TrySendError</a>&lt;T&gt;&gt; for <a class='enum' href='mio/channel/enum.TrySendError.html' title='enum mio::channel::TrySendError'>TrySendError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sync/mpsc/struct.SendError.html' title='struct std::sync::mpsc::SendError'>SendError</a>&lt;T&gt;&gt; for <a class='enum' href='mio/channel/enum.TrySendError.html' title='enum mio::channel::TrySendError'>TrySendError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='mio/channel/enum.TrySendError.html' title='enum mio::channel::TrySendError'>TrySendError</a>&lt;T&gt;","impl&lt;M&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='mio/channel/enum.TrySendError.html' title='enum mio::channel::TrySendError'>TrySendError</a>&lt;M&gt;&gt; for <a class='enum' href='mio/deprecated/notify/enum.NotifyError.html' title='enum mio::deprecated::notify::NotifyError'>NotifyError</a>&lt;M&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;UnixSocket&gt; for <a class='struct' href='mio/deprecated/unix/struct.UnixSocket.html' title='struct mio::deprecated::unix::UnixSocket'>UnixSocket</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;UnixSocket&gt; for <a class='struct' href='mio/deprecated/unix/struct.UnixStream.html' title='struct mio::deprecated::unix::UnixStream'>UnixStream</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;UnixSocket&gt; for <a class='struct' href='mio/deprecated/unix/struct.UnixListener.html' title='struct mio::deprecated::unix::UnixListener'>UnixListener</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='mio/sys/unix/io/struct.Io.html' title='struct mio::sys::unix::io::Io'>Io</a>&gt; for <a class='struct' href='mio/deprecated/unix/struct.PipeReader.html' title='struct mio::deprecated::unix::PipeReader'>PipeReader</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='mio/sys/unix/io/struct.Io.html' title='struct mio::sys::unix::io::Io'>Io</a>&gt; for <a class='struct' href='mio/deprecated/unix/struct.PipeWriter.html' title='struct mio::deprecated::unix::PipeWriter'>PipeWriter</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='ogg/enum.OggReadError.html' title='enum ogg::OggReadError'>OggReadError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;NullError&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='libloading/os/unix/struct.Library.html' title='struct libloading::os::unix::Library'>Library</a>&gt; for <a class='struct' href='libloading/struct.Library.html' title='struct libloading::Library'>Library</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='libloading/struct.Library.html' title='struct libloading::Library'>Library</a>&gt; for <a class='struct' href='libloading/os/unix/struct.Library.html' title='struct libloading::os::unix::Library'>Library</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='struct alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='struct alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;UnixError&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='enum' href='bincode/serde/enum.ErrorKind.html' title='enum bincode::serde::ErrorKind'>ErrorKind</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;UnixError&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='audio_video_metadata/enums/enum.AudioType.html' title='enum audio_video_metadata::enums::AudioType'>AudioType</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='audio_video_metadata/enums/enum.VideoType.html' title='enum audio_video_metadata::enums::VideoType'>VideoType</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='audio_video_metadata/types/struct.AudioMetadata.html' title='struct audio_video_metadata::types::AudioMetadata'>AudioMetadata</a>&gt; for <a class='enum' href='audio_video_metadata/enums/enum.Metadata.html' title='enum audio_video_metadata::enums::Metadata'>Metadata</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='audio_video_metadata/types/struct.VideoMetadata.html' title='struct audio_video_metadata::types::VideoMetadata'>VideoMetadata</a>&gt; for <a class='enum' href='audio_video_metadata/enums/enum.Metadata.html' title='enum audio_video_metadata::enums::Metadata'>Metadata</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='jpeg_decoder/error/enum.Error.html' title='enum jpeg_decoder::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sync/mpsc/struct.RecvError.html' title='struct std::sync::mpsc::RecvError'>RecvError</a>&gt; for <a class='enum' href='jpeg_decoder/error/enum.Error.html' title='enum jpeg_decoder::error::Error'>Error</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sync/mpsc/struct.SendError.html' title='struct std::sync::mpsc::SendError'>SendError</a>&lt;T&gt;&gt; for <a class='enum' href='jpeg_decoder/error/enum.Error.html' title='enum jpeg_decoder::error::Error'>Error</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/any/trait.Any.html' title='trait core::any::Any'>Any</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='openssl/ssl/error/enum.SslError.html' title='enum openssl::ssl::error::SslError'>SslError</a>&gt; for <a class='enum' href='openssl/ssl/error/enum.NonblockingSslError.html' title='enum openssl::ssl::error::NonblockingSslError'>NonblockingSslError</a>",];
implementors["lazy_static"] = ["impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='struct alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='struct alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='struct std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt;","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='struct std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/io/error/enum.ErrorKind.html' title='enum std::io::error::ErrorKind'>ErrorKind</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='primitive' href='std/primitive.u128.html'>u128</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u128.html'>u128</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV4.html' title='struct std::net::addr::SocketAddrV4'>SocketAddrV4</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV6.html' title='struct std::net::addr::SocketAddrV6'>SocketAddrV6</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl&lt;I&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>I, <a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a> <span class='where fmt-newline'>where I: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='struct std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='enum std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='trait core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>: <a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>ToOwned</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>::<a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>Owned</a> == <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;",];
implementors["libc"] = ["impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='libc/dox/imp/trait.Copy.html' title='trait libc::dox::imp::Copy'>Copy</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='struct alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='struct alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='struct std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt;","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='struct std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/io/error/enum.ErrorKind.html' title='enum std::io::error::ErrorKind'>ErrorKind</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='primitive' href='std/primitive.u128.html'>u128</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u128.html'>u128</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV4.html' title='struct std::net::addr::SocketAddrV4'>SocketAddrV4</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV6.html' title='struct std::net::addr::SocketAddrV6'>SocketAddrV6</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl&lt;I&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>I, <a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a> <span class='where fmt-newline'>where I: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='struct std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='enum std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='trait core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='libc/dox/imp/trait.Clone.html' title='trait libc::dox::imp::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>: <a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>ToOwned</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>::<a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>Owned</a> == <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='libc/dox/imp/trait.Clone.html' title='trait libc::dox::imp::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='libc/dox/imp/trait.Clone.html' title='trait libc::dox::imp::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;",];
implementors["libloading"] = ["impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='struct alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='struct alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='struct std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt;","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='struct std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/io/error/enum.ErrorKind.html' title='enum std::io::error::ErrorKind'>ErrorKind</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='primitive' href='std/primitive.u128.html'>u128</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u128.html'>u128</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV4.html' title='struct std::net::addr::SocketAddrV4'>SocketAddrV4</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV6.html' title='struct std::net::addr::SocketAddrV6'>SocketAddrV6</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl&lt;I&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>I, <a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a> <span class='where fmt-newline'>where I: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='struct std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='enum std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='trait core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>: <a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>ToOwned</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>::<a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>Owned</a> == <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='struct std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='libloading/util/struct.NullError.html' title='struct libloading::util::NullError'>NullError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.FromBytesWithNulError.html' title='struct std::ffi::c_str::FromBytesWithNulError'>FromBytesWithNulError</a>&gt; for <a class='struct' href='libloading/util/struct.NullError.html' title='struct libloading::util::NullError'>NullError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='libloading/util/struct.NullError.html' title='struct libloading::util::NullError'>NullError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='libloading/os/unix/struct.Library.html' title='struct libloading::os::unix::Library'>Library</a>&gt; for <a class='struct' href='libloading/struct.Library.html' title='struct libloading::Library'>Library</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='libloading/struct.Library.html' title='struct libloading::Library'>Library</a>&gt; for <a class='struct' href='libloading/os/unix/struct.Library.html' title='struct libloading::os::unix::Library'>Library</a>",];
implementors["mime_guess"] = ["impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='struct alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='struct alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='struct std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt;","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='struct std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/io/error/enum.ErrorKind.html' title='enum std::io::error::ErrorKind'>ErrorKind</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='primitive' href='std/primitive.u128.html'>u128</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u128.html'>u128</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV4.html' title='struct std::net::addr::SocketAddrV4'>SocketAddrV4</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV6.html' title='struct std::net::addr::SocketAddrV6'>SocketAddrV6</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl&lt;I&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>I, <a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a> <span class='where fmt-newline'>where I: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='struct std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='enum std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='trait core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>: <a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>ToOwned</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>::<a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>Owned</a> == <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;",];
implementors["mio"] = ["impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='struct alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='struct alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='struct std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='mio/io/struct.Error.html' title='struct mio::io::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt;","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='struct std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='mio/io/struct.Error.html' title='struct mio::io::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='mio/io/enum.ErrorKind.html' title='enum mio::io::ErrorKind'>ErrorKind</a>&gt; for <a class='struct' href='mio/io/struct.Error.html' title='struct mio::io::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='primitive' href='std/primitive.u128.html'>u128</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u128.html'>u128</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV4.html' title='struct std::net::addr::SocketAddrV4'>SocketAddrV4</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV6.html' title='struct std::net::addr::SocketAddrV6'>SocketAddrV6</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl&lt;I&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>I, <a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a> <span class='where fmt-newline'>where I: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='struct std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='enum std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='trait core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>: <a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>ToOwned</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>::<a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>Owned</a> == <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for &amp;'a <a class='struct' href='mio/struct.IoVec.html' title='struct mio::IoVec'>IoVec</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a mut [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for &amp;'a mut <a class='struct' href='mio/struct.IoVec.html' title='struct mio::IoVec'>IoVec</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='mio/sys/unix/io/struct.Io.html' title='struct mio::sys::unix::io::Io'>Io</a>&gt; for <a class='struct' href='mio/sys/unix/uds/struct.UnixSocket.html' title='struct mio::sys::unix::uds::UnixSocket'>UnixSocket</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for &amp;'a <a class='struct' href='mio/sys/unix/iovec/struct.IoVec.html' title='struct mio::sys::unix::iovec::IoVec'>IoVec</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a mut [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for &amp;'a mut <a class='struct' href='mio/sys/unix/iovec/struct.IoVec.html' title='struct mio::sys::unix::iovec::IoVec'>IoVec</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.usize.html'>usize</a>&gt; for <a class='struct' href='mio/struct.Token.html' title='struct mio::Token'>Token</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='mio/struct.Token.html' title='struct mio::Token'>Token</a>&gt; for <a class='primitive' href='std/primitive.usize.html'>usize</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sync/mpsc/struct.SendError.html' title='struct std::sync::mpsc::SendError'>SendError</a>&lt;T&gt;&gt; for <a class='enum' href='mio/channel/enum.SendError.html' title='enum mio::channel::SendError'>SendError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='mio/io/struct.Error.html' title='struct mio::io::Error'>Error</a>&gt; for <a class='enum' href='mio/channel/enum.SendError.html' title='enum mio::channel::SendError'>SendError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/sync/mpsc/enum.TrySendError.html' title='enum std::sync::mpsc::TrySendError'>TrySendError</a>&lt;T&gt;&gt; for <a class='enum' href='mio/channel/enum.TrySendError.html' title='enum mio::channel::TrySendError'>TrySendError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sync/mpsc/struct.SendError.html' title='struct std::sync::mpsc::SendError'>SendError</a>&lt;T&gt;&gt; for <a class='enum' href='mio/channel/enum.TrySendError.html' title='enum mio::channel::TrySendError'>TrySendError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='mio/io/struct.Error.html' title='struct mio::io::Error'>Error</a>&gt; for <a class='enum' href='mio/channel/enum.TrySendError.html' title='enum mio::channel::TrySendError'>TrySendError</a>&lt;T&gt;","impl&lt;M&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='mio/channel/enum.TrySendError.html' title='enum mio::channel::TrySendError'>TrySendError</a>&lt;M&gt;&gt; for <a class='enum' href='mio/deprecated/enum.NotifyError.html' title='enum mio::deprecated::NotifyError'>NotifyError</a>&lt;M&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='mio/sys/unix/uds/struct.UnixSocket.html' title='struct mio::sys::unix::uds::UnixSocket'>UnixSocket</a>&gt; for <a class='struct' href='mio/deprecated/unix/struct.UnixSocket.html' title='struct mio::deprecated::unix::UnixSocket'>UnixSocket</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='mio/sys/unix/uds/struct.UnixSocket.html' title='struct mio::sys::unix::uds::UnixSocket'>UnixSocket</a>&gt; for <a class='struct' href='mio/deprecated/unix/struct.UnixStream.html' title='struct mio::deprecated::unix::UnixStream'>UnixStream</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='mio/sys/unix/uds/struct.UnixSocket.html' title='struct mio::sys::unix::uds::UnixSocket'>UnixSocket</a>&gt; for <a class='struct' href='mio/deprecated/unix/struct.UnixListener.html' title='struct mio::deprecated::unix::UnixListener'>UnixListener</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='mio/sys/unix/io/struct.Io.html' title='struct mio::sys::unix::io::Io'>Io</a>&gt; for <a class='struct' href='mio/deprecated/unix/struct.PipeReader.html' title='struct mio::deprecated::unix::PipeReader'>PipeReader</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='mio/sys/unix/io/struct.Io.html' title='struct mio::sys::unix::io::Io'>Io</a>&gt; for <a class='struct' href='mio/deprecated/unix/struct.PipeWriter.html' title='struct mio::deprecated::unix::PipeWriter'>PipeWriter</a>",];
implementors["mp3_metadata"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt; for <a class='enum' href='mp3_metadata/enum.Version.html' title='enum mp3_metadata::Version'>Version</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt; for <a class='enum' href='mp3_metadata/enum.Layer.html' title='enum mp3_metadata::Layer'>Layer</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt; for <a class='enum' href='mp3_metadata/enum.CRC.html' title='enum mp3_metadata::CRC'>CRC</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt; for <a class='enum' href='mp3_metadata/enum.ChannelType.html' title='enum mp3_metadata::ChannelType'>ChannelType</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt; for <a class='enum' href='mp3_metadata/enum.Copyright.html' title='enum mp3_metadata::Copyright'>Copyright</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt; for <a class='enum' href='mp3_metadata/enum.Status.html' title='enum mp3_metadata::Status'>Status</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt; for <a class='enum' href='mp3_metadata/enum.Emphasis.html' title='enum mp3_metadata::Emphasis'>Emphasis</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='mp3_metadata/enum.Genre.html' title='enum mp3_metadata::Genre'>Genre</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt; for <a class='enum' href='mp3_metadata/enum.Genre.html' title='enum mp3_metadata::Genre'>Genre</a>",];
implementors["mp4parse"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='mp4parse/boxes/struct.FourCC.html' title='struct mp4parse::boxes::FourCC'>FourCC</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='mp4parse/boxes/enum.BoxType.html' title='enum mp4parse::boxes::BoxType'>BoxType</a>&gt; for <a class='struct' href='mp4parse/boxes/struct.FourCC.html' title='struct mp4parse::boxes::FourCC'>FourCC</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='mp4parse/boxes/struct.FourCC.html' title='struct mp4parse::boxes::FourCC'>FourCC</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='enum' href='mp4parse/boxes/enum.BoxType.html' title='enum mp4parse::boxes::BoxType'>BoxType</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='bitreader/enum.BitReaderError.html' title='enum bitreader::BitReaderError'>BitReaderError</a>&gt; for <a class='enum' href='mp4parse/enum.Error.html' title='enum mp4parse::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='mp4parse/enum.Error.html' title='enum mp4parse::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.FromUtf8Error.html' title='struct collections::string::FromUtf8Error'>FromUtf8Error</a>&gt; for <a class='enum' href='mp4parse/enum.Error.html' title='enum mp4parse::Error'>Error</a>",];
implementors["net"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='jpeg_decoder/error/enum.Error.html' title='enum jpeg_decoder::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sync/mpsc/struct.RecvError.html' title='struct std::sync::mpsc::RecvError'>RecvError</a>&gt; for <a class='enum' href='jpeg_decoder/error/enum.Error.html' title='enum jpeg_decoder::error::Error'>Error</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sync/mpsc/struct.SendError.html' title='struct std::sync::mpsc::SendError'>SendError</a>&lt;T&gt;&gt; for <a class='enum' href='jpeg_decoder/error/enum.Error.html' title='enum jpeg_decoder::error::Error'>Error</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/any/trait.Any.html' title='trait core::any::Any'>Any</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='enum' href='webrender_traits/enum.PropertyBinding.html' title='enum webrender_traits::PropertyBinding'>PropertyBinding</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='webrender_traits/struct.PropertyBindingKey.html' title='struct webrender_traits::PropertyBindingKey'>PropertyBindingKey</a>&lt;T&gt;&gt; for <a class='enum' href='webrender_traits/enum.PropertyBinding.html' title='enum webrender_traits::PropertyBinding'>PropertyBinding</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='webrender_traits/struct.ColorF.html' title='struct webrender_traits::ColorF'>ColorF</a>&gt; for <a class='struct' href='webrender_traits/struct.ColorU.html' title='struct webrender_traits::ColorU'>ColorU</a>","impl&lt;A&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;A&gt; for <a class='struct' href='arrayvec/struct.ArrayVec.html' title='struct arrayvec::ArrayVec'>ArrayVec</a>&lt;A&gt; <span class='where fmt-newline'>where A: <a class='trait' href='arrayvec/array/trait.Array.html' title='trait arrayvec::array::Array'>Array</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='enum' href='hyper/header/common/referrer_policy/enum.ReferrerPolicy.html' title='enum hyper::header::common::referrer_policy::ReferrerPolicy'>ReferrerPolicy</a>&gt; for <a class='enum' href='net_traits/enum.ReferrerPolicy.html' title='enum net_traits::ReferrerPolicy'>ReferrerPolicy</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='enum' href='bincode/serde/enum.ErrorKind.html' title='enum bincode::serde::ErrorKind'>ErrorKind</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='websocket/result/enum.WebSocketError.html' title='enum websocket::result::WebSocketError'>WebSocketError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>&gt; for <a class='enum' href='websocket/result/enum.WebSocketError.html' title='enum websocket::result::WebSocketError'>WebSocketError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='url/parser/enum.ParseError.html' title='enum url::parser::ParseError'>ParseError</a>&gt; for <a class='enum' href='websocket/result/enum.WebSocketError.html' title='enum websocket::result::WebSocketError'>WebSocketError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='openssl/ssl/error/enum.SslError.html' title='enum openssl::ssl::error::SslError'>SslError</a>&gt; for <a class='enum' href='websocket/result/enum.WebSocketError.html' title='enum websocket::result::WebSocketError'>WebSocketError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='core/str/struct.Utf8Error.html' title='struct core::str::Utf8Error'>Utf8Error</a>&gt; for <a class='enum' href='websocket/result/enum.WebSocketError.html' title='enum websocket::result::WebSocketError'>WebSocketError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='websocket/result/enum.WSUrlErrorKind.html' title='enum websocket::result::WSUrlErrorKind'>WSUrlErrorKind</a>&gt; for <a class='enum' href='websocket/result/enum.WebSocketError.html' title='enum websocket::result::WebSocketError'>WebSocketError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='idna/uts46/struct.Errors.html' title='struct idna::uts46::Errors'>Errors</a>&gt; for <a class='enum' href='url/parser/enum.ParseError.html' title='enum url::parser::ParseError'>ParseError</a>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='url/percent_encoding/struct.PercentEncode.html' title='struct url::percent_encoding::PercentEncode'>PercentEncode</a>&lt;'a, E&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt; <span class='where fmt-newline'>where E: <a class='trait' href='url/percent_encoding/trait.EncodeSet.html' title='trait url::percent_encoding::EncodeSet'>EncodeSet</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='url/percent_encoding/struct.PercentDecode.html' title='struct url::percent_encoding::PercentDecode'>PercentDecode</a>&lt;'a&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='url/struct.Url.html' title='struct url::Url'>Url</a>&gt; for <a class='struct' href='servo_url/struct.ServoUrl.html' title='struct servo_url::ServoUrl'>ServoUrl</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='rustc_serialize/json/enum.ParserError.html' title='enum rustc_serialize::json::ParserError'>ParserError</a>&gt; for <a class='enum' href='rustc_serialize/json/enum.DecoderError.html' title='enum rustc_serialize::json::DecoderError'>DecoderError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='rustc_serialize/json/enum.ParserError.html' title='enum rustc_serialize::json::ParserError'>ParserError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='core/fmt/struct.Error.html' title='struct core::fmt::Error'>Error</a>&gt; for <a class='enum' href='rustc_serialize/json/enum.EncoderError.html' title='enum rustc_serialize::json::EncoderError'>EncoderError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='immeta/types/enum.Error.html' title='enum immeta::types::Error'>Error</a>","impl&lt;T, U&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>T, U<a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='struct' href='immeta/types/struct.Dimensions.html' title='struct immeta::types::Dimensions'>Dimensions</a> <span class='where fmt-newline'>where T: <a class='trait' href='num_traits/cast/trait.ToPrimitive.html' title='trait num_traits::cast::ToPrimitive'>ToPrimitive</a>, U: <a class='trait' href='num_traits/cast/trait.ToPrimitive.html' title='trait num_traits::cast::ToPrimitive'>ToPrimitive</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;ErrorImpl&gt; for <a class='struct' href='serde_json/error/struct.Error.html' title='struct serde_json::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='struct' href='serde_json/error/struct.Error.html' title='struct serde_json::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='serde/de/value/struct.Error.html' title='struct serde::de::value::Error'>Error</a>&gt; for <a class='struct' href='serde_json/error/struct.Error.html' title='struct serde_json::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.f32.html'>f32</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.f64.html'>f64</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.bool.html'>bool</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='serde_json/map/struct.Map.html' title='struct serde_json::map::Map'>Map</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>, <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>&gt;&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>&gt;</span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a> + <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>&gt;</span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.i8.html'>i8</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.i16.html'>i16</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.i32.html'>i32</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.i64.html'>i64</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.isize.html'>isize</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u16.html'>u16</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u64.html'>u64</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.usize.html'>usize</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.i8.html'>i8</a>&gt; for <a class='struct' href='serde_json/number/struct.Number.html' title='struct serde_json::number::Number'>Number</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.i16.html'>i16</a>&gt; for <a class='struct' href='serde_json/number/struct.Number.html' title='struct serde_json::number::Number'>Number</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.i32.html'>i32</a>&gt; for <a class='struct' href='serde_json/number/struct.Number.html' title='struct serde_json::number::Number'>Number</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.i64.html'>i64</a>&gt; for <a class='struct' href='serde_json/number/struct.Number.html' title='struct serde_json::number::Number'>Number</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.isize.html'>isize</a>&gt; for <a class='struct' href='serde_json/number/struct.Number.html' title='struct serde_json::number::Number'>Number</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt; for <a class='struct' href='serde_json/number/struct.Number.html' title='struct serde_json::number::Number'>Number</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u16.html'>u16</a>&gt; for <a class='struct' href='serde_json/number/struct.Number.html' title='struct serde_json::number::Number'>Number</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='serde_json/number/struct.Number.html' title='struct serde_json::number::Number'>Number</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u64.html'>u64</a>&gt; for <a class='struct' href='serde_json/number/struct.Number.html' title='struct serde_json::number::Number'>Number</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.usize.html'>usize</a>&gt; for <a class='struct' href='serde_json/number/struct.Number.html' title='struct serde_json::number::Number'>Number</a>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='struct std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt;","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='struct std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/io/error/enum.ErrorKind.html' title='enum std::io::error::ErrorKind'>ErrorKind</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='primitive' href='std/primitive.u128.html'>u128</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u128.html'>u128</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV4.html' title='struct std::net::addr::SocketAddrV4'>SocketAddrV4</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV6.html' title='struct std::net::addr::SocketAddrV6'>SocketAddrV6</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl&lt;I&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>I, <a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a> <span class='where fmt-newline'>where I: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='struct std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='enum std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='openssl/ssl/error/enum.SslError.html' title='enum openssl::ssl::error::SslError'>SslError</a>&gt; for <a class='enum' href='openssl/ssl/error/enum.NonblockingSslError.html' title='enum openssl::ssl::error::NonblockingSslError'>NonblockingSslError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;UnixError&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='enum' href='bincode/serde/enum.ErrorKind.html' title='enum bincode::serde::ErrorKind'>ErrorKind</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;UnixError&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;'a, R&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a mut R&gt; for <a class='enum' href='hyper/client/enum.Body.html' title='enum hyper::client::Body'>Body</a>&lt;'a&gt; <span class='where fmt-newline'>where R: <a class='trait' href='std/io/trait.Read.html' title='trait std::io::Read'>Read</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='url/parser/enum.ParseError.html' title='enum url::parser::ParseError'>ParseError</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='openssl/ssl/error/enum.SslError.html' title='enum openssl::ssl::error::SslError'>SslError</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='core/str/struct.Utf8Error.html' title='struct core::str::Utf8Error'>Utf8Error</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.FromUtf8Error.html' title='struct collections::string::FromUtf8Error'>FromUtf8Error</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='httparse/enum.Error.html' title='enum httparse::Error'>Error</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='solicit/http/enum.HttpError.html' title='enum solicit::http::HttpError'>HttpError</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='hyper/http/h1/struct.EndError.html' title='struct hyper::http::h1::EndError'>EndError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a> <span class='where fmt-newline'>where W: <a class='trait' href='std/io/trait.Write.html' title='trait std::io::Write'>Write</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='hyper/net/trait.NetworkStream.html' title='trait hyper::net::NetworkStream'>NetworkStream</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='hyper/net/trait.NetworkStream.html' title='trait hyper::net::NetworkStream'>NetworkStream</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/tcp/struct.TcpListener.html' title='struct std::net::tcp::TcpListener'>TcpListener</a>&gt; for <a class='struct' href='hyper/net/struct.HttpListener.html' title='struct hyper::net::HttpListener'>HttpListener</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='png/decoder/stream/enum.DecodingError.html' title='enum png::decoder::stream::DecodingError'>DecodingError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='png/decoder/stream/enum.DecodingError.html' title='enum png::decoder::stream::DecodingError'>DecodingError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='png/decoder/stream/enum.DecodingError.html' title='enum png::decoder::stream::DecodingError'>DecodingError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='png/encoder/enum.EncodingError.html' title='enum png::encoder::EncodingError'>EncodingError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='png/encoder/enum.EncodingError.html' title='enum png::encoder::EncodingError'>EncodingError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='odds/slice/iter/struct.SliceCopyIter.html' title='struct odds::slice::iter::SliceCopyIter'>SliceCopyIter</a>&lt;'a, T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a></span>","impl&lt;'a, T, Slice&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a Slice&gt; for &amp;'a <a class='struct' href='odds/slice/struct.RevSlice.html' title='struct odds::slice::RevSlice'>RevSlice</a>&lt;T&gt; <span class='where fmt-newline'>where Slice: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl&lt;'a, T, Slice&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a mut Slice&gt; for &amp;'a mut <a class='struct' href='odds/slice/struct.RevSlice.html' title='struct odds::slice::RevSlice'>RevSlice</a>&lt;T&gt; <span class='where fmt-newline'>where Slice: <a class='trait' href='core/convert/trait.AsMut.html' title='trait core::convert::AsMut'>AsMut</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='odds/slice/struct.RevSlice.html' title='struct odds::slice::RevSlice'>RevSlice</a>&lt;T&gt;&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for <a class='struct' href='serde/bytes/struct.Bytes.html' title='struct serde::bytes::Bytes'>Bytes</a>&lt;'a&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;&gt; for <a class='struct' href='serde/bytes/struct.Bytes.html' title='struct serde::bytes::Bytes'>Bytes</a>&lt;'a&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;&gt; for <a class='struct' href='serde/bytes/bytebuf/struct.ByteBuf.html' title='struct serde::bytes::bytebuf::ByteBuf'>ByteBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XAnyEvent.html' title='struct x11::xlib::XAnyEvent'>XAnyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XAnyEvent.html' title='struct x11::xlib::XAnyEvent'>XAnyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XAnyEvent.html' title='struct x11::xlib::XAnyEvent'>XAnyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XAnyEvent.html' title='struct x11::xlib::XAnyEvent'>XAnyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XButtonEvent.html' title='struct x11::xlib::XButtonEvent'>XButtonEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XButtonEvent.html' title='struct x11::xlib::XButtonEvent'>XButtonEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XButtonEvent.html' title='struct x11::xlib::XButtonEvent'>XButtonEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XButtonEvent.html' title='struct x11::xlib::XButtonEvent'>XButtonEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XCirculateEvent.html' title='struct x11::xlib::XCirculateEvent'>XCirculateEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XCirculateEvent.html' title='struct x11::xlib::XCirculateEvent'>XCirculateEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCirculateEvent.html' title='struct x11::xlib::XCirculateEvent'>XCirculateEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCirculateEvent.html' title='struct x11::xlib::XCirculateEvent'>XCirculateEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XCirculateRequestEvent.html' title='struct x11::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XCirculateRequestEvent.html' title='struct x11::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCirculateRequestEvent.html' title='struct x11::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCirculateRequestEvent.html' title='struct x11::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XClientMessageEvent.html' title='struct x11::xlib::XClientMessageEvent'>XClientMessageEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XClientMessageEvent.html' title='struct x11::xlib::XClientMessageEvent'>XClientMessageEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XClientMessageEvent.html' title='struct x11::xlib::XClientMessageEvent'>XClientMessageEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XClientMessageEvent.html' title='struct x11::xlib::XClientMessageEvent'>XClientMessageEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XColormapEvent.html' title='struct x11::xlib::XColormapEvent'>XColormapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XColormapEvent.html' title='struct x11::xlib::XColormapEvent'>XColormapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XColormapEvent.html' title='struct x11::xlib::XColormapEvent'>XColormapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XColormapEvent.html' title='struct x11::xlib::XColormapEvent'>XColormapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XConfigureEvent.html' title='struct x11::xlib::XConfigureEvent'>XConfigureEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XConfigureEvent.html' title='struct x11::xlib::XConfigureEvent'>XConfigureEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XConfigureEvent.html' title='struct x11::xlib::XConfigureEvent'>XConfigureEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XConfigureEvent.html' title='struct x11::xlib::XConfigureEvent'>XConfigureEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XConfigureRequestEvent.html' title='struct x11::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XConfigureRequestEvent.html' title='struct x11::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XConfigureRequestEvent.html' title='struct x11::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XConfigureRequestEvent.html' title='struct x11::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XCreateWindowEvent.html' title='struct x11::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XCreateWindowEvent.html' title='struct x11::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCreateWindowEvent.html' title='struct x11::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCreateWindowEvent.html' title='struct x11::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XCrossingEvent.html' title='struct x11::xlib::XCrossingEvent'>XCrossingEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XCrossingEvent.html' title='struct x11::xlib::XCrossingEvent'>XCrossingEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCrossingEvent.html' title='struct x11::xlib::XCrossingEvent'>XCrossingEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCrossingEvent.html' title='struct x11::xlib::XCrossingEvent'>XCrossingEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XDestroyWindowEvent.html' title='struct x11::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XDestroyWindowEvent.html' title='struct x11::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XDestroyWindowEvent.html' title='struct x11::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XDestroyWindowEvent.html' title='struct x11::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XErrorEvent.html' title='struct x11::xlib::XErrorEvent'>XErrorEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XErrorEvent.html' title='struct x11::xlib::XErrorEvent'>XErrorEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XErrorEvent.html' title='struct x11::xlib::XErrorEvent'>XErrorEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XErrorEvent.html' title='struct x11::xlib::XErrorEvent'>XErrorEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XExposeEvent.html' title='struct x11::xlib::XExposeEvent'>XExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XExposeEvent.html' title='struct x11::xlib::XExposeEvent'>XExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XExposeEvent.html' title='struct x11::xlib::XExposeEvent'>XExposeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XExposeEvent.html' title='struct x11::xlib::XExposeEvent'>XExposeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XFocusChangeEvent.html' title='struct x11::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XFocusChangeEvent.html' title='struct x11::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XFocusChangeEvent.html' title='struct x11::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XFocusChangeEvent.html' title='struct x11::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XGenericEventCookie.html' title='struct x11::xlib::XGenericEventCookie'>XGenericEventCookie</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XGenericEventCookie.html' title='struct x11::xlib::XGenericEventCookie'>XGenericEventCookie</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGenericEventCookie.html' title='struct x11::xlib::XGenericEventCookie'>XGenericEventCookie</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGenericEventCookie.html' title='struct x11::xlib::XGenericEventCookie'>XGenericEventCookie</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XGraphicsExposeEvent.html' title='struct x11::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XGraphicsExposeEvent.html' title='struct x11::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGraphicsExposeEvent.html' title='struct x11::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGraphicsExposeEvent.html' title='struct x11::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XGravityEvent.html' title='struct x11::xlib::XGravityEvent'>XGravityEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XGravityEvent.html' title='struct x11::xlib::XGravityEvent'>XGravityEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGravityEvent.html' title='struct x11::xlib::XGravityEvent'>XGravityEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGravityEvent.html' title='struct x11::xlib::XGravityEvent'>XGravityEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XKeyEvent.html' title='struct x11::xlib::XKeyEvent'>XKeyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XKeyEvent.html' title='struct x11::xlib::XKeyEvent'>XKeyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XKeyEvent.html' title='struct x11::xlib::XKeyEvent'>XKeyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XKeyEvent.html' title='struct x11::xlib::XKeyEvent'>XKeyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XKeymapEvent.html' title='struct x11::xlib::XKeymapEvent'>XKeymapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XKeymapEvent.html' title='struct x11::xlib::XKeymapEvent'>XKeymapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XKeymapEvent.html' title='struct x11::xlib::XKeymapEvent'>XKeymapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XKeymapEvent.html' title='struct x11::xlib::XKeymapEvent'>XKeymapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XMapEvent.html' title='struct x11::xlib::XMapEvent'>XMapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XMapEvent.html' title='struct x11::xlib::XMapEvent'>XMapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMapEvent.html' title='struct x11::xlib::XMapEvent'>XMapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMapEvent.html' title='struct x11::xlib::XMapEvent'>XMapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XMappingEvent.html' title='struct x11::xlib::XMappingEvent'>XMappingEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XMappingEvent.html' title='struct x11::xlib::XMappingEvent'>XMappingEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMappingEvent.html' title='struct x11::xlib::XMappingEvent'>XMappingEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMappingEvent.html' title='struct x11::xlib::XMappingEvent'>XMappingEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XMapRequestEvent.html' title='struct x11::xlib::XMapRequestEvent'>XMapRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XMapRequestEvent.html' title='struct x11::xlib::XMapRequestEvent'>XMapRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMapRequestEvent.html' title='struct x11::xlib::XMapRequestEvent'>XMapRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMapRequestEvent.html' title='struct x11::xlib::XMapRequestEvent'>XMapRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XMotionEvent.html' title='struct x11::xlib::XMotionEvent'>XMotionEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XMotionEvent.html' title='struct x11::xlib::XMotionEvent'>XMotionEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMotionEvent.html' title='struct x11::xlib::XMotionEvent'>XMotionEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMotionEvent.html' title='struct x11::xlib::XMotionEvent'>XMotionEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XNoExposeEvent.html' title='struct x11::xlib::XNoExposeEvent'>XNoExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XNoExposeEvent.html' title='struct x11::xlib::XNoExposeEvent'>XNoExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XNoExposeEvent.html' title='struct x11::xlib::XNoExposeEvent'>XNoExposeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XNoExposeEvent.html' title='struct x11::xlib::XNoExposeEvent'>XNoExposeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XPropertyEvent.html' title='struct x11::xlib::XPropertyEvent'>XPropertyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XPropertyEvent.html' title='struct x11::xlib::XPropertyEvent'>XPropertyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XPropertyEvent.html' title='struct x11::xlib::XPropertyEvent'>XPropertyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XPropertyEvent.html' title='struct x11::xlib::XPropertyEvent'>XPropertyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XReparentEvent.html' title='struct x11::xlib::XReparentEvent'>XReparentEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XReparentEvent.html' title='struct x11::xlib::XReparentEvent'>XReparentEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XReparentEvent.html' title='struct x11::xlib::XReparentEvent'>XReparentEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XReparentEvent.html' title='struct x11::xlib::XReparentEvent'>XReparentEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XResizeRequestEvent.html' title='struct x11::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XResizeRequestEvent.html' title='struct x11::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XResizeRequestEvent.html' title='struct x11::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XResizeRequestEvent.html' title='struct x11::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XSelectionClearEvent.html' title='struct x11::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XSelectionClearEvent.html' title='struct x11::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionClearEvent.html' title='struct x11::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionClearEvent.html' title='struct x11::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XSelectionEvent.html' title='struct x11::xlib::XSelectionEvent'>XSelectionEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XSelectionEvent.html' title='struct x11::xlib::XSelectionEvent'>XSelectionEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionEvent.html' title='struct x11::xlib::XSelectionEvent'>XSelectionEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionEvent.html' title='struct x11::xlib::XSelectionEvent'>XSelectionEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XSelectionRequestEvent.html' title='struct x11::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XSelectionRequestEvent.html' title='struct x11::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionRequestEvent.html' title='struct x11::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionRequestEvent.html' title='struct x11::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XUnmapEvent.html' title='struct x11::xlib::XUnmapEvent'>XUnmapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XUnmapEvent.html' title='struct x11::xlib::XUnmapEvent'>XUnmapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XUnmapEvent.html' title='struct x11::xlib::XUnmapEvent'>XUnmapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XUnmapEvent.html' title='struct x11::xlib::XUnmapEvent'>XUnmapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XVisibilityEvent.html' title='struct x11::xlib::XVisibilityEvent'>XVisibilityEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XVisibilityEvent.html' title='struct x11::xlib::XVisibilityEvent'>XVisibilityEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XVisibilityEvent.html' title='struct x11::xlib::XVisibilityEvent'>XVisibilityEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XVisibilityEvent.html' title='struct x11::xlib::XVisibilityEvent'>XVisibilityEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.i8.html'>i8</a><a class='primitive' href='std/primitive.array.html'>; 20]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 20]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.i16.html'>i16</a><a class='primitive' href='std/primitive.array.html'>; 10]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 10]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.i64.html'>i64</a><a class='primitive' href='std/primitive.array.html'>; 5]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u64.html'>u64</a><a class='primitive' href='std/primitive.array.html'>; 5]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xf86vmode/struct.XF86VidModeNotifyEvent.html' title='struct x11::xf86vmode::XF86VidModeNotifyEvent'>XF86VidModeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xf86vmode/struct.XF86VidModeNotifyEvent.html' title='struct x11::xf86vmode::XF86VidModeNotifyEvent'>XF86VidModeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xf86vmode/struct.XF86VidModeNotifyEvent.html' title='struct x11::xf86vmode::XF86VidModeNotifyEvent'>XF86VidModeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xf86vmode/struct.XF86VidModeNotifyEvent.html' title='struct x11::xf86vmode::XF86VidModeNotifyEvent'>XF86VidModeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRScreenChangeNotifyEvent.html' title='struct x11::xrandr::XRRScreenChangeNotifyEvent'>XRRScreenChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRScreenChangeNotifyEvent.html' title='struct x11::xrandr::XRRScreenChangeNotifyEvent'>XRRScreenChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRScreenChangeNotifyEvent.html' title='struct x11::xrandr::XRRScreenChangeNotifyEvent'>XRRScreenChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRScreenChangeNotifyEvent.html' title='struct x11::xrandr::XRRScreenChangeNotifyEvent'>XRRScreenChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRNotifyEvent.html' title='struct x11::xrandr::XRRNotifyEvent'>XRRNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRNotifyEvent.html' title='struct x11::xrandr::XRRNotifyEvent'>XRRNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRNotifyEvent.html' title='struct x11::xrandr::XRRNotifyEvent'>XRRNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRNotifyEvent.html' title='struct x11::xrandr::XRRNotifyEvent'>XRRNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRROutputChangeNotifyEvent.html' title='struct x11::xrandr::XRROutputChangeNotifyEvent'>XRROutputChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRROutputChangeNotifyEvent.html' title='struct x11::xrandr::XRROutputChangeNotifyEvent'>XRROutputChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRROutputChangeNotifyEvent.html' title='struct x11::xrandr::XRROutputChangeNotifyEvent'>XRROutputChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRROutputChangeNotifyEvent.html' title='struct x11::xrandr::XRROutputChangeNotifyEvent'>XRROutputChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRCrtcChangeNotifyEvent.html' title='struct x11::xrandr::XRRCrtcChangeNotifyEvent'>XRRCrtcChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRCrtcChangeNotifyEvent.html' title='struct x11::xrandr::XRRCrtcChangeNotifyEvent'>XRRCrtcChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRCrtcChangeNotifyEvent.html' title='struct x11::xrandr::XRRCrtcChangeNotifyEvent'>XRRCrtcChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRCrtcChangeNotifyEvent.html' title='struct x11::xrandr::XRRCrtcChangeNotifyEvent'>XRRCrtcChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRROutputPropertyNotifyEvent.html' title='struct x11::xrandr::XRROutputPropertyNotifyEvent'>XRROutputPropertyNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRROutputPropertyNotifyEvent.html' title='struct x11::xrandr::XRROutputPropertyNotifyEvent'>XRROutputPropertyNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRROutputPropertyNotifyEvent.html' title='struct x11::xrandr::XRROutputPropertyNotifyEvent'>XRROutputPropertyNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRROutputPropertyNotifyEvent.html' title='struct x11::xrandr::XRROutputPropertyNotifyEvent'>XRROutputPropertyNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRProviderChangeNotifyEvent.html' title='struct x11::xrandr::XRRProviderChangeNotifyEvent'>XRRProviderChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRProviderChangeNotifyEvent.html' title='struct x11::xrandr::XRRProviderChangeNotifyEvent'>XRRProviderChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRProviderChangeNotifyEvent.html' title='struct x11::xrandr::XRRProviderChangeNotifyEvent'>XRRProviderChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRProviderChangeNotifyEvent.html' title='struct x11::xrandr::XRRProviderChangeNotifyEvent'>XRRProviderChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRProviderPropertyNotifyEvent.html' title='struct x11::xrandr::XRRProviderPropertyNotifyEvent'>XRRProviderPropertyNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRProviderPropertyNotifyEvent.html' title='struct x11::xrandr::XRRProviderPropertyNotifyEvent'>XRRProviderPropertyNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRProviderPropertyNotifyEvent.html' title='struct x11::xrandr::XRRProviderPropertyNotifyEvent'>XRRProviderPropertyNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRProviderPropertyNotifyEvent.html' title='struct x11::xrandr::XRRProviderPropertyNotifyEvent'>XRRProviderPropertyNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRResourceChangeNotifyEvent.html' title='struct x11::xrandr::XRRResourceChangeNotifyEvent'>XRRResourceChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRResourceChangeNotifyEvent.html' title='struct x11::xrandr::XRRResourceChangeNotifyEvent'>XRRResourceChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRResourceChangeNotifyEvent.html' title='struct x11::xrandr::XRRResourceChangeNotifyEvent'>XRRResourceChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRResourceChangeNotifyEvent.html' title='struct x11::xrandr::XRRResourceChangeNotifyEvent'>XRRResourceChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xss/struct.XScreenSaverNotifyEvent.html' title='struct x11::xss::XScreenSaverNotifyEvent'>XScreenSaverNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xss/struct.XScreenSaverNotifyEvent.html' title='struct x11::xss::XScreenSaverNotifyEvent'>XScreenSaverNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xss/struct.XScreenSaverNotifyEvent.html' title='struct x11::xss::XScreenSaverNotifyEvent'>XScreenSaverNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xss/struct.XScreenSaverNotifyEvent.html' title='struct x11::xss::XScreenSaverNotifyEvent'>XScreenSaverNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='regex_syntax/struct.Error.html' title='struct regex_syntax::Error'>Error</a>&gt; for <a class='enum' href='regex/error/enum.Error.html' title='enum regex::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;Exec&gt; for <a class='struct' href='regex/re_bytes/struct.Regex.html' title='struct regex::re_bytes::Regex'>Regex</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;Exec&gt; for <a class='struct' href='regex/re_unicode/struct.Regex.html' title='struct regex::re_unicode::Regex'>Regex</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;Exec&gt; for <a class='struct' href='regex/re_set/unicode/struct.RegexSet.html' title='struct regex::re_set::unicode::RegexSet'>RegexSet</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;Exec&gt; for <a class='struct' href='regex/re_set/bytes/struct.RegexSet.html' title='struct regex::re_set::bytes::RegexSet'>RegexSet</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='trait core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>: <a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>ToOwned</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>::<a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>Owned</a> == <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;&gt; for <a class='struct' href='solicit/http/frame/struct.RawFrame.html' title='struct solicit::http::frame::RawFrame'>RawFrame</a>","impl&lt;E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='enum' href='solicit/http/session/enum.StreamDataError.html' title='enum solicit::http::session::StreamDataError'>StreamDataError</a> <span class='where fmt-newline'>where E: <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a> + 'static</span>","impl&lt;E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='enum' href='solicit/http/enum.HttpError.html' title='enum solicit::http::HttpError'>HttpError</a> <span class='where fmt-newline'>where E: <a class='trait' href='solicit/http/client/trait.HttpConnectError.html' title='trait solicit::http::client::HttpConnectError'>HttpConnectError</a> + 'static</span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='struct' href='solicit/http/client/struct.CleartextConnectError.html' title='struct solicit::http::client::CleartextConnectError'>CleartextConnectError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='solicit/http/enum.HttpError.html' title='enum solicit::http::HttpError'>HttpError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='gif/reader/decoder/enum.DecodingError.html' title='enum gif::reader::decoder::DecodingError'>DecodingError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a><a class='enum' href='png/common/enum.ColorType.html' title='enum png::common::ColorType'>ColorType</a>, <a class='enum' href='png/common/enum.BitDepth.html' title='enum png::common::BitDepth'>BitDepth</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='image/color/enum.ColorType.html' title='enum image::color::ColorType'>ColorType</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='image/color/enum.ColorType.html' title='enum image::color::ColorType'>ColorType</a>&gt; for <a class='primitive' href='std/primitive.tuple.html'>(</a><a class='enum' href='png/common/enum.ColorType.html' title='enum png::common::ColorType'>ColorType</a>, <a class='enum' href='png/common/enum.BitDepth.html' title='enum png::common::BitDepth'>BitDepth</a><a class='primitive' href='std/primitive.tuple.html'>)</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='png/decoder/stream/enum.DecodingError.html' title='enum png::decoder::stream::DecodingError'>DecodingError</a>&gt; for <a class='enum' href='image/image/enum.ImageError.html' title='enum image::image::ImageError'>ImageError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='jpeg_decoder/decoder/enum.PixelFormat.html' title='enum jpeg_decoder::decoder::PixelFormat'>PixelFormat</a>&gt; for <a class='enum' href='image/color/enum.ColorType.html' title='enum image::color::ColorType'>ColorType</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='jpeg_decoder/error/enum.Error.html' title='enum jpeg_decoder::error::Error'>Error</a>&gt; for <a class='enum' href='image/image/enum.ImageError.html' title='enum image::image::ImageError'>ImageError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='gif/reader/decoder/enum.DecodingError.html' title='enum gif::reader::decoder::DecodingError'>DecodingError</a>&gt; for <a class='enum' href='image/image/enum.ImageError.html' title='enum image::image::ImageError'>ImageError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='image/image/enum.ImageError.html' title='enum image::image::ImageError'>ImageError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='flate2/mem/struct.DataError.html' title='struct flate2::mem::DataError'>DataError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='deflate/compression_options/enum.Compression.html' title='enum deflate::compression_options::Compression'>Compression</a>&gt; for <a class='struct' href='deflate/compression_options/struct.CompressionOptions.html' title='struct deflate::compression_options::CompressionOptions'>CompressionOptions</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;HuffmanError&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='struct alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='struct alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for &amp;'a <a class='struct' href='mio/iovec/struct.IoVec.html' title='struct mio::iovec::IoVec'>IoVec</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a mut [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for &amp;'a mut <a class='struct' href='mio/iovec/struct.IoVec.html' title='struct mio::iovec::IoVec'>IoVec</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for &amp;'a IoVec","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a mut [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for &amp;'a mut IoVec","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.usize.html'>usize</a>&gt; for <a class='struct' href='mio/token/struct.Token.html' title='struct mio::token::Token'>Token</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='mio/token/struct.Token.html' title='struct mio::token::Token'>Token</a>&gt; for <a class='primitive' href='std/primitive.usize.html'>usize</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sync/mpsc/struct.SendError.html' title='struct std::sync::mpsc::SendError'>SendError</a>&lt;T&gt;&gt; for <a class='enum' href='mio/channel/enum.SendError.html' title='enum mio::channel::SendError'>SendError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='mio/channel/enum.SendError.html' title='enum mio::channel::SendError'>SendError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/sync/mpsc/enum.TrySendError.html' title='enum std::sync::mpsc::TrySendError'>TrySendError</a>&lt;T&gt;&gt; for <a class='enum' href='mio/channel/enum.TrySendError.html' title='enum mio::channel::TrySendError'>TrySendError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sync/mpsc/struct.SendError.html' title='struct std::sync::mpsc::SendError'>SendError</a>&lt;T&gt;&gt; for <a class='enum' href='mio/channel/enum.TrySendError.html' title='enum mio::channel::TrySendError'>TrySendError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='mio/channel/enum.TrySendError.html' title='enum mio::channel::TrySendError'>TrySendError</a>&lt;T&gt;","impl&lt;M&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='mio/channel/enum.TrySendError.html' title='enum mio::channel::TrySendError'>TrySendError</a>&lt;M&gt;&gt; for <a class='enum' href='mio/deprecated/notify/enum.NotifyError.html' title='enum mio::deprecated::notify::NotifyError'>NotifyError</a>&lt;M&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;UnixSocket&gt; for <a class='struct' href='mio/deprecated/unix/struct.UnixSocket.html' title='struct mio::deprecated::unix::UnixSocket'>UnixSocket</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;UnixSocket&gt; for <a class='struct' href='mio/deprecated/unix/struct.UnixStream.html' title='struct mio::deprecated::unix::UnixStream'>UnixStream</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;UnixSocket&gt; for <a class='struct' href='mio/deprecated/unix/struct.UnixListener.html' title='struct mio::deprecated::unix::UnixListener'>UnixListener</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='mio/sys/unix/io/struct.Io.html' title='struct mio::sys::unix::io::Io'>Io</a>&gt; for <a class='struct' href='mio/deprecated/unix/struct.PipeReader.html' title='struct mio::deprecated::unix::PipeReader'>PipeReader</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='mio/sys/unix/io/struct.Io.html' title='struct mio::sys::unix::io::Io'>Io</a>&gt; for <a class='struct' href='mio/deprecated/unix/struct.PipeWriter.html' title='struct mio::deprecated::unix::PipeWriter'>PipeWriter</a>",];
implementors["net_traits"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='png/decoder/stream/enum.DecodingError.html' title='enum png::decoder::stream::DecodingError'>DecodingError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='png/decoder/stream/enum.DecodingError.html' title='enum png::decoder::stream::DecodingError'>DecodingError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='png/decoder/stream/enum.DecodingError.html' title='enum png::decoder::stream::DecodingError'>DecodingError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='png/encoder/enum.EncodingError.html' title='enum png::encoder::EncodingError'>EncodingError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='png/encoder/enum.EncodingError.html' title='enum png::encoder::EncodingError'>EncodingError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='idna/uts46/struct.Errors.html' title='struct idna::uts46::Errors'>Errors</a>&gt; for <a class='enum' href='url/parser/enum.ParseError.html' title='enum url::parser::ParseError'>ParseError</a>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='url/percent_encoding/struct.PercentEncode.html' title='struct url::percent_encoding::PercentEncode'>PercentEncode</a>&lt;'a, E&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt; <span class='where fmt-newline'>where E: <a class='trait' href='url/percent_encoding/trait.EncodeSet.html' title='trait url::percent_encoding::EncodeSet'>EncodeSet</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='url/percent_encoding/struct.PercentDecode.html' title='struct url::percent_encoding::PercentDecode'>PercentDecode</a>&lt;'a&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='enum' href='bincode/serde/enum.ErrorKind.html' title='enum bincode::serde::ErrorKind'>ErrorKind</a>&gt;","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='struct std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt;","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='struct std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/io/error/enum.ErrorKind.html' title='enum std::io::error::ErrorKind'>ErrorKind</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='primitive' href='std/primitive.u128.html'>u128</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u128.html'>u128</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV4.html' title='struct std::net::addr::SocketAddrV4'>SocketAddrV4</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV6.html' title='struct std::net::addr::SocketAddrV6'>SocketAddrV6</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl&lt;I&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>I, <a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a> <span class='where fmt-newline'>where I: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='struct std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='enum std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='rustc_serialize/json/enum.ParserError.html' title='enum rustc_serialize::json::ParserError'>ParserError</a>&gt; for <a class='enum' href='rustc_serialize/json/enum.DecoderError.html' title='enum rustc_serialize::json::DecoderError'>DecoderError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='rustc_serialize/json/enum.ParserError.html' title='enum rustc_serialize::json::ParserError'>ParserError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='core/fmt/struct.Error.html' title='struct core::fmt::Error'>Error</a>&gt; for <a class='enum' href='rustc_serialize/json/enum.EncoderError.html' title='enum rustc_serialize::json::EncoderError'>EncoderError</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for &amp;'a <a class='struct' href='mio/iovec/struct.IoVec.html' title='struct mio::iovec::IoVec'>IoVec</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a mut [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for &amp;'a mut <a class='struct' href='mio/iovec/struct.IoVec.html' title='struct mio::iovec::IoVec'>IoVec</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for &amp;'a IoVec","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a mut [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for &amp;'a mut IoVec","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.usize.html'>usize</a>&gt; for <a class='struct' href='mio/token/struct.Token.html' title='struct mio::token::Token'>Token</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='mio/token/struct.Token.html' title='struct mio::token::Token'>Token</a>&gt; for <a class='primitive' href='std/primitive.usize.html'>usize</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sync/mpsc/struct.SendError.html' title='struct std::sync::mpsc::SendError'>SendError</a>&lt;T&gt;&gt; for <a class='enum' href='mio/channel/enum.SendError.html' title='enum mio::channel::SendError'>SendError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='mio/channel/enum.SendError.html' title='enum mio::channel::SendError'>SendError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/sync/mpsc/enum.TrySendError.html' title='enum std::sync::mpsc::TrySendError'>TrySendError</a>&lt;T&gt;&gt; for <a class='enum' href='mio/channel/enum.TrySendError.html' title='enum mio::channel::TrySendError'>TrySendError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sync/mpsc/struct.SendError.html' title='struct std::sync::mpsc::SendError'>SendError</a>&lt;T&gt;&gt; for <a class='enum' href='mio/channel/enum.TrySendError.html' title='enum mio::channel::TrySendError'>TrySendError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='mio/channel/enum.TrySendError.html' title='enum mio::channel::TrySendError'>TrySendError</a>&lt;T&gt;","impl&lt;M&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='mio/channel/enum.TrySendError.html' title='enum mio::channel::TrySendError'>TrySendError</a>&lt;M&gt;&gt; for <a class='enum' href='mio/deprecated/notify/enum.NotifyError.html' title='enum mio::deprecated::notify::NotifyError'>NotifyError</a>&lt;M&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;UnixSocket&gt; for <a class='struct' href='mio/deprecated/unix/struct.UnixSocket.html' title='struct mio::deprecated::unix::UnixSocket'>UnixSocket</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;UnixSocket&gt; for <a class='struct' href='mio/deprecated/unix/struct.UnixStream.html' title='struct mio::deprecated::unix::UnixStream'>UnixStream</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;UnixSocket&gt; for <a class='struct' href='mio/deprecated/unix/struct.UnixListener.html' title='struct mio::deprecated::unix::UnixListener'>UnixListener</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='mio/sys/unix/io/struct.Io.html' title='struct mio::sys::unix::io::Io'>Io</a>&gt; for <a class='struct' href='mio/deprecated/unix/struct.PipeReader.html' title='struct mio::deprecated::unix::PipeReader'>PipeReader</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='mio/sys/unix/io/struct.Io.html' title='struct mio::sys::unix::io::Io'>Io</a>&gt; for <a class='struct' href='mio/deprecated/unix/struct.PipeWriter.html' title='struct mio::deprecated::unix::PipeWriter'>PipeWriter</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='gif/reader/decoder/enum.DecodingError.html' title='enum gif::reader::decoder::DecodingError'>DecodingError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='deflate/compression_options/enum.Compression.html' title='enum deflate::compression_options::Compression'>Compression</a>&gt; for <a class='struct' href='deflate/compression_options/struct.CompressionOptions.html' title='struct deflate::compression_options::CompressionOptions'>CompressionOptions</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;HuffmanError&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='openssl/ssl/error/enum.SslError.html' title='enum openssl::ssl::error::SslError'>SslError</a>&gt; for <a class='enum' href='openssl/ssl/error/enum.NonblockingSslError.html' title='enum openssl::ssl::error::NonblockingSslError'>NonblockingSslError</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='enum' href='webrender_traits/enum.PropertyBinding.html' title='enum webrender_traits::PropertyBinding'>PropertyBinding</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='webrender_traits/struct.PropertyBindingKey.html' title='struct webrender_traits::PropertyBindingKey'>PropertyBindingKey</a>&lt;T&gt;&gt; for <a class='enum' href='webrender_traits/enum.PropertyBinding.html' title='enum webrender_traits::PropertyBinding'>PropertyBinding</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='webrender_traits/struct.ColorF.html' title='struct webrender_traits::ColorF'>ColorF</a>&gt; for <a class='struct' href='webrender_traits/struct.ColorU.html' title='struct webrender_traits::ColorU'>ColorU</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='trait core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>: <a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>ToOwned</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>::<a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>Owned</a> == <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a, R&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a mut R&gt; for <a class='enum' href='hyper/client/enum.Body.html' title='enum hyper::client::Body'>Body</a>&lt;'a&gt; <span class='where fmt-newline'>where R: <a class='trait' href='std/io/trait.Read.html' title='trait std::io::Read'>Read</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='url/parser/enum.ParseError.html' title='enum url::parser::ParseError'>ParseError</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='openssl/ssl/error/enum.SslError.html' title='enum openssl::ssl::error::SslError'>SslError</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='core/str/struct.Utf8Error.html' title='struct core::str::Utf8Error'>Utf8Error</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.FromUtf8Error.html' title='struct collections::string::FromUtf8Error'>FromUtf8Error</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='httparse/enum.Error.html' title='enum httparse::Error'>Error</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='solicit/http/enum.HttpError.html' title='enum solicit::http::HttpError'>HttpError</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='hyper/http/h1/struct.EndError.html' title='struct hyper::http::h1::EndError'>EndError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a> <span class='where fmt-newline'>where W: <a class='trait' href='std/io/trait.Write.html' title='trait std::io::Write'>Write</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='hyper/net/trait.NetworkStream.html' title='trait hyper::net::NetworkStream'>NetworkStream</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='hyper/net/trait.NetworkStream.html' title='trait hyper::net::NetworkStream'>NetworkStream</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/tcp/struct.TcpListener.html' title='struct std::net::tcp::TcpListener'>TcpListener</a>&gt; for <a class='struct' href='hyper/net/struct.HttpListener.html' title='struct hyper::net::HttpListener'>HttpListener</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='jpeg_decoder/error/enum.Error.html' title='enum jpeg_decoder::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sync/mpsc/struct.RecvError.html' title='struct std::sync::mpsc::RecvError'>RecvError</a>&gt; for <a class='enum' href='jpeg_decoder/error/enum.Error.html' title='enum jpeg_decoder::error::Error'>Error</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sync/mpsc/struct.SendError.html' title='struct std::sync::mpsc::SendError'>SendError</a>&lt;T&gt;&gt; for <a class='enum' href='jpeg_decoder/error/enum.Error.html' title='enum jpeg_decoder::error::Error'>Error</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/any/trait.Any.html' title='trait core::any::Any'>Any</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for <a class='struct' href='serde/bytes/struct.Bytes.html' title='struct serde::bytes::Bytes'>Bytes</a>&lt;'a&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;&gt; for <a class='struct' href='serde/bytes/struct.Bytes.html' title='struct serde::bytes::Bytes'>Bytes</a>&lt;'a&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;&gt; for <a class='struct' href='serde/bytes/bytebuf/struct.ByteBuf.html' title='struct serde::bytes::bytebuf::ByteBuf'>ByteBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;&gt; for <a class='struct' href='solicit/http/frame/struct.RawFrame.html' title='struct solicit::http::frame::RawFrame'>RawFrame</a>","impl&lt;E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='enum' href='solicit/http/session/enum.StreamDataError.html' title='enum solicit::http::session::StreamDataError'>StreamDataError</a> <span class='where fmt-newline'>where E: <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a> + 'static</span>","impl&lt;E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='enum' href='solicit/http/enum.HttpError.html' title='enum solicit::http::HttpError'>HttpError</a> <span class='where fmt-newline'>where E: <a class='trait' href='solicit/http/client/trait.HttpConnectError.html' title='trait solicit::http::client::HttpConnectError'>HttpConnectError</a> + 'static</span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='struct' href='solicit/http/client/struct.CleartextConnectError.html' title='struct solicit::http::client::CleartextConnectError'>CleartextConnectError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='solicit/http/enum.HttpError.html' title='enum solicit::http::HttpError'>HttpError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='websocket/result/enum.WebSocketError.html' title='enum websocket::result::WebSocketError'>WebSocketError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>&gt; for <a class='enum' href='websocket/result/enum.WebSocketError.html' title='enum websocket::result::WebSocketError'>WebSocketError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='url/parser/enum.ParseError.html' title='enum url::parser::ParseError'>ParseError</a>&gt; for <a class='enum' href='websocket/result/enum.WebSocketError.html' title='enum websocket::result::WebSocketError'>WebSocketError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='openssl/ssl/error/enum.SslError.html' title='enum openssl::ssl::error::SslError'>SslError</a>&gt; for <a class='enum' href='websocket/result/enum.WebSocketError.html' title='enum websocket::result::WebSocketError'>WebSocketError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='core/str/struct.Utf8Error.html' title='struct core::str::Utf8Error'>Utf8Error</a>&gt; for <a class='enum' href='websocket/result/enum.WebSocketError.html' title='enum websocket::result::WebSocketError'>WebSocketError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='websocket/result/enum.WSUrlErrorKind.html' title='enum websocket::result::WSUrlErrorKind'>WSUrlErrorKind</a>&gt; for <a class='enum' href='websocket/result/enum.WebSocketError.html' title='enum websocket::result::WebSocketError'>WebSocketError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XAnyEvent.html' title='struct x11::xlib::XAnyEvent'>XAnyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XAnyEvent.html' title='struct x11::xlib::XAnyEvent'>XAnyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XAnyEvent.html' title='struct x11::xlib::XAnyEvent'>XAnyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XAnyEvent.html' title='struct x11::xlib::XAnyEvent'>XAnyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XButtonEvent.html' title='struct x11::xlib::XButtonEvent'>XButtonEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XButtonEvent.html' title='struct x11::xlib::XButtonEvent'>XButtonEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XButtonEvent.html' title='struct x11::xlib::XButtonEvent'>XButtonEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XButtonEvent.html' title='struct x11::xlib::XButtonEvent'>XButtonEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XCirculateEvent.html' title='struct x11::xlib::XCirculateEvent'>XCirculateEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XCirculateEvent.html' title='struct x11::xlib::XCirculateEvent'>XCirculateEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCirculateEvent.html' title='struct x11::xlib::XCirculateEvent'>XCirculateEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCirculateEvent.html' title='struct x11::xlib::XCirculateEvent'>XCirculateEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XCirculateRequestEvent.html' title='struct x11::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XCirculateRequestEvent.html' title='struct x11::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCirculateRequestEvent.html' title='struct x11::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCirculateRequestEvent.html' title='struct x11::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XClientMessageEvent.html' title='struct x11::xlib::XClientMessageEvent'>XClientMessageEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XClientMessageEvent.html' title='struct x11::xlib::XClientMessageEvent'>XClientMessageEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XClientMessageEvent.html' title='struct x11::xlib::XClientMessageEvent'>XClientMessageEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XClientMessageEvent.html' title='struct x11::xlib::XClientMessageEvent'>XClientMessageEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XColormapEvent.html' title='struct x11::xlib::XColormapEvent'>XColormapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XColormapEvent.html' title='struct x11::xlib::XColormapEvent'>XColormapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XColormapEvent.html' title='struct x11::xlib::XColormapEvent'>XColormapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XColormapEvent.html' title='struct x11::xlib::XColormapEvent'>XColormapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XConfigureEvent.html' title='struct x11::xlib::XConfigureEvent'>XConfigureEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XConfigureEvent.html' title='struct x11::xlib::XConfigureEvent'>XConfigureEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XConfigureEvent.html' title='struct x11::xlib::XConfigureEvent'>XConfigureEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XConfigureEvent.html' title='struct x11::xlib::XConfigureEvent'>XConfigureEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XConfigureRequestEvent.html' title='struct x11::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XConfigureRequestEvent.html' title='struct x11::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XConfigureRequestEvent.html' title='struct x11::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XConfigureRequestEvent.html' title='struct x11::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XCreateWindowEvent.html' title='struct x11::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XCreateWindowEvent.html' title='struct x11::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCreateWindowEvent.html' title='struct x11::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCreateWindowEvent.html' title='struct x11::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XCrossingEvent.html' title='struct x11::xlib::XCrossingEvent'>XCrossingEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XCrossingEvent.html' title='struct x11::xlib::XCrossingEvent'>XCrossingEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCrossingEvent.html' title='struct x11::xlib::XCrossingEvent'>XCrossingEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCrossingEvent.html' title='struct x11::xlib::XCrossingEvent'>XCrossingEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XDestroyWindowEvent.html' title='struct x11::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XDestroyWindowEvent.html' title='struct x11::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XDestroyWindowEvent.html' title='struct x11::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XDestroyWindowEvent.html' title='struct x11::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XErrorEvent.html' title='struct x11::xlib::XErrorEvent'>XErrorEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XErrorEvent.html' title='struct x11::xlib::XErrorEvent'>XErrorEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XErrorEvent.html' title='struct x11::xlib::XErrorEvent'>XErrorEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XErrorEvent.html' title='struct x11::xlib::XErrorEvent'>XErrorEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XExposeEvent.html' title='struct x11::xlib::XExposeEvent'>XExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XExposeEvent.html' title='struct x11::xlib::XExposeEvent'>XExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XExposeEvent.html' title='struct x11::xlib::XExposeEvent'>XExposeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XExposeEvent.html' title='struct x11::xlib::XExposeEvent'>XExposeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XFocusChangeEvent.html' title='struct x11::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XFocusChangeEvent.html' title='struct x11::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XFocusChangeEvent.html' title='struct x11::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XFocusChangeEvent.html' title='struct x11::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XGenericEventCookie.html' title='struct x11::xlib::XGenericEventCookie'>XGenericEventCookie</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XGenericEventCookie.html' title='struct x11::xlib::XGenericEventCookie'>XGenericEventCookie</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGenericEventCookie.html' title='struct x11::xlib::XGenericEventCookie'>XGenericEventCookie</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGenericEventCookie.html' title='struct x11::xlib::XGenericEventCookie'>XGenericEventCookie</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XGraphicsExposeEvent.html' title='struct x11::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XGraphicsExposeEvent.html' title='struct x11::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGraphicsExposeEvent.html' title='struct x11::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGraphicsExposeEvent.html' title='struct x11::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XGravityEvent.html' title='struct x11::xlib::XGravityEvent'>XGravityEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XGravityEvent.html' title='struct x11::xlib::XGravityEvent'>XGravityEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGravityEvent.html' title='struct x11::xlib::XGravityEvent'>XGravityEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGravityEvent.html' title='struct x11::xlib::XGravityEvent'>XGravityEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XKeyEvent.html' title='struct x11::xlib::XKeyEvent'>XKeyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XKeyEvent.html' title='struct x11::xlib::XKeyEvent'>XKeyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XKeyEvent.html' title='struct x11::xlib::XKeyEvent'>XKeyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XKeyEvent.html' title='struct x11::xlib::XKeyEvent'>XKeyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XKeymapEvent.html' title='struct x11::xlib::XKeymapEvent'>XKeymapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XKeymapEvent.html' title='struct x11::xlib::XKeymapEvent'>XKeymapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XKeymapEvent.html' title='struct x11::xlib::XKeymapEvent'>XKeymapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XKeymapEvent.html' title='struct x11::xlib::XKeymapEvent'>XKeymapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XMapEvent.html' title='struct x11::xlib::XMapEvent'>XMapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XMapEvent.html' title='struct x11::xlib::XMapEvent'>XMapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMapEvent.html' title='struct x11::xlib::XMapEvent'>XMapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMapEvent.html' title='struct x11::xlib::XMapEvent'>XMapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XMappingEvent.html' title='struct x11::xlib::XMappingEvent'>XMappingEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XMappingEvent.html' title='struct x11::xlib::XMappingEvent'>XMappingEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMappingEvent.html' title='struct x11::xlib::XMappingEvent'>XMappingEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMappingEvent.html' title='struct x11::xlib::XMappingEvent'>XMappingEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XMapRequestEvent.html' title='struct x11::xlib::XMapRequestEvent'>XMapRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XMapRequestEvent.html' title='struct x11::xlib::XMapRequestEvent'>XMapRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMapRequestEvent.html' title='struct x11::xlib::XMapRequestEvent'>XMapRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMapRequestEvent.html' title='struct x11::xlib::XMapRequestEvent'>XMapRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XMotionEvent.html' title='struct x11::xlib::XMotionEvent'>XMotionEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XMotionEvent.html' title='struct x11::xlib::XMotionEvent'>XMotionEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMotionEvent.html' title='struct x11::xlib::XMotionEvent'>XMotionEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMotionEvent.html' title='struct x11::xlib::XMotionEvent'>XMotionEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XNoExposeEvent.html' title='struct x11::xlib::XNoExposeEvent'>XNoExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XNoExposeEvent.html' title='struct x11::xlib::XNoExposeEvent'>XNoExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XNoExposeEvent.html' title='struct x11::xlib::XNoExposeEvent'>XNoExposeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XNoExposeEvent.html' title='struct x11::xlib::XNoExposeEvent'>XNoExposeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XPropertyEvent.html' title='struct x11::xlib::XPropertyEvent'>XPropertyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XPropertyEvent.html' title='struct x11::xlib::XPropertyEvent'>XPropertyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XPropertyEvent.html' title='struct x11::xlib::XPropertyEvent'>XPropertyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XPropertyEvent.html' title='struct x11::xlib::XPropertyEvent'>XPropertyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XReparentEvent.html' title='struct x11::xlib::XReparentEvent'>XReparentEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XReparentEvent.html' title='struct x11::xlib::XReparentEvent'>XReparentEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XReparentEvent.html' title='struct x11::xlib::XReparentEvent'>XReparentEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XReparentEvent.html' title='struct x11::xlib::XReparentEvent'>XReparentEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XResizeRequestEvent.html' title='struct x11::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XResizeRequestEvent.html' title='struct x11::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XResizeRequestEvent.html' title='struct x11::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XResizeRequestEvent.html' title='struct x11::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XSelectionClearEvent.html' title='struct x11::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XSelectionClearEvent.html' title='struct x11::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionClearEvent.html' title='struct x11::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionClearEvent.html' title='struct x11::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XSelectionEvent.html' title='struct x11::xlib::XSelectionEvent'>XSelectionEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XSelectionEvent.html' title='struct x11::xlib::XSelectionEvent'>XSelectionEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionEvent.html' title='struct x11::xlib::XSelectionEvent'>XSelectionEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionEvent.html' title='struct x11::xlib::XSelectionEvent'>XSelectionEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XSelectionRequestEvent.html' title='struct x11::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XSelectionRequestEvent.html' title='struct x11::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionRequestEvent.html' title='struct x11::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionRequestEvent.html' title='struct x11::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XUnmapEvent.html' title='struct x11::xlib::XUnmapEvent'>XUnmapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XUnmapEvent.html' title='struct x11::xlib::XUnmapEvent'>XUnmapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XUnmapEvent.html' title='struct x11::xlib::XUnmapEvent'>XUnmapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XUnmapEvent.html' title='struct x11::xlib::XUnmapEvent'>XUnmapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XVisibilityEvent.html' title='struct x11::xlib::XVisibilityEvent'>XVisibilityEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XVisibilityEvent.html' title='struct x11::xlib::XVisibilityEvent'>XVisibilityEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XVisibilityEvent.html' title='struct x11::xlib::XVisibilityEvent'>XVisibilityEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XVisibilityEvent.html' title='struct x11::xlib::XVisibilityEvent'>XVisibilityEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.i8.html'>i8</a><a class='primitive' href='std/primitive.array.html'>; 20]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 20]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.i16.html'>i16</a><a class='primitive' href='std/primitive.array.html'>; 10]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 10]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.i64.html'>i64</a><a class='primitive' href='std/primitive.array.html'>; 5]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u64.html'>u64</a><a class='primitive' href='std/primitive.array.html'>; 5]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xf86vmode/struct.XF86VidModeNotifyEvent.html' title='struct x11::xf86vmode::XF86VidModeNotifyEvent'>XF86VidModeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xf86vmode/struct.XF86VidModeNotifyEvent.html' title='struct x11::xf86vmode::XF86VidModeNotifyEvent'>XF86VidModeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xf86vmode/struct.XF86VidModeNotifyEvent.html' title='struct x11::xf86vmode::XF86VidModeNotifyEvent'>XF86VidModeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xf86vmode/struct.XF86VidModeNotifyEvent.html' title='struct x11::xf86vmode::XF86VidModeNotifyEvent'>XF86VidModeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRScreenChangeNotifyEvent.html' title='struct x11::xrandr::XRRScreenChangeNotifyEvent'>XRRScreenChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRScreenChangeNotifyEvent.html' title='struct x11::xrandr::XRRScreenChangeNotifyEvent'>XRRScreenChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRScreenChangeNotifyEvent.html' title='struct x11::xrandr::XRRScreenChangeNotifyEvent'>XRRScreenChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRScreenChangeNotifyEvent.html' title='struct x11::xrandr::XRRScreenChangeNotifyEvent'>XRRScreenChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRNotifyEvent.html' title='struct x11::xrandr::XRRNotifyEvent'>XRRNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRNotifyEvent.html' title='struct x11::xrandr::XRRNotifyEvent'>XRRNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRNotifyEvent.html' title='struct x11::xrandr::XRRNotifyEvent'>XRRNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRNotifyEvent.html' title='struct x11::xrandr::XRRNotifyEvent'>XRRNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRROutputChangeNotifyEvent.html' title='struct x11::xrandr::XRROutputChangeNotifyEvent'>XRROutputChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRROutputChangeNotifyEvent.html' title='struct x11::xrandr::XRROutputChangeNotifyEvent'>XRROutputChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRROutputChangeNotifyEvent.html' title='struct x11::xrandr::XRROutputChangeNotifyEvent'>XRROutputChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRROutputChangeNotifyEvent.html' title='struct x11::xrandr::XRROutputChangeNotifyEvent'>XRROutputChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRCrtcChangeNotifyEvent.html' title='struct x11::xrandr::XRRCrtcChangeNotifyEvent'>XRRCrtcChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRCrtcChangeNotifyEvent.html' title='struct x11::xrandr::XRRCrtcChangeNotifyEvent'>XRRCrtcChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRCrtcChangeNotifyEvent.html' title='struct x11::xrandr::XRRCrtcChangeNotifyEvent'>XRRCrtcChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRCrtcChangeNotifyEvent.html' title='struct x11::xrandr::XRRCrtcChangeNotifyEvent'>XRRCrtcChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRROutputPropertyNotifyEvent.html' title='struct x11::xrandr::XRROutputPropertyNotifyEvent'>XRROutputPropertyNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRROutputPropertyNotifyEvent.html' title='struct x11::xrandr::XRROutputPropertyNotifyEvent'>XRROutputPropertyNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRROutputPropertyNotifyEvent.html' title='struct x11::xrandr::XRROutputPropertyNotifyEvent'>XRROutputPropertyNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRROutputPropertyNotifyEvent.html' title='struct x11::xrandr::XRROutputPropertyNotifyEvent'>XRROutputPropertyNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRProviderChangeNotifyEvent.html' title='struct x11::xrandr::XRRProviderChangeNotifyEvent'>XRRProviderChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRProviderChangeNotifyEvent.html' title='struct x11::xrandr::XRRProviderChangeNotifyEvent'>XRRProviderChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRProviderChangeNotifyEvent.html' title='struct x11::xrandr::XRRProviderChangeNotifyEvent'>XRRProviderChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRProviderChangeNotifyEvent.html' title='struct x11::xrandr::XRRProviderChangeNotifyEvent'>XRRProviderChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRProviderPropertyNotifyEvent.html' title='struct x11::xrandr::XRRProviderPropertyNotifyEvent'>XRRProviderPropertyNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRProviderPropertyNotifyEvent.html' title='struct x11::xrandr::XRRProviderPropertyNotifyEvent'>XRRProviderPropertyNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRProviderPropertyNotifyEvent.html' title='struct x11::xrandr::XRRProviderPropertyNotifyEvent'>XRRProviderPropertyNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRProviderPropertyNotifyEvent.html' title='struct x11::xrandr::XRRProviderPropertyNotifyEvent'>XRRProviderPropertyNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRResourceChangeNotifyEvent.html' title='struct x11::xrandr::XRRResourceChangeNotifyEvent'>XRRResourceChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRResourceChangeNotifyEvent.html' title='struct x11::xrandr::XRRResourceChangeNotifyEvent'>XRRResourceChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRResourceChangeNotifyEvent.html' title='struct x11::xrandr::XRRResourceChangeNotifyEvent'>XRRResourceChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRResourceChangeNotifyEvent.html' title='struct x11::xrandr::XRRResourceChangeNotifyEvent'>XRRResourceChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xss/struct.XScreenSaverNotifyEvent.html' title='struct x11::xss::XScreenSaverNotifyEvent'>XScreenSaverNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xss/struct.XScreenSaverNotifyEvent.html' title='struct x11::xss::XScreenSaverNotifyEvent'>XScreenSaverNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xss/struct.XScreenSaverNotifyEvent.html' title='struct x11::xss::XScreenSaverNotifyEvent'>XScreenSaverNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xss/struct.XScreenSaverNotifyEvent.html' title='struct x11::xss::XScreenSaverNotifyEvent'>XScreenSaverNotifyEvent</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='struct alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='struct alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a><a class='enum' href='png/common/enum.ColorType.html' title='enum png::common::ColorType'>ColorType</a>, <a class='enum' href='png/common/enum.BitDepth.html' title='enum png::common::BitDepth'>BitDepth</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='image/color/enum.ColorType.html' title='enum image::color::ColorType'>ColorType</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='image/color/enum.ColorType.html' title='enum image::color::ColorType'>ColorType</a>&gt; for <a class='primitive' href='std/primitive.tuple.html'>(</a><a class='enum' href='png/common/enum.ColorType.html' title='enum png::common::ColorType'>ColorType</a>, <a class='enum' href='png/common/enum.BitDepth.html' title='enum png::common::BitDepth'>BitDepth</a><a class='primitive' href='std/primitive.tuple.html'>)</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='png/decoder/stream/enum.DecodingError.html' title='enum png::decoder::stream::DecodingError'>DecodingError</a>&gt; for <a class='enum' href='image/image/enum.ImageError.html' title='enum image::image::ImageError'>ImageError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='jpeg_decoder/decoder/enum.PixelFormat.html' title='enum jpeg_decoder::decoder::PixelFormat'>PixelFormat</a>&gt; for <a class='enum' href='image/color/enum.ColorType.html' title='enum image::color::ColorType'>ColorType</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='jpeg_decoder/error/enum.Error.html' title='enum jpeg_decoder::error::Error'>Error</a>&gt; for <a class='enum' href='image/image/enum.ImageError.html' title='enum image::image::ImageError'>ImageError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='gif/reader/decoder/enum.DecodingError.html' title='enum gif::reader::decoder::DecodingError'>DecodingError</a>&gt; for <a class='enum' href='image/image/enum.ImageError.html' title='enum image::image::ImageError'>ImageError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='image/image/enum.ImageError.html' title='enum image::image::ImageError'>ImageError</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='url/struct.Url.html' title='struct url::Url'>Url</a>&gt; for <a class='struct' href='servo_url/struct.ServoUrl.html' title='struct servo_url::ServoUrl'>ServoUrl</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;UnixError&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='enum' href='bincode/serde/enum.ErrorKind.html' title='enum bincode::serde::ErrorKind'>ErrorKind</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;UnixError&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='enum' href='hyper/header/common/referrer_policy/enum.ReferrerPolicy.html' title='enum hyper::header::common::referrer_policy::ReferrerPolicy'>ReferrerPolicyHeader</a>&gt; for <a class='enum' href='net_traits/enum.ReferrerPolicy.html' title='enum net_traits::ReferrerPolicy'>ReferrerPolicy</a>",];
implementors["odds"] = ["impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for <a class='struct' href='odds/slice/iter/struct.SliceCopyIter.html' title='struct odds::slice::iter::SliceCopyIter'>SliceCopyIter</a>&lt;'a, T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a></span>","impl&lt;'a, T, Slice:&nbsp;?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a>&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a Slice&gt; for &amp;'a <a class='struct' href='odds/slice/struct.RevSlice.html' title='struct odds::slice::RevSlice'>RevSlice</a>&lt;T&gt; <span class='where fmt-newline'>where Slice: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;</span>","impl&lt;'a, T, Slice:&nbsp;?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a>&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a mut Slice&gt; for &amp;'a mut <a class='struct' href='odds/slice/struct.RevSlice.html' title='struct odds::slice::RevSlice'>RevSlice</a>&lt;T&gt; <span class='where fmt-newline'>where Slice: <a class='trait' href='core/convert/trait.AsMut.html' title='trait core::convert::AsMut'>AsMut</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;</span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='odds/slice/struct.RevSlice.html' title='struct odds::slice::RevSlice'>RevSlice</a>&lt;T&gt;&gt;",];
implementors["offscreen_gl_context"] = ["impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for <a class='struct' href='serde/bytes/struct.Bytes.html' title='struct serde::bytes::Bytes'>Bytes</a>&lt;'a&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;&gt; for <a class='struct' href='serde/bytes/struct.Bytes.html' title='struct serde::bytes::Bytes'>Bytes</a>&lt;'a&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;&gt; for <a class='struct' href='serde/bytes/bytebuf/struct.ByteBuf.html' title='struct serde::bytes::bytebuf::ByteBuf'>ByteBuf</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='struct alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='struct alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XAnyEvent.html' title='struct x11::xlib::XAnyEvent'>XAnyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XAnyEvent.html' title='struct x11::xlib::XAnyEvent'>XAnyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XAnyEvent.html' title='struct x11::xlib::XAnyEvent'>XAnyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XAnyEvent.html' title='struct x11::xlib::XAnyEvent'>XAnyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XButtonEvent.html' title='struct x11::xlib::XButtonEvent'>XButtonEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XButtonEvent.html' title='struct x11::xlib::XButtonEvent'>XButtonEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XButtonEvent.html' title='struct x11::xlib::XButtonEvent'>XButtonEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XButtonEvent.html' title='struct x11::xlib::XButtonEvent'>XButtonEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XCirculateEvent.html' title='struct x11::xlib::XCirculateEvent'>XCirculateEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XCirculateEvent.html' title='struct x11::xlib::XCirculateEvent'>XCirculateEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCirculateEvent.html' title='struct x11::xlib::XCirculateEvent'>XCirculateEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCirculateEvent.html' title='struct x11::xlib::XCirculateEvent'>XCirculateEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XCirculateRequestEvent.html' title='struct x11::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XCirculateRequestEvent.html' title='struct x11::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCirculateRequestEvent.html' title='struct x11::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCirculateRequestEvent.html' title='struct x11::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XClientMessageEvent.html' title='struct x11::xlib::XClientMessageEvent'>XClientMessageEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XClientMessageEvent.html' title='struct x11::xlib::XClientMessageEvent'>XClientMessageEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XClientMessageEvent.html' title='struct x11::xlib::XClientMessageEvent'>XClientMessageEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XClientMessageEvent.html' title='struct x11::xlib::XClientMessageEvent'>XClientMessageEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XColormapEvent.html' title='struct x11::xlib::XColormapEvent'>XColormapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XColormapEvent.html' title='struct x11::xlib::XColormapEvent'>XColormapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XColormapEvent.html' title='struct x11::xlib::XColormapEvent'>XColormapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XColormapEvent.html' title='struct x11::xlib::XColormapEvent'>XColormapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XConfigureEvent.html' title='struct x11::xlib::XConfigureEvent'>XConfigureEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XConfigureEvent.html' title='struct x11::xlib::XConfigureEvent'>XConfigureEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XConfigureEvent.html' title='struct x11::xlib::XConfigureEvent'>XConfigureEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XConfigureEvent.html' title='struct x11::xlib::XConfigureEvent'>XConfigureEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XConfigureRequestEvent.html' title='struct x11::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XConfigureRequestEvent.html' title='struct x11::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XConfigureRequestEvent.html' title='struct x11::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XConfigureRequestEvent.html' title='struct x11::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XCreateWindowEvent.html' title='struct x11::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XCreateWindowEvent.html' title='struct x11::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCreateWindowEvent.html' title='struct x11::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCreateWindowEvent.html' title='struct x11::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XCrossingEvent.html' title='struct x11::xlib::XCrossingEvent'>XCrossingEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XCrossingEvent.html' title='struct x11::xlib::XCrossingEvent'>XCrossingEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCrossingEvent.html' title='struct x11::xlib::XCrossingEvent'>XCrossingEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCrossingEvent.html' title='struct x11::xlib::XCrossingEvent'>XCrossingEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XDestroyWindowEvent.html' title='struct x11::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XDestroyWindowEvent.html' title='struct x11::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XDestroyWindowEvent.html' title='struct x11::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XDestroyWindowEvent.html' title='struct x11::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XErrorEvent.html' title='struct x11::xlib::XErrorEvent'>XErrorEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XErrorEvent.html' title='struct x11::xlib::XErrorEvent'>XErrorEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XErrorEvent.html' title='struct x11::xlib::XErrorEvent'>XErrorEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XErrorEvent.html' title='struct x11::xlib::XErrorEvent'>XErrorEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XExposeEvent.html' title='struct x11::xlib::XExposeEvent'>XExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XExposeEvent.html' title='struct x11::xlib::XExposeEvent'>XExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XExposeEvent.html' title='struct x11::xlib::XExposeEvent'>XExposeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XExposeEvent.html' title='struct x11::xlib::XExposeEvent'>XExposeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XFocusChangeEvent.html' title='struct x11::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XFocusChangeEvent.html' title='struct x11::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XFocusChangeEvent.html' title='struct x11::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XFocusChangeEvent.html' title='struct x11::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XGenericEventCookie.html' title='struct x11::xlib::XGenericEventCookie'>XGenericEventCookie</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XGenericEventCookie.html' title='struct x11::xlib::XGenericEventCookie'>XGenericEventCookie</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGenericEventCookie.html' title='struct x11::xlib::XGenericEventCookie'>XGenericEventCookie</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGenericEventCookie.html' title='struct x11::xlib::XGenericEventCookie'>XGenericEventCookie</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XGraphicsExposeEvent.html' title='struct x11::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XGraphicsExposeEvent.html' title='struct x11::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGraphicsExposeEvent.html' title='struct x11::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGraphicsExposeEvent.html' title='struct x11::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XGravityEvent.html' title='struct x11::xlib::XGravityEvent'>XGravityEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XGravityEvent.html' title='struct x11::xlib::XGravityEvent'>XGravityEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGravityEvent.html' title='struct x11::xlib::XGravityEvent'>XGravityEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGravityEvent.html' title='struct x11::xlib::XGravityEvent'>XGravityEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XKeyEvent.html' title='struct x11::xlib::XKeyEvent'>XKeyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XKeyEvent.html' title='struct x11::xlib::XKeyEvent'>XKeyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XKeyEvent.html' title='struct x11::xlib::XKeyEvent'>XKeyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XKeyEvent.html' title='struct x11::xlib::XKeyEvent'>XKeyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XKeymapEvent.html' title='struct x11::xlib::XKeymapEvent'>XKeymapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XKeymapEvent.html' title='struct x11::xlib::XKeymapEvent'>XKeymapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XKeymapEvent.html' title='struct x11::xlib::XKeymapEvent'>XKeymapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XKeymapEvent.html' title='struct x11::xlib::XKeymapEvent'>XKeymapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XMapEvent.html' title='struct x11::xlib::XMapEvent'>XMapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XMapEvent.html' title='struct x11::xlib::XMapEvent'>XMapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMapEvent.html' title='struct x11::xlib::XMapEvent'>XMapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMapEvent.html' title='struct x11::xlib::XMapEvent'>XMapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XMappingEvent.html' title='struct x11::xlib::XMappingEvent'>XMappingEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XMappingEvent.html' title='struct x11::xlib::XMappingEvent'>XMappingEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMappingEvent.html' title='struct x11::xlib::XMappingEvent'>XMappingEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMappingEvent.html' title='struct x11::xlib::XMappingEvent'>XMappingEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XMapRequestEvent.html' title='struct x11::xlib::XMapRequestEvent'>XMapRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XMapRequestEvent.html' title='struct x11::xlib::XMapRequestEvent'>XMapRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMapRequestEvent.html' title='struct x11::xlib::XMapRequestEvent'>XMapRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMapRequestEvent.html' title='struct x11::xlib::XMapRequestEvent'>XMapRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XMotionEvent.html' title='struct x11::xlib::XMotionEvent'>XMotionEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XMotionEvent.html' title='struct x11::xlib::XMotionEvent'>XMotionEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMotionEvent.html' title='struct x11::xlib::XMotionEvent'>XMotionEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMotionEvent.html' title='struct x11::xlib::XMotionEvent'>XMotionEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XNoExposeEvent.html' title='struct x11::xlib::XNoExposeEvent'>XNoExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XNoExposeEvent.html' title='struct x11::xlib::XNoExposeEvent'>XNoExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XNoExposeEvent.html' title='struct x11::xlib::XNoExposeEvent'>XNoExposeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XNoExposeEvent.html' title='struct x11::xlib::XNoExposeEvent'>XNoExposeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XPropertyEvent.html' title='struct x11::xlib::XPropertyEvent'>XPropertyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XPropertyEvent.html' title='struct x11::xlib::XPropertyEvent'>XPropertyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XPropertyEvent.html' title='struct x11::xlib::XPropertyEvent'>XPropertyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XPropertyEvent.html' title='struct x11::xlib::XPropertyEvent'>XPropertyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XReparentEvent.html' title='struct x11::xlib::XReparentEvent'>XReparentEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XReparentEvent.html' title='struct x11::xlib::XReparentEvent'>XReparentEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XReparentEvent.html' title='struct x11::xlib::XReparentEvent'>XReparentEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XReparentEvent.html' title='struct x11::xlib::XReparentEvent'>XReparentEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XResizeRequestEvent.html' title='struct x11::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XResizeRequestEvent.html' title='struct x11::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XResizeRequestEvent.html' title='struct x11::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XResizeRequestEvent.html' title='struct x11::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XSelectionClearEvent.html' title='struct x11::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XSelectionClearEvent.html' title='struct x11::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionClearEvent.html' title='struct x11::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionClearEvent.html' title='struct x11::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XSelectionEvent.html' title='struct x11::xlib::XSelectionEvent'>XSelectionEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XSelectionEvent.html' title='struct x11::xlib::XSelectionEvent'>XSelectionEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionEvent.html' title='struct x11::xlib::XSelectionEvent'>XSelectionEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionEvent.html' title='struct x11::xlib::XSelectionEvent'>XSelectionEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XSelectionRequestEvent.html' title='struct x11::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XSelectionRequestEvent.html' title='struct x11::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionRequestEvent.html' title='struct x11::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionRequestEvent.html' title='struct x11::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XUnmapEvent.html' title='struct x11::xlib::XUnmapEvent'>XUnmapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XUnmapEvent.html' title='struct x11::xlib::XUnmapEvent'>XUnmapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XUnmapEvent.html' title='struct x11::xlib::XUnmapEvent'>XUnmapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XUnmapEvent.html' title='struct x11::xlib::XUnmapEvent'>XUnmapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XVisibilityEvent.html' title='struct x11::xlib::XVisibilityEvent'>XVisibilityEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XVisibilityEvent.html' title='struct x11::xlib::XVisibilityEvent'>XVisibilityEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XVisibilityEvent.html' title='struct x11::xlib::XVisibilityEvent'>XVisibilityEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XVisibilityEvent.html' title='struct x11::xlib::XVisibilityEvent'>XVisibilityEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.i8.html'>i8</a><a class='primitive' href='std/primitive.array.html'>; 20]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 20]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.i16.html'>i16</a><a class='primitive' href='std/primitive.array.html'>; 10]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 10]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.i64.html'>i64</a><a class='primitive' href='std/primitive.array.html'>; 5]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u64.html'>u64</a><a class='primitive' href='std/primitive.array.html'>; 5]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xf86vmode/struct.XF86VidModeNotifyEvent.html' title='struct x11::xf86vmode::XF86VidModeNotifyEvent'>XF86VidModeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xf86vmode/struct.XF86VidModeNotifyEvent.html' title='struct x11::xf86vmode::XF86VidModeNotifyEvent'>XF86VidModeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xf86vmode/struct.XF86VidModeNotifyEvent.html' title='struct x11::xf86vmode::XF86VidModeNotifyEvent'>XF86VidModeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xf86vmode/struct.XF86VidModeNotifyEvent.html' title='struct x11::xf86vmode::XF86VidModeNotifyEvent'>XF86VidModeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRScreenChangeNotifyEvent.html' title='struct x11::xrandr::XRRScreenChangeNotifyEvent'>XRRScreenChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRScreenChangeNotifyEvent.html' title='struct x11::xrandr::XRRScreenChangeNotifyEvent'>XRRScreenChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRScreenChangeNotifyEvent.html' title='struct x11::xrandr::XRRScreenChangeNotifyEvent'>XRRScreenChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRScreenChangeNotifyEvent.html' title='struct x11::xrandr::XRRScreenChangeNotifyEvent'>XRRScreenChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRNotifyEvent.html' title='struct x11::xrandr::XRRNotifyEvent'>XRRNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRNotifyEvent.html' title='struct x11::xrandr::XRRNotifyEvent'>XRRNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRNotifyEvent.html' title='struct x11::xrandr::XRRNotifyEvent'>XRRNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRNotifyEvent.html' title='struct x11::xrandr::XRRNotifyEvent'>XRRNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRROutputChangeNotifyEvent.html' title='struct x11::xrandr::XRROutputChangeNotifyEvent'>XRROutputChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRROutputChangeNotifyEvent.html' title='struct x11::xrandr::XRROutputChangeNotifyEvent'>XRROutputChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRROutputChangeNotifyEvent.html' title='struct x11::xrandr::XRROutputChangeNotifyEvent'>XRROutputChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRROutputChangeNotifyEvent.html' title='struct x11::xrandr::XRROutputChangeNotifyEvent'>XRROutputChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRCrtcChangeNotifyEvent.html' title='struct x11::xrandr::XRRCrtcChangeNotifyEvent'>XRRCrtcChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRCrtcChangeNotifyEvent.html' title='struct x11::xrandr::XRRCrtcChangeNotifyEvent'>XRRCrtcChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRCrtcChangeNotifyEvent.html' title='struct x11::xrandr::XRRCrtcChangeNotifyEvent'>XRRCrtcChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRCrtcChangeNotifyEvent.html' title='struct x11::xrandr::XRRCrtcChangeNotifyEvent'>XRRCrtcChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRROutputPropertyNotifyEvent.html' title='struct x11::xrandr::XRROutputPropertyNotifyEvent'>XRROutputPropertyNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRROutputPropertyNotifyEvent.html' title='struct x11::xrandr::XRROutputPropertyNotifyEvent'>XRROutputPropertyNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRROutputPropertyNotifyEvent.html' title='struct x11::xrandr::XRROutputPropertyNotifyEvent'>XRROutputPropertyNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRROutputPropertyNotifyEvent.html' title='struct x11::xrandr::XRROutputPropertyNotifyEvent'>XRROutputPropertyNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRProviderChangeNotifyEvent.html' title='struct x11::xrandr::XRRProviderChangeNotifyEvent'>XRRProviderChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRProviderChangeNotifyEvent.html' title='struct x11::xrandr::XRRProviderChangeNotifyEvent'>XRRProviderChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRProviderChangeNotifyEvent.html' title='struct x11::xrandr::XRRProviderChangeNotifyEvent'>XRRProviderChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRProviderChangeNotifyEvent.html' title='struct x11::xrandr::XRRProviderChangeNotifyEvent'>XRRProviderChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRProviderPropertyNotifyEvent.html' title='struct x11::xrandr::XRRProviderPropertyNotifyEvent'>XRRProviderPropertyNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRProviderPropertyNotifyEvent.html' title='struct x11::xrandr::XRRProviderPropertyNotifyEvent'>XRRProviderPropertyNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRProviderPropertyNotifyEvent.html' title='struct x11::xrandr::XRRProviderPropertyNotifyEvent'>XRRProviderPropertyNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRProviderPropertyNotifyEvent.html' title='struct x11::xrandr::XRRProviderPropertyNotifyEvent'>XRRProviderPropertyNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRResourceChangeNotifyEvent.html' title='struct x11::xrandr::XRRResourceChangeNotifyEvent'>XRRResourceChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRResourceChangeNotifyEvent.html' title='struct x11::xrandr::XRRResourceChangeNotifyEvent'>XRRResourceChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRResourceChangeNotifyEvent.html' title='struct x11::xrandr::XRRResourceChangeNotifyEvent'>XRRResourceChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRResourceChangeNotifyEvent.html' title='struct x11::xrandr::XRRResourceChangeNotifyEvent'>XRRResourceChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xss/struct.XScreenSaverNotifyEvent.html' title='struct x11::xss::XScreenSaverNotifyEvent'>XScreenSaverNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xss/struct.XScreenSaverNotifyEvent.html' title='struct x11::xss::XScreenSaverNotifyEvent'>XScreenSaverNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xss/struct.XScreenSaverNotifyEvent.html' title='struct x11::xss::XScreenSaverNotifyEvent'>XScreenSaverNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xss/struct.XScreenSaverNotifyEvent.html' title='struct x11::xss::XScreenSaverNotifyEvent'>XScreenSaverNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='rustc_serialize/json/enum.ParserError.html' title='enum rustc_serialize::json::ParserError'>ParserError</a>&gt; for <a class='enum' href='rustc_serialize/json/enum.DecoderError.html' title='enum rustc_serialize::json::DecoderError'>DecoderError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='rustc_serialize/json/enum.ParserError.html' title='enum rustc_serialize::json::ParserError'>ParserError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='core/fmt/struct.Error.html' title='struct core::fmt::Error'>Error</a>&gt; for <a class='enum' href='rustc_serialize/json/enum.EncoderError.html' title='enum rustc_serialize::json::EncoderError'>EncoderError</a>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='struct std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt;","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='struct std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/io/error/enum.ErrorKind.html' title='enum std::io::error::ErrorKind'>ErrorKind</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='primitive' href='std/primitive.u128.html'>u128</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u128.html'>u128</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV4.html' title='struct std::net::addr::SocketAddrV4'>SocketAddrV4</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV6.html' title='struct std::net::addr::SocketAddrV6'>SocketAddrV6</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl&lt;I&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>I, <a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a> <span class='where fmt-newline'>where I: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='struct std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='enum std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='trait core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>: <a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>ToOwned</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>::<a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>Owned</a> == <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;",];
implementors["ogg"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='ogg/enum.OggReadError.html' title='enum ogg::OggReadError'>OggReadError</a>",];
implementors["ogg_metadata"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='ogg_metadata/enum.OggMetadataError.html' title='enum ogg_metadata::OggMetadataError'>OggMetadataError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='ogg/enum.OggReadError.html' title='enum ogg::OggReadError'>OggReadError</a>&gt; for <a class='enum' href='ogg_metadata/enum.OggMetadataError.html' title='enum ogg_metadata::OggMetadataError'>OggMetadataError</a>",];
implementors["openssl"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='openssl/ssl/error/enum.SslError.html' title='enum openssl::ssl::error::SslError'>SslError</a>&gt; for <a class='enum' href='openssl/ssl/error/enum.NonblockingSslError.html' title='enum openssl::ssl::error::NonblockingSslError'>NonblockingSslError</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='struct alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='struct alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='struct std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt;","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='struct std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/io/error/enum.ErrorKind.html' title='enum std::io::error::ErrorKind'>ErrorKind</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='primitive' href='std/primitive.u128.html'>u128</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u128.html'>u128</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV4.html' title='struct std::net::addr::SocketAddrV4'>SocketAddrV4</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV6.html' title='struct std::net::addr::SocketAddrV6'>SocketAddrV6</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl&lt;I&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>I, <a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a> <span class='where fmt-newline'>where I: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='struct std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='enum std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='trait core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>: <a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>ToOwned</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>::<a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>Owned</a> == <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;",];
implementors["ordered_float"] = ["impl&lt;T:&nbsp;<a class='trait' href='num_traits/float/trait.Float.html' title='trait num_traits::float::Float'>Float</a>&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='ordered_float/struct.OrderedFloat.html' title='struct ordered_float::OrderedFloat'>OrderedFloat</a>&lt;T&gt;","impl&lt;T:&nbsp;<a class='trait' href='num_traits/float/trait.Float.html' title='trait num_traits::float::Float'>Float</a>&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='ordered_float/struct.NotNaN.html' title='struct ordered_float::NotNaN'>NotNaN</a>&lt;T&gt;",];
implementors["owning_ref"] = ["impl&lt;O, T:&nbsp;?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a>&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;O&gt; for <a class='struct' href='owning_ref/struct.OwningRef.html' title='struct owning_ref::OwningRef'>OwningRef</a>&lt;O, T&gt; <span class='where fmt-newline'>where O: <a class='trait' href='owning_ref/trait.StableAddress.html' title='trait owning_ref::StableAddress'>StableAddress</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;O: <a class='trait' href='core/ops/trait.Deref.html' title='trait core::ops::Deref'>Deref</a>&lt;Target=T&gt;</span>",];
implementors["phf"] = ["impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='struct alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='struct alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='struct std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt;","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='struct std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/io/error/enum.ErrorKind.html' title='enum std::io::error::ErrorKind'>ErrorKind</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='primitive' href='std/primitive.u128.html'>u128</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u128.html'>u128</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV4.html' title='struct std::net::addr::SocketAddrV4'>SocketAddrV4</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV6.html' title='struct std::net::addr::SocketAddrV6'>SocketAddrV6</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl&lt;I&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>I, <a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a> <span class='where fmt-newline'>where I: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='struct std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='enum std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='trait core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>: <a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>ToOwned</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>::<a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>Owned</a> == <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;",];
implementors["png"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='png/enum.DecodingError.html' title='enum png::DecodingError'>DecodingError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='png/enum.DecodingError.html' title='enum png::DecodingError'>DecodingError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='png/enum.DecodingError.html' title='enum png::DecodingError'>DecodingError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='png/enum.EncodingError.html' title='enum png::EncodingError'>EncodingError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='png/enum.EncodingError.html' title='enum png::EncodingError'>EncodingError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>",];
implementors["quote"] = ["impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='quote/struct.Ident.html' title='struct quote::Ident'>Ident</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='quote/struct.Ident.html' title='struct quote::Ident'>Ident</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='quote/struct.Ident.html' title='struct quote::Ident'>Ident</a>",];
implementors["regex"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='regex_syntax/struct.Error.html' title='struct regex_syntax::Error'>Error</a>&gt; for <a class='enum' href='regex/enum.Error.html' title='enum regex::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='regex/expand/enum.Ref.html' title='enum regex::expand::Ref'>Ref</a>&lt;'a&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.usize.html'>usize</a>&gt; for <a class='enum' href='regex/expand/enum.Ref.html' title='enum regex::expand::Ref'>Ref</a>&lt;'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.char.html'>char</a>&gt; for <a class='struct' href='regex/input/struct.Char.html' title='struct regex::input::Char'>Char</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='core/option/enum.Option.html' title='enum core::option::Option'>Option</a>&lt;<a class='primitive' href='std/primitive.char.html'>char</a>&gt;&gt; for <a class='struct' href='regex/input/struct.Char.html' title='struct regex::input::Char'>Char</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='regex/exec/struct.Exec.html' title='struct regex::exec::Exec'>Exec</a>&gt; for <a class='struct' href='regex/bytes/struct.Regex.html' title='struct regex::bytes::Regex'>Regex</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='regex/exec/struct.Exec.html' title='struct regex::exec::Exec'>Exec</a>&gt; for <a class='struct' href='regex/struct.RegexSet.html' title='struct regex::RegexSet'>RegexSet</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='regex/exec/struct.Exec.html' title='struct regex::exec::Exec'>Exec</a>&gt; for <a class='struct' href='regex/bytes/struct.RegexSet.html' title='struct regex::bytes::RegexSet'>RegexSet</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='regex/exec/struct.Exec.html' title='struct regex::exec::Exec'>Exec</a>&gt; for <a class='struct' href='regex/struct.Regex.html' title='struct regex::Regex'>Regex</a>",];
implementors["regex_syntax"] = ["impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='struct alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='struct alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='struct std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt;","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='struct std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/io/error/enum.ErrorKind.html' title='enum std::io::error::ErrorKind'>ErrorKind</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='primitive' href='std/primitive.u128.html'>u128</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u128.html'>u128</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV4.html' title='struct std::net::addr::SocketAddrV4'>SocketAddrV4</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV6.html' title='struct std::net::addr::SocketAddrV6'>SocketAddrV6</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl&lt;I&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>I, <a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a> <span class='where fmt-newline'>where I: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='struct std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='enum std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='trait core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>: <a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>ToOwned</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>::<a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>Owned</a> == <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;",];
implementors["rustc_serialize"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='rustc_serialize/json/enum.ParserError.html' title='enum rustc_serialize::json::ParserError'>ParserError</a>&gt; for <a class='enum' href='rustc_serialize/json/enum.DecoderError.html' title='enum rustc_serialize::json::DecoderError'>DecoderError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='rustc_serialize/json/enum.ParserError.html' title='enum rustc_serialize::json::ParserError'>ParserError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='core/fmt/struct.Error.html' title='struct core::fmt::Error'>Error</a>&gt; for <a class='enum' href='rustc_serialize/json/enum.EncoderError.html' title='enum rustc_serialize::json::EncoderError'>EncoderError</a>",];
implementors["script"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='enum' href='bincode/serde/enum.ErrorKind.html' title='enum bincode::serde::ErrorKind'>ErrorKind</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='atomic_refcell/struct.AtomicRefCell.html' title='struct atomic_refcell::AtomicRefCell'>AtomicRefCell</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='enum' href='hyper/header/common/referrer_policy/enum.ReferrerPolicy.html' title='enum hyper::header::common::referrer_policy::ReferrerPolicy'>ReferrerPolicy</a>&gt; for <a class='enum' href='net_traits/enum.ReferrerPolicy.html' title='enum net_traits::ReferrerPolicy'>ReferrerPolicy</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;Error&gt; for <a class='primitive' href='std/primitive.tuple.html'>()</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='jpeg_decoder/error/enum.Error.html' title='enum jpeg_decoder::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sync/mpsc/struct.RecvError.html' title='struct std::sync::mpsc::RecvError'>RecvError</a>&gt; for <a class='enum' href='jpeg_decoder/error/enum.Error.html' title='enum jpeg_decoder::error::Error'>Error</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sync/mpsc/struct.SendError.html' title='struct std::sync::mpsc::SendError'>SendError</a>&lt;T&gt;&gt; for <a class='enum' href='jpeg_decoder/error/enum.Error.html' title='enum jpeg_decoder::error::Error'>Error</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/any/trait.Any.html' title='trait core::any::Any'>Any</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='ordered_float/struct.OrderedFloat.html' title='struct ordered_float::OrderedFloat'>OrderedFloat</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='num_traits/float/trait.Float.html' title='trait num_traits::float::Float'>Float</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='ordered_float/struct.NotNaN.html' title='struct ordered_float::NotNaN'>NotNaN</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='num_traits/float/trait.Float.html' title='trait num_traits::float::Float'>Float</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='ogg/enum.OggReadError.html' title='enum ogg::OggReadError'>OggReadError</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='enum' href='webrender_traits/enum.PropertyBinding.html' title='enum webrender_traits::PropertyBinding'>PropertyBinding</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='webrender_traits/struct.PropertyBindingKey.html' title='struct webrender_traits::PropertyBindingKey'>PropertyBindingKey</a>&lt;T&gt;&gt; for <a class='enum' href='webrender_traits/enum.PropertyBinding.html' title='enum webrender_traits::PropertyBinding'>PropertyBinding</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='webrender_traits/struct.ColorF.html' title='struct webrender_traits::ColorF'>ColorF</a>&gt; for <a class='struct' href='webrender_traits/struct.ColorU.html' title='struct webrender_traits::ColorU'>ColorU</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='url/struct.Url.html' title='struct url::Url'>Url</a>&gt; for <a class='struct' href='servo_url/struct.ServoUrl.html' title='struct servo_url::ServoUrl'>ServoUrl</a>","impl&lt;'a, Static&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='string_cache/atom/struct.Atom.html' title='struct string_cache::atom::Atom'>Atom</a>&lt;Static&gt; <span class='where fmt-newline'>where Static: <a class='trait' href='string_cache/atom/trait.StaticAtomSet.html' title='trait string_cache::atom::StaticAtomSet'>StaticAtomSet</a></span>","impl&lt;'a, Static&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='string_cache/atom/struct.Atom.html' title='struct string_cache::atom::Atom'>Atom</a>&lt;Static&gt; <span class='where fmt-newline'>where Static: <a class='trait' href='string_cache/atom/trait.StaticAtomSet.html' title='trait string_cache::atom::StaticAtomSet'>StaticAtomSet</a></span>","impl&lt;Static&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='string_cache/atom/struct.Atom.html' title='struct string_cache::atom::Atom'>Atom</a>&lt;Static&gt; <span class='where fmt-newline'>where Static: <a class='trait' href='string_cache/atom/trait.StaticAtomSet.html' title='trait string_cache::atom::StaticAtomSet'>StaticAtomSet</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;&gt; for <a class='struct' href='solicit/http/frame/struct.RawFrame.html' title='struct solicit::http::frame::RawFrame'>RawFrame</a>","impl&lt;E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='enum' href='solicit/http/session/enum.StreamDataError.html' title='enum solicit::http::session::StreamDataError'>StreamDataError</a> <span class='where fmt-newline'>where E: <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a> + 'static</span>","impl&lt;E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='enum' href='solicit/http/enum.HttpError.html' title='enum solicit::http::HttpError'>HttpError</a> <span class='where fmt-newline'>where E: <a class='trait' href='solicit/http/client/trait.HttpConnectError.html' title='trait solicit::http::client::HttpConnectError'>HttpConnectError</a> + 'static</span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='struct' href='solicit/http/client/struct.CleartextConnectError.html' title='struct solicit::http::client::CleartextConnectError'>CleartextConnectError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='solicit/http/enum.HttpError.html' title='enum solicit::http::HttpError'>HttpError</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for &amp;'a <a class='struct' href='mio/iovec/struct.IoVec.html' title='struct mio::iovec::IoVec'>IoVec</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a mut [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for &amp;'a mut <a class='struct' href='mio/iovec/struct.IoVec.html' title='struct mio::iovec::IoVec'>IoVec</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for &amp;'a IoVec","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a mut [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for &amp;'a mut IoVec","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.usize.html'>usize</a>&gt; for <a class='struct' href='mio/token/struct.Token.html' title='struct mio::token::Token'>Token</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='mio/token/struct.Token.html' title='struct mio::token::Token'>Token</a>&gt; for <a class='primitive' href='std/primitive.usize.html'>usize</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sync/mpsc/struct.SendError.html' title='struct std::sync::mpsc::SendError'>SendError</a>&lt;T&gt;&gt; for <a class='enum' href='mio/channel/enum.SendError.html' title='enum mio::channel::SendError'>SendError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='mio/channel/enum.SendError.html' title='enum mio::channel::SendError'>SendError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/sync/mpsc/enum.TrySendError.html' title='enum std::sync::mpsc::TrySendError'>TrySendError</a>&lt;T&gt;&gt; for <a class='enum' href='mio/channel/enum.TrySendError.html' title='enum mio::channel::TrySendError'>TrySendError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sync/mpsc/struct.SendError.html' title='struct std::sync::mpsc::SendError'>SendError</a>&lt;T&gt;&gt; for <a class='enum' href='mio/channel/enum.TrySendError.html' title='enum mio::channel::TrySendError'>TrySendError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='mio/channel/enum.TrySendError.html' title='enum mio::channel::TrySendError'>TrySendError</a>&lt;T&gt;","impl&lt;M&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='mio/channel/enum.TrySendError.html' title='enum mio::channel::TrySendError'>TrySendError</a>&lt;M&gt;&gt; for <a class='enum' href='mio/deprecated/notify/enum.NotifyError.html' title='enum mio::deprecated::notify::NotifyError'>NotifyError</a>&lt;M&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;UnixSocket&gt; for <a class='struct' href='mio/deprecated/unix/struct.UnixSocket.html' title='struct mio::deprecated::unix::UnixSocket'>UnixSocket</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;UnixSocket&gt; for <a class='struct' href='mio/deprecated/unix/struct.UnixStream.html' title='struct mio::deprecated::unix::UnixStream'>UnixStream</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;UnixSocket&gt; for <a class='struct' href='mio/deprecated/unix/struct.UnixListener.html' title='struct mio::deprecated::unix::UnixListener'>UnixListener</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='mio/sys/unix/io/struct.Io.html' title='struct mio::sys::unix::io::Io'>Io</a>&gt; for <a class='struct' href='mio/deprecated/unix/struct.PipeReader.html' title='struct mio::deprecated::unix::PipeReader'>PipeReader</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='mio/sys/unix/io/struct.Io.html' title='struct mio::sys::unix::io::Io'>Io</a>&gt; for <a class='struct' href='mio/deprecated/unix/struct.PipeWriter.html' title='struct mio::deprecated::unix::PipeWriter'>PipeWriter</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt; for <a class='enum' href='mp3_metadata/enums/enum.Version.html' title='enum mp3_metadata::enums::Version'>Version</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt; for <a class='enum' href='mp3_metadata/enums/enum.Layer.html' title='enum mp3_metadata::enums::Layer'>Layer</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt; for <a class='enum' href='mp3_metadata/enums/enum.CRC.html' title='enum mp3_metadata::enums::CRC'>CRC</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt; for <a class='enum' href='mp3_metadata/enums/enum.ChannelType.html' title='enum mp3_metadata::enums::ChannelType'>ChannelType</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt; for <a class='enum' href='mp3_metadata/enums/enum.Copyright.html' title='enum mp3_metadata::enums::Copyright'>Copyright</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt; for <a class='enum' href='mp3_metadata/enums/enum.Status.html' title='enum mp3_metadata::enums::Status'>Status</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt; for <a class='enum' href='mp3_metadata/enums/enum.Emphasis.html' title='enum mp3_metadata::enums::Emphasis'>Emphasis</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='mp3_metadata/enums/enum.Genre.html' title='enum mp3_metadata::enums::Genre'>Genre</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt; for <a class='enum' href='mp3_metadata/enums/enum.Genre.html' title='enum mp3_metadata::enums::Genre'>Genre</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='regex_syntax/struct.Error.html' title='struct regex_syntax::Error'>Error</a>&gt; for <a class='enum' href='regex/error/enum.Error.html' title='enum regex::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;Exec&gt; for <a class='struct' href='regex/re_bytes/struct.Regex.html' title='struct regex::re_bytes::Regex'>Regex</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;Exec&gt; for <a class='struct' href='regex/re_unicode/struct.Regex.html' title='struct regex::re_unicode::Regex'>Regex</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;Exec&gt; for <a class='struct' href='regex/re_set/unicode/struct.RegexSet.html' title='struct regex::re_set::unicode::RegexSet'>RegexSet</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;Exec&gt; for <a class='struct' href='regex/re_set/bytes/struct.RegexSet.html' title='struct regex::re_set::bytes::RegexSet'>RegexSet</a>","impl&lt;'a, R&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a mut R&gt; for <a class='enum' href='hyper/client/enum.Body.html' title='enum hyper::client::Body'>Body</a>&lt;'a&gt; <span class='where fmt-newline'>where R: <a class='trait' href='std/io/trait.Read.html' title='trait std::io::Read'>Read</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='url/parser/enum.ParseError.html' title='enum url::parser::ParseError'>ParseError</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='openssl/ssl/error/enum.SslError.html' title='enum openssl::ssl::error::SslError'>SslError</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='core/str/struct.Utf8Error.html' title='struct core::str::Utf8Error'>Utf8Error</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.FromUtf8Error.html' title='struct collections::string::FromUtf8Error'>FromUtf8Error</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='httparse/enum.Error.html' title='enum httparse::Error'>Error</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='solicit/http/enum.HttpError.html' title='enum solicit::http::HttpError'>HttpError</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='hyper/http/h1/struct.EndError.html' title='struct hyper::http::h1::EndError'>EndError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a> <span class='where fmt-newline'>where W: <a class='trait' href='std/io/trait.Write.html' title='trait std::io::Write'>Write</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='hyper/net/trait.NetworkStream.html' title='trait hyper::net::NetworkStream'>NetworkStream</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='hyper/net/trait.NetworkStream.html' title='trait hyper::net::NetworkStream'>NetworkStream</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/tcp/struct.TcpListener.html' title='struct std::net::tcp::TcpListener'>TcpListener</a>&gt; for <a class='struct' href='hyper/net/struct.HttpListener.html' title='struct hyper::net::HttpListener'>HttpListener</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='idna/uts46/struct.Errors.html' title='struct idna::uts46::Errors'>Errors</a>&gt; for <a class='enum' href='url/parser/enum.ParseError.html' title='enum url::parser::ParseError'>ParseError</a>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='url/percent_encoding/struct.PercentEncode.html' title='struct url::percent_encoding::PercentEncode'>PercentEncode</a>&lt;'a, E&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt; <span class='where fmt-newline'>where E: <a class='trait' href='url/percent_encoding/trait.EncodeSet.html' title='trait url::percent_encoding::EncodeSet'>EncodeSet</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='url/percent_encoding/struct.PercentDecode.html' title='struct url::percent_encoding::PercentDecode'>PercentDecode</a>&lt;'a&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;NullError&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='libloading/os/unix/struct.Library.html' title='struct libloading::os::unix::Library'>Library</a>&gt; for <a class='struct' href='libloading/struct.Library.html' title='struct libloading::Library'>Library</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='libloading/struct.Library.html' title='struct libloading::Library'>Library</a>&gt; for <a class='struct' href='libloading/os/unix/struct.Library.html' title='struct libloading::os::unix::Library'>Library</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='openssl/ssl/error/enum.SslError.html' title='enum openssl::ssl::error::SslError'>SslError</a>&gt; for <a class='enum' href='openssl/ssl/error/enum.NonblockingSslError.html' title='enum openssl::ssl::error::NonblockingSslError'>NonblockingSslError</a>","impl&lt;O, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;O&gt; for <a class='struct' href='owning_ref/struct.OwningRef.html' title='struct owning_ref::OwningRef'>OwningRef</a>&lt;O, T&gt; <span class='where fmt-newline'>where O: <a class='trait' href='owning_ref/trait.StableAddress.html' title='trait owning_ref::StableAddress'>StableAddress</a>&lt;Target=T&gt; + <a class='trait' href='core/ops/trait.Deref.html' title='trait core::ops::Deref'>Deref</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T: ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for <a class='struct' href='serde/bytes/struct.Bytes.html' title='struct serde::bytes::Bytes'>Bytes</a>&lt;'a&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;&gt; for <a class='struct' href='serde/bytes/struct.Bytes.html' title='struct serde::bytes::Bytes'>Bytes</a>&lt;'a&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;&gt; for <a class='struct' href='serde/bytes/bytebuf/struct.ByteBuf.html' title='struct serde::bytes::bytebuf::ByteBuf'>ByteBuf</a>","impl&lt;F, A&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='tendril/tendril/struct.Tendril.html' title='struct tendril::tendril::Tendril'>Tendril</a>&lt;F, A&gt;&gt; for <a class='struct' href='tendril/tendril/struct.SendTendril.html' title='struct tendril::tendril::SendTendril'>SendTendril</a>&lt;F&gt; <span class='where fmt-newline'>where A: <a class='trait' href='tendril/tendril/trait.Atomicity.html' title='trait tendril::tendril::Atomicity'>Atomicity</a>, F: <a class='trait' href='tendril/fmt/trait.Format.html' title='trait tendril::fmt::Format'>Format</a></span>","impl&lt;F, A&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='tendril/tendril/struct.SendTendril.html' title='struct tendril::tendril::SendTendril'>SendTendril</a>&lt;F&gt;&gt; for <a class='struct' href='tendril/tendril/struct.Tendril.html' title='struct tendril::tendril::Tendril'>Tendril</a>&lt;F, A&gt; <span class='where fmt-newline'>where A: <a class='trait' href='tendril/tendril/trait.Atomicity.html' title='trait tendril::tendril::Atomicity'>Atomicity</a>, F: <a class='trait' href='tendril/fmt/trait.Format.html' title='trait tendril::fmt::Format'>Format</a></span>","impl&lt;'a, F, A&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a F::<a class='trait' href='tendril/fmt/trait.SliceFormat.html' title='trait tendril::fmt::SliceFormat'>Slice</a>&gt; for <a class='struct' href='tendril/tendril/struct.Tendril.html' title='struct tendril::tendril::Tendril'>Tendril</a>&lt;F, A&gt; <span class='where fmt-newline'>where A: <a class='trait' href='tendril/tendril/trait.Atomicity.html' title='trait tendril::tendril::Atomicity'>Atomicity</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;F: <a class='trait' href='tendril/fmt/trait.SliceFormat.html' title='trait tendril::fmt::SliceFormat'>SliceFormat</a></span>","impl&lt;A&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='tendril/tendril/struct.Tendril.html' title='struct tendril::tendril::Tendril'>Tendril</a>&lt;<a class='struct' href='tendril/fmt/struct.UTF8.html' title='struct tendril::fmt::UTF8'>UTF8</a>, A&gt; <span class='where fmt-newline'>where A: <a class='trait' href='tendril/tendril/trait.Atomicity.html' title='trait tendril::tendril::Atomicity'>Atomicity</a></span>","impl&lt;A&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='tendril/tendril/struct.Tendril.html' title='struct tendril::tendril::Tendril'>Tendril</a>&lt;<a class='struct' href='tendril/fmt/struct.UTF8.html' title='struct tendril::fmt::UTF8'>UTF8</a>, A&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a> <span class='where fmt-newline'>where A: <a class='trait' href='tendril/tendril/trait.Atomicity.html' title='trait tendril::tendril::Atomicity'>Atomicity</a></span>","impl&lt;'a, A&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='tendril/tendril/struct.Tendril.html' title='struct tendril::tendril::Tendril'>Tendril</a>&lt;<a class='struct' href='tendril/fmt/struct.UTF8.html' title='struct tendril::fmt::UTF8'>UTF8</a>, A&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a> <span class='where fmt-newline'>where A: <a class='trait' href='tendril/tendril/trait.Atomicity.html' title='trait tendril::tendril::Atomicity'>Atomicity</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='style/restyle_hints/struct.RestyleHint.html' title='struct style::restyle_hints::RestyleHint'>RestyleHint</a>&gt; for <a class='struct' href='style/data/struct.StoredRestyleHint.html' title='struct style::data::StoredRestyleHint'>StoredRestyleHint</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='style/stylesheets/enum.SingleRuleParseError.html' title='enum style::stylesheets::SingleRuleParseError'>SingleRuleParseError</a>&gt; for <a class='enum' href='style/stylesheets/enum.RulesMutateError.html' title='enum style::stylesheets::RulesMutateError'>RulesMutateError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='style/values/computed/length/enum.LengthOrPercentage.html' title='enum style::values::computed::length::LengthOrPercentage'>LengthOrPercentage</a>&gt; for <a class='struct' href='style/values/computed/length/struct.CalcLengthOrPercentage.html' title='struct style::values::computed::length::CalcLengthOrPercentage'>CalcLengthOrPercentage</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='style/values/computed/length/enum.LengthOrPercentageOrAuto.html' title='enum style::values::computed::length::LengthOrPercentageOrAuto'>LengthOrPercentageOrAuto</a>&gt; for <a class='enum' href='core/option/enum.Option.html' title='enum core::option::Option'>Option</a>&lt;<a class='struct' href='style/values/computed/length/struct.CalcLengthOrPercentage.html' title='struct style::values::computed::length::CalcLengthOrPercentage'>CalcLengthOrPercentage</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='style/values/specified/length/enum.NoCalcLength.html' title='enum style::values::specified::length::NoCalcLength'>NoCalcLength</a>&gt; for <a class='enum' href='style/values/specified/length/enum.Length.html' title='enum style::values::specified::length::Length'>Length</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='style/values/specified/length/enum.Length.html' title='enum style::values::specified::length::Length'>Length</a>&gt; for <a class='enum' href='style/values/specified/length/enum.LengthOrPercentage.html' title='enum style::values::specified::length::LengthOrPercentage'>LengthOrPercentage</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='style/values/specified/length/enum.NoCalcLength.html' title='enum style::values::specified::length::NoCalcLength'>NoCalcLength</a>&gt; for <a class='enum' href='style/values/specified/length/enum.LengthOrPercentage.html' title='enum style::values::specified::length::LengthOrPercentage'>LengthOrPercentage</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='style/values/specified/length/struct.Percentage.html' title='struct style::values::specified::length::Percentage'>Percentage</a>&gt; for <a class='enum' href='style/values/specified/length/enum.LengthOrPercentage.html' title='enum style::values::specified::length::LengthOrPercentage'>LengthOrPercentage</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='style/values/specified/length/enum.NoCalcLength.html' title='enum style::values::specified::length::NoCalcLength'>NoCalcLength</a>&gt; for <a class='enum' href='style/values/specified/length/enum.LengthOrPercentageOrAuto.html' title='enum style::values::specified::length::LengthOrPercentageOrAuto'>LengthOrPercentageOrAuto</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='style/values/specified/length/struct.Percentage.html' title='struct style::values::specified::length::Percentage'>Percentage</a>&gt; for <a class='enum' href='style/values/specified/length/enum.LengthOrPercentageOrAuto.html' title='enum style::values::specified::length::LengthOrPercentageOrAuto'>LengthOrPercentageOrAuto</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='style/properties/longhands/background_origin/single_value/computed_value/enum.T.html' title='enum style::properties::longhands::background_origin::single_value::computed_value::T'>T</a>&gt; for <a class='enum' href='style/properties/longhands/background_clip/single_value/computed_value/enum.T.html' title='enum style::properties::longhands::background_clip::single_value::computed_value::T'>T</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='style/properties/longhands/transform/computed_value/struct.ComputedMatrix.html' title='struct style::properties::longhands::transform::computed_value::ComputedMatrix'>ComputedMatrix</a>&gt; for <a class='struct' href='style/properties/animated_properties/struct.MatrixDecomposed2D.html' title='struct style::properties::animated_properties::MatrixDecomposed2D'>MatrixDecomposed2D</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='style/properties/animated_properties/struct.MatrixDecomposed2D.html' title='struct style::properties::animated_properties::MatrixDecomposed2D'>MatrixDecomposed2D</a>&gt; for <a class='struct' href='style/properties/longhands/transform/computed_value/struct.ComputedMatrix.html' title='struct style::properties::longhands::transform::computed_value::ComputedMatrix'>ComputedMatrix</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='style/properties/animated_properties/struct.MatrixDecomposed3D.html' title='struct style::properties::animated_properties::MatrixDecomposed3D'>MatrixDecomposed3D</a>&gt; for <a class='struct' href='style/properties/longhands/transform/computed_value/struct.ComputedMatrix.html' title='struct style::properties::longhands::transform::computed_value::ComputedMatrix'>ComputedMatrix</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='ogg_metadata/enum.OggMetadataError.html' title='enum ogg_metadata::OggMetadataError'>OggMetadataError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='ogg/enum.OggReadError.html' title='enum ogg::OggReadError'>OggReadError</a>&gt; for <a class='enum' href='ogg_metadata/enum.OggMetadataError.html' title='enum ogg_metadata::OggMetadataError'>OggMetadataError</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt;","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='struct std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt;","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='struct std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/io/error/enum.ErrorKind.html' title='enum std::io::error::ErrorKind'>ErrorKind</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='primitive' href='std/primitive.u128.html'>u128</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u128.html'>u128</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV4.html' title='struct std::net::addr::SocketAddrV4'>SocketAddrV4</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV6.html' title='struct std::net::addr::SocketAddrV6'>SocketAddrV6</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl&lt;I&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>I, <a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a> <span class='where fmt-newline'>where I: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='struct std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='enum std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='audio_video_metadata/enums/enum.AudioType.html' title='enum audio_video_metadata::enums::AudioType'>AudioType</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='audio_video_metadata/enums/enum.VideoType.html' title='enum audio_video_metadata::enums::VideoType'>VideoType</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='audio_video_metadata/types/struct.AudioMetadata.html' title='struct audio_video_metadata::types::AudioMetadata'>AudioMetadata</a>&gt; for <a class='enum' href='audio_video_metadata/enums/enum.Metadata.html' title='enum audio_video_metadata::enums::Metadata'>Metadata</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='audio_video_metadata/types/struct.VideoMetadata.html' title='struct audio_video_metadata::types::VideoMetadata'>VideoMetadata</a>&gt; for <a class='enum' href='audio_video_metadata/enums/enum.Metadata.html' title='enum audio_video_metadata::enums::Metadata'>Metadata</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='websocket/result/enum.WebSocketError.html' title='enum websocket::result::WebSocketError'>WebSocketError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>&gt; for <a class='enum' href='websocket/result/enum.WebSocketError.html' title='enum websocket::result::WebSocketError'>WebSocketError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='url/parser/enum.ParseError.html' title='enum url::parser::ParseError'>ParseError</a>&gt; for <a class='enum' href='websocket/result/enum.WebSocketError.html' title='enum websocket::result::WebSocketError'>WebSocketError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='openssl/ssl/error/enum.SslError.html' title='enum openssl::ssl::error::SslError'>SslError</a>&gt; for <a class='enum' href='websocket/result/enum.WebSocketError.html' title='enum websocket::result::WebSocketError'>WebSocketError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='core/str/struct.Utf8Error.html' title='struct core::str::Utf8Error'>Utf8Error</a>&gt; for <a class='enum' href='websocket/result/enum.WebSocketError.html' title='enum websocket::result::WebSocketError'>WebSocketError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='websocket/result/enum.WSUrlErrorKind.html' title='enum websocket::result::WSUrlErrorKind'>WSUrlErrorKind</a>&gt; for <a class='enum' href='websocket/result/enum.WebSocketError.html' title='enum websocket::result::WebSocketError'>WebSocketError</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='trait core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>: <a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>ToOwned</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>::<a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>Owned</a> == <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='png/decoder/stream/enum.DecodingError.html' title='enum png::decoder::stream::DecodingError'>DecodingError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='png/decoder/stream/enum.DecodingError.html' title='enum png::decoder::stream::DecodingError'>DecodingError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='png/decoder/stream/enum.DecodingError.html' title='enum png::decoder::stream::DecodingError'>DecodingError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='png/encoder/enum.EncodingError.html' title='enum png::encoder::EncodingError'>EncodingError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='png/encoder/enum.EncodingError.html' title='enum png::encoder::EncodingError'>EncodingError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='bitreader/enum.BitReaderError.html' title='enum bitreader::BitReaderError'>BitReaderError</a>&gt; for <a class='enum' href='mp4parse/enum.Error.html' title='enum mp4parse::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='mp4parse/enum.Error.html' title='enum mp4parse::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.FromUtf8Error.html' title='struct collections::string::FromUtf8Error'>FromUtf8Error</a>&gt; for <a class='enum' href='mp4parse/enum.Error.html' title='enum mp4parse::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='gif/reader/decoder/enum.DecodingError.html' title='enum gif::reader::decoder::DecodingError'>DecodingError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a><a class='enum' href='png/common/enum.ColorType.html' title='enum png::common::ColorType'>ColorType</a>, <a class='enum' href='png/common/enum.BitDepth.html' title='enum png::common::BitDepth'>BitDepth</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='image/color/enum.ColorType.html' title='enum image::color::ColorType'>ColorType</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='image/color/enum.ColorType.html' title='enum image::color::ColorType'>ColorType</a>&gt; for <a class='primitive' href='std/primitive.tuple.html'>(</a><a class='enum' href='png/common/enum.ColorType.html' title='enum png::common::ColorType'>ColorType</a>, <a class='enum' href='png/common/enum.BitDepth.html' title='enum png::common::BitDepth'>BitDepth</a><a class='primitive' href='std/primitive.tuple.html'>)</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='png/decoder/stream/enum.DecodingError.html' title='enum png::decoder::stream::DecodingError'>DecodingError</a>&gt; for <a class='enum' href='image/image/enum.ImageError.html' title='enum image::image::ImageError'>ImageError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='jpeg_decoder/decoder/enum.PixelFormat.html' title='enum jpeg_decoder::decoder::PixelFormat'>PixelFormat</a>&gt; for <a class='enum' href='image/color/enum.ColorType.html' title='enum image::color::ColorType'>ColorType</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='jpeg_decoder/error/enum.Error.html' title='enum jpeg_decoder::error::Error'>Error</a>&gt; for <a class='enum' href='image/image/enum.ImageError.html' title='enum image::image::ImageError'>ImageError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='gif/reader/decoder/enum.DecodingError.html' title='enum gif::reader::decoder::DecodingError'>DecodingError</a>&gt; for <a class='enum' href='image/image/enum.ImageError.html' title='enum image::image::ImageError'>ImageError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='image/image/enum.ImageError.html' title='enum image::image::ImageError'>ImageError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;UnixError&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='enum' href='bincode/serde/enum.ErrorKind.html' title='enum bincode::serde::ErrorKind'>ErrorKind</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;UnixError&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XAnyEvent.html' title='struct x11::xlib::XAnyEvent'>XAnyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XAnyEvent.html' title='struct x11::xlib::XAnyEvent'>XAnyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XAnyEvent.html' title='struct x11::xlib::XAnyEvent'>XAnyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XAnyEvent.html' title='struct x11::xlib::XAnyEvent'>XAnyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XButtonEvent.html' title='struct x11::xlib::XButtonEvent'>XButtonEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XButtonEvent.html' title='struct x11::xlib::XButtonEvent'>XButtonEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XButtonEvent.html' title='struct x11::xlib::XButtonEvent'>XButtonEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XButtonEvent.html' title='struct x11::xlib::XButtonEvent'>XButtonEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XCirculateEvent.html' title='struct x11::xlib::XCirculateEvent'>XCirculateEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XCirculateEvent.html' title='struct x11::xlib::XCirculateEvent'>XCirculateEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCirculateEvent.html' title='struct x11::xlib::XCirculateEvent'>XCirculateEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCirculateEvent.html' title='struct x11::xlib::XCirculateEvent'>XCirculateEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XCirculateRequestEvent.html' title='struct x11::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XCirculateRequestEvent.html' title='struct x11::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCirculateRequestEvent.html' title='struct x11::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCirculateRequestEvent.html' title='struct x11::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XClientMessageEvent.html' title='struct x11::xlib::XClientMessageEvent'>XClientMessageEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XClientMessageEvent.html' title='struct x11::xlib::XClientMessageEvent'>XClientMessageEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XClientMessageEvent.html' title='struct x11::xlib::XClientMessageEvent'>XClientMessageEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XClientMessageEvent.html' title='struct x11::xlib::XClientMessageEvent'>XClientMessageEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XColormapEvent.html' title='struct x11::xlib::XColormapEvent'>XColormapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XColormapEvent.html' title='struct x11::xlib::XColormapEvent'>XColormapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XColormapEvent.html' title='struct x11::xlib::XColormapEvent'>XColormapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XColormapEvent.html' title='struct x11::xlib::XColormapEvent'>XColormapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XConfigureEvent.html' title='struct x11::xlib::XConfigureEvent'>XConfigureEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XConfigureEvent.html' title='struct x11::xlib::XConfigureEvent'>XConfigureEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XConfigureEvent.html' title='struct x11::xlib::XConfigureEvent'>XConfigureEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XConfigureEvent.html' title='struct x11::xlib::XConfigureEvent'>XConfigureEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XConfigureRequestEvent.html' title='struct x11::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XConfigureRequestEvent.html' title='struct x11::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XConfigureRequestEvent.html' title='struct x11::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XConfigureRequestEvent.html' title='struct x11::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XCreateWindowEvent.html' title='struct x11::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XCreateWindowEvent.html' title='struct x11::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCreateWindowEvent.html' title='struct x11::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCreateWindowEvent.html' title='struct x11::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XCrossingEvent.html' title='struct x11::xlib::XCrossingEvent'>XCrossingEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XCrossingEvent.html' title='struct x11::xlib::XCrossingEvent'>XCrossingEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCrossingEvent.html' title='struct x11::xlib::XCrossingEvent'>XCrossingEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCrossingEvent.html' title='struct x11::xlib::XCrossingEvent'>XCrossingEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XDestroyWindowEvent.html' title='struct x11::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XDestroyWindowEvent.html' title='struct x11::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XDestroyWindowEvent.html' title='struct x11::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XDestroyWindowEvent.html' title='struct x11::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XErrorEvent.html' title='struct x11::xlib::XErrorEvent'>XErrorEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XErrorEvent.html' title='struct x11::xlib::XErrorEvent'>XErrorEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XErrorEvent.html' title='struct x11::xlib::XErrorEvent'>XErrorEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XErrorEvent.html' title='struct x11::xlib::XErrorEvent'>XErrorEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XExposeEvent.html' title='struct x11::xlib::XExposeEvent'>XExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XExposeEvent.html' title='struct x11::xlib::XExposeEvent'>XExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XExposeEvent.html' title='struct x11::xlib::XExposeEvent'>XExposeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XExposeEvent.html' title='struct x11::xlib::XExposeEvent'>XExposeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XFocusChangeEvent.html' title='struct x11::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XFocusChangeEvent.html' title='struct x11::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XFocusChangeEvent.html' title='struct x11::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XFocusChangeEvent.html' title='struct x11::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XGenericEventCookie.html' title='struct x11::xlib::XGenericEventCookie'>XGenericEventCookie</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XGenericEventCookie.html' title='struct x11::xlib::XGenericEventCookie'>XGenericEventCookie</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGenericEventCookie.html' title='struct x11::xlib::XGenericEventCookie'>XGenericEventCookie</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGenericEventCookie.html' title='struct x11::xlib::XGenericEventCookie'>XGenericEventCookie</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XGraphicsExposeEvent.html' title='struct x11::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XGraphicsExposeEvent.html' title='struct x11::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGraphicsExposeEvent.html' title='struct x11::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGraphicsExposeEvent.html' title='struct x11::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XGravityEvent.html' title='struct x11::xlib::XGravityEvent'>XGravityEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XGravityEvent.html' title='struct x11::xlib::XGravityEvent'>XGravityEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGravityEvent.html' title='struct x11::xlib::XGravityEvent'>XGravityEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGravityEvent.html' title='struct x11::xlib::XGravityEvent'>XGravityEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XKeyEvent.html' title='struct x11::xlib::XKeyEvent'>XKeyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XKeyEvent.html' title='struct x11::xlib::XKeyEvent'>XKeyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XKeyEvent.html' title='struct x11::xlib::XKeyEvent'>XKeyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XKeyEvent.html' title='struct x11::xlib::XKeyEvent'>XKeyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XKeymapEvent.html' title='struct x11::xlib::XKeymapEvent'>XKeymapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XKeymapEvent.html' title='struct x11::xlib::XKeymapEvent'>XKeymapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XKeymapEvent.html' title='struct x11::xlib::XKeymapEvent'>XKeymapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XKeymapEvent.html' title='struct x11::xlib::XKeymapEvent'>XKeymapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XMapEvent.html' title='struct x11::xlib::XMapEvent'>XMapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XMapEvent.html' title='struct x11::xlib::XMapEvent'>XMapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMapEvent.html' title='struct x11::xlib::XMapEvent'>XMapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMapEvent.html' title='struct x11::xlib::XMapEvent'>XMapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XMappingEvent.html' title='struct x11::xlib::XMappingEvent'>XMappingEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XMappingEvent.html' title='struct x11::xlib::XMappingEvent'>XMappingEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMappingEvent.html' title='struct x11::xlib::XMappingEvent'>XMappingEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMappingEvent.html' title='struct x11::xlib::XMappingEvent'>XMappingEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XMapRequestEvent.html' title='struct x11::xlib::XMapRequestEvent'>XMapRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XMapRequestEvent.html' title='struct x11::xlib::XMapRequestEvent'>XMapRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMapRequestEvent.html' title='struct x11::xlib::XMapRequestEvent'>XMapRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMapRequestEvent.html' title='struct x11::xlib::XMapRequestEvent'>XMapRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XMotionEvent.html' title='struct x11::xlib::XMotionEvent'>XMotionEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XMotionEvent.html' title='struct x11::xlib::XMotionEvent'>XMotionEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMotionEvent.html' title='struct x11::xlib::XMotionEvent'>XMotionEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMotionEvent.html' title='struct x11::xlib::XMotionEvent'>XMotionEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XNoExposeEvent.html' title='struct x11::xlib::XNoExposeEvent'>XNoExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XNoExposeEvent.html' title='struct x11::xlib::XNoExposeEvent'>XNoExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XNoExposeEvent.html' title='struct x11::xlib::XNoExposeEvent'>XNoExposeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XNoExposeEvent.html' title='struct x11::xlib::XNoExposeEvent'>XNoExposeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XPropertyEvent.html' title='struct x11::xlib::XPropertyEvent'>XPropertyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XPropertyEvent.html' title='struct x11::xlib::XPropertyEvent'>XPropertyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XPropertyEvent.html' title='struct x11::xlib::XPropertyEvent'>XPropertyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XPropertyEvent.html' title='struct x11::xlib::XPropertyEvent'>XPropertyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XReparentEvent.html' title='struct x11::xlib::XReparentEvent'>XReparentEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XReparentEvent.html' title='struct x11::xlib::XReparentEvent'>XReparentEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XReparentEvent.html' title='struct x11::xlib::XReparentEvent'>XReparentEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XReparentEvent.html' title='struct x11::xlib::XReparentEvent'>XReparentEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XResizeRequestEvent.html' title='struct x11::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XResizeRequestEvent.html' title='struct x11::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XResizeRequestEvent.html' title='struct x11::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XResizeRequestEvent.html' title='struct x11::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XSelectionClearEvent.html' title='struct x11::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XSelectionClearEvent.html' title='struct x11::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionClearEvent.html' title='struct x11::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionClearEvent.html' title='struct x11::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XSelectionEvent.html' title='struct x11::xlib::XSelectionEvent'>XSelectionEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XSelectionEvent.html' title='struct x11::xlib::XSelectionEvent'>XSelectionEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionEvent.html' title='struct x11::xlib::XSelectionEvent'>XSelectionEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionEvent.html' title='struct x11::xlib::XSelectionEvent'>XSelectionEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XSelectionRequestEvent.html' title='struct x11::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XSelectionRequestEvent.html' title='struct x11::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionRequestEvent.html' title='struct x11::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionRequestEvent.html' title='struct x11::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XUnmapEvent.html' title='struct x11::xlib::XUnmapEvent'>XUnmapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XUnmapEvent.html' title='struct x11::xlib::XUnmapEvent'>XUnmapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XUnmapEvent.html' title='struct x11::xlib::XUnmapEvent'>XUnmapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XUnmapEvent.html' title='struct x11::xlib::XUnmapEvent'>XUnmapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XVisibilityEvent.html' title='struct x11::xlib::XVisibilityEvent'>XVisibilityEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XVisibilityEvent.html' title='struct x11::xlib::XVisibilityEvent'>XVisibilityEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XVisibilityEvent.html' title='struct x11::xlib::XVisibilityEvent'>XVisibilityEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XVisibilityEvent.html' title='struct x11::xlib::XVisibilityEvent'>XVisibilityEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.i8.html'>i8</a><a class='primitive' href='std/primitive.array.html'>; 20]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 20]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.i16.html'>i16</a><a class='primitive' href='std/primitive.array.html'>; 10]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 10]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.i64.html'>i64</a><a class='primitive' href='std/primitive.array.html'>; 5]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u64.html'>u64</a><a class='primitive' href='std/primitive.array.html'>; 5]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xf86vmode/struct.XF86VidModeNotifyEvent.html' title='struct x11::xf86vmode::XF86VidModeNotifyEvent'>XF86VidModeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xf86vmode/struct.XF86VidModeNotifyEvent.html' title='struct x11::xf86vmode::XF86VidModeNotifyEvent'>XF86VidModeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xf86vmode/struct.XF86VidModeNotifyEvent.html' title='struct x11::xf86vmode::XF86VidModeNotifyEvent'>XF86VidModeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xf86vmode/struct.XF86VidModeNotifyEvent.html' title='struct x11::xf86vmode::XF86VidModeNotifyEvent'>XF86VidModeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRScreenChangeNotifyEvent.html' title='struct x11::xrandr::XRRScreenChangeNotifyEvent'>XRRScreenChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRScreenChangeNotifyEvent.html' title='struct x11::xrandr::XRRScreenChangeNotifyEvent'>XRRScreenChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRScreenChangeNotifyEvent.html' title='struct x11::xrandr::XRRScreenChangeNotifyEvent'>XRRScreenChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRScreenChangeNotifyEvent.html' title='struct x11::xrandr::XRRScreenChangeNotifyEvent'>XRRScreenChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRNotifyEvent.html' title='struct x11::xrandr::XRRNotifyEvent'>XRRNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRNotifyEvent.html' title='struct x11::xrandr::XRRNotifyEvent'>XRRNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRNotifyEvent.html' title='struct x11::xrandr::XRRNotifyEvent'>XRRNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRNotifyEvent.html' title='struct x11::xrandr::XRRNotifyEvent'>XRRNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRROutputChangeNotifyEvent.html' title='struct x11::xrandr::XRROutputChangeNotifyEvent'>XRROutputChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRROutputChangeNotifyEvent.html' title='struct x11::xrandr::XRROutputChangeNotifyEvent'>XRROutputChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRROutputChangeNotifyEvent.html' title='struct x11::xrandr::XRROutputChangeNotifyEvent'>XRROutputChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRROutputChangeNotifyEvent.html' title='struct x11::xrandr::XRROutputChangeNotifyEvent'>XRROutputChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRCrtcChangeNotifyEvent.html' title='struct x11::xrandr::XRRCrtcChangeNotifyEvent'>XRRCrtcChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRCrtcChangeNotifyEvent.html' title='struct x11::xrandr::XRRCrtcChangeNotifyEvent'>XRRCrtcChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRCrtcChangeNotifyEvent.html' title='struct x11::xrandr::XRRCrtcChangeNotifyEvent'>XRRCrtcChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRCrtcChangeNotifyEvent.html' title='struct x11::xrandr::XRRCrtcChangeNotifyEvent'>XRRCrtcChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRROutputPropertyNotifyEvent.html' title='struct x11::xrandr::XRROutputPropertyNotifyEvent'>XRROutputPropertyNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRROutputPropertyNotifyEvent.html' title='struct x11::xrandr::XRROutputPropertyNotifyEvent'>XRROutputPropertyNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRROutputPropertyNotifyEvent.html' title='struct x11::xrandr::XRROutputPropertyNotifyEvent'>XRROutputPropertyNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRROutputPropertyNotifyEvent.html' title='struct x11::xrandr::XRROutputPropertyNotifyEvent'>XRROutputPropertyNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRProviderChangeNotifyEvent.html' title='struct x11::xrandr::XRRProviderChangeNotifyEvent'>XRRProviderChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRProviderChangeNotifyEvent.html' title='struct x11::xrandr::XRRProviderChangeNotifyEvent'>XRRProviderChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRProviderChangeNotifyEvent.html' title='struct x11::xrandr::XRRProviderChangeNotifyEvent'>XRRProviderChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRProviderChangeNotifyEvent.html' title='struct x11::xrandr::XRRProviderChangeNotifyEvent'>XRRProviderChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRProviderPropertyNotifyEvent.html' title='struct x11::xrandr::XRRProviderPropertyNotifyEvent'>XRRProviderPropertyNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRProviderPropertyNotifyEvent.html' title='struct x11::xrandr::XRRProviderPropertyNotifyEvent'>XRRProviderPropertyNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRProviderPropertyNotifyEvent.html' title='struct x11::xrandr::XRRProviderPropertyNotifyEvent'>XRRProviderPropertyNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRProviderPropertyNotifyEvent.html' title='struct x11::xrandr::XRRProviderPropertyNotifyEvent'>XRRProviderPropertyNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRResourceChangeNotifyEvent.html' title='struct x11::xrandr::XRRResourceChangeNotifyEvent'>XRRResourceChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRResourceChangeNotifyEvent.html' title='struct x11::xrandr::XRRResourceChangeNotifyEvent'>XRRResourceChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRResourceChangeNotifyEvent.html' title='struct x11::xrandr::XRRResourceChangeNotifyEvent'>XRRResourceChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRResourceChangeNotifyEvent.html' title='struct x11::xrandr::XRRResourceChangeNotifyEvent'>XRRResourceChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xss/struct.XScreenSaverNotifyEvent.html' title='struct x11::xss::XScreenSaverNotifyEvent'>XScreenSaverNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xss/struct.XScreenSaverNotifyEvent.html' title='struct x11::xss::XScreenSaverNotifyEvent'>XScreenSaverNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xss/struct.XScreenSaverNotifyEvent.html' title='struct x11::xss::XScreenSaverNotifyEvent'>XScreenSaverNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xss/struct.XScreenSaverNotifyEvent.html' title='struct x11::xss::XScreenSaverNotifyEvent'>XScreenSaverNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='rustc_serialize/json/enum.ParserError.html' title='enum rustc_serialize::json::ParserError'>ParserError</a>&gt; for <a class='enum' href='rustc_serialize/json/enum.DecoderError.html' title='enum rustc_serialize::json::DecoderError'>DecoderError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='rustc_serialize/json/enum.ParserError.html' title='enum rustc_serialize::json::ParserError'>ParserError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='core/fmt/struct.Error.html' title='struct core::fmt::Error'>Error</a>&gt; for <a class='enum' href='rustc_serialize/json/enum.EncoderError.html' title='enum rustc_serialize::json::EncoderError'>EncoderError</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='struct alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='struct alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='deflate/compression_options/enum.Compression.html' title='enum deflate::compression_options::Compression'>Compression</a>&gt; for <a class='struct' href='deflate/compression_options/struct.CompressionOptions.html' title='struct deflate::compression_options::CompressionOptions'>CompressionOptions</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;HuffmanError&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;Specificity&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='script/dom/bindings/str/struct.DOMString.html' title='struct script::dom::bindings::str::DOMString'>DOMString</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='script/dom/bindings/str/struct.DOMString.html' title='struct script::dom::bindings::str::DOMString'>DOMString</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='script/dom/bindings/str/struct.DOMString.html' title='struct script::dom::bindings::str::DOMString'>DOMString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='script/dom/bindings/str/struct.DOMString.html' title='struct script::dom::bindings::str::DOMString'>DOMString</a>&gt; for <a class='type' href='html5ever_atoms/type.LocalName.html' title='type html5ever_atoms::LocalName'>LocalName</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='script/dom/bindings/str/struct.DOMString.html' title='struct script::dom::bindings::str::DOMString'>DOMString</a>&gt; for <a class='type' href='html5ever_atoms/type.Namespace.html' title='type html5ever_atoms::Namespace'>Namespace</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='script/dom/bindings/str/struct.DOMString.html' title='struct script::dom::bindings::str::DOMString'>DOMString</a>&gt; for <a class='type' href='servo_atoms/type.Atom.html' title='type servo_atoms::Atom'>Atom</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='script/dom/bindings/str/struct.DOMString.html' title='struct script::dom::bindings::str::DOMString'>DOMString</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='bluetooth_traits/enum.BluetoothError.html' title='enum bluetooth_traits::BluetoothError'>BluetoothError</a>&gt; for <a class='enum' href='script/dom/bindings/error/enum.Error.html' title='enum script::dom::bindings::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='style/stylesheets/enum.RulesMutateError.html' title='enum style::stylesheets::RulesMutateError'>RulesMutateError</a>&gt; for <a class='enum' href='script/dom/bindings/error/enum.Error.html' title='enum script::dom::bindings::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.bool.html'>bool</a>&gt; for <a class='enum' href='script/dom/event/enum.EventBubbles.html' title='enum script::dom::event::EventBubbles'>EventBubbles</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='script/dom/event/enum.EventBubbles.html' title='enum script::dom::event::EventBubbles'>EventBubbles</a>&gt; for <a class='primitive' href='std/primitive.bool.html'>bool</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.bool.html'>bool</a>&gt; for <a class='enum' href='script/dom/event/enum.EventCancelable.html' title='enum script::dom::event::EventCancelable'>EventCancelable</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='script/dom/event/enum.EventCancelable.html' title='enum script::dom::event::EventCancelable'>EventCancelable</a>&gt; for <a class='primitive' href='std/primitive.bool.html'>bool</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='script/dom/bindings/codegen/Bindings/WebGLRenderingContextBinding/struct.WebGLContextAttributes.html' title='struct script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::WebGLContextAttributes'>WebGLContextAttributes</a>&gt; for <a class='struct' href='offscreen_gl_context/gl_context_attributes/struct.GLContextAttributes.html' title='struct offscreen_gl_context::gl_context_attributes::GLContextAttributes'>GLContextAttributes</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='script/dom/bindings/str/struct.DOMString.html' title='struct script::dom::bindings::str::DOMString'>DOMString</a>&gt; for <a class='enum' href='script/textinput/enum.SelectionDirection.html' title='enum script::textinput::SelectionDirection'>SelectionDirection</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='script/textinput/enum.SelectionDirection.html' title='enum script::textinput::SelectionDirection'>SelectionDirection</a>&gt; for <a class='struct' href='script/dom/bindings/str/struct.DOMString.html' title='struct script::dom::bindings::str::DOMString'>DOMString</a>",];
implementors["selectors"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='selectors/parser/struct.Specificity.html' title='struct selectors::parser::Specificity'>Specificity</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='selectors/parser/struct.Specificity.html' title='struct selectors::parser::Specificity'>Specificity</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>",];
implementors["serde"] = ["impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='serde/core/marker/trait.Copy.html' title='trait serde::core::marker::Copy'>Copy</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='struct alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='struct alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='serde/core/marker/trait.Send.html' title='trait serde::core::marker::Send'>Send</a> + <a class='trait' href='serde/core/marker/trait.Sync.html' title='trait serde::core::marker::Sync'>Sync</a>&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='serde/core/marker/trait.Send.html' title='trait serde::core::marker::Send'>Send</a> + <a class='trait' href='serde/core/marker/trait.Sync.html' title='trait serde::core::marker::Sync'>Sync</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static + <a class='trait' href='serde/core/marker/trait.Send.html' title='trait serde::core::marker::Send'>Send</a> + <a class='trait' href='serde/core/marker/trait.Sync.html' title='trait serde::core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='serde/core/marker/trait.Send.html' title='trait serde::core::marker::Send'>Send</a> + <a class='trait' href='serde/core/marker/trait.Sync.html' title='trait serde::core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='struct std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='serde/core/marker/trait.Sized.html' title='trait serde::core::marker::Sized'>Sized</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt;","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='struct std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/io/error/enum.ErrorKind.html' title='enum std::io::error::ErrorKind'>ErrorKind</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='primitive' href='std/primitive.u128.html'>u128</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u128.html'>u128</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV4.html' title='struct std::net::addr::SocketAddrV4'>SocketAddrV4</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV6.html' title='struct std::net::addr::SocketAddrV6'>SocketAddrV6</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl&lt;I&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>I, <a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a> <span class='where fmt-newline'>where I: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='serde/core/marker/trait.Sized.html' title='trait serde::core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='struct std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='enum std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='serde/core/cmp/trait.Ord.html' title='trait serde::core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>: <a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>ToOwned</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>::<a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>Owned</a> == <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;&gt; for <a class='struct' href='serde/bytes/struct.ByteBuf.html' title='struct serde::bytes::ByteBuf'>ByteBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for <a class='struct' href='serde/bytes/struct.Bytes.html' title='struct serde::bytes::Bytes'>Bytes</a>&lt;'a&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;&gt; for <a class='struct' href='serde/bytes/struct.Bytes.html' title='struct serde::bytes::Bytes'>Bytes</a>&lt;'a&gt;",];
implementors["serde_json"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='serde_json/error/enum.ErrorImpl.html' title='enum serde_json::error::ErrorImpl'>ErrorImpl</a>&gt; for <a class='struct' href='serde_json/error/struct.Error.html' title='struct serde_json::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='struct' href='serde_json/error/struct.Error.html' title='struct serde_json::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='serde/de/value/struct.Error.html' title='struct serde::de::value::Error'>Error</a>&gt; for <a class='struct' href='serde_json/error/struct.Error.html' title='struct serde_json::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.i8.html'>i8</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.i16.html'>i16</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.i32.html'>i32</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.i64.html'>i64</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.isize.html'>isize</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u16.html'>u16</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u64.html'>u64</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.usize.html'>usize</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.f32.html'>f32</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.f64.html'>f64</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.bool.html'>bool</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='serde_json/struct.Map.html' title='struct serde_json::Map'>Map</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>, <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>&gt;&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl&lt;T:&nbsp;<a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>&gt;&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl&lt;'a, T:&nbsp;<a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a> + <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>&gt;&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.i8.html'>i8</a>&gt; for <a class='struct' href='serde_json/struct.Number.html' title='struct serde_json::Number'>Number</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.i16.html'>i16</a>&gt; for <a class='struct' href='serde_json/struct.Number.html' title='struct serde_json::Number'>Number</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.i32.html'>i32</a>&gt; for <a class='struct' href='serde_json/struct.Number.html' title='struct serde_json::Number'>Number</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.i64.html'>i64</a>&gt; for <a class='struct' href='serde_json/struct.Number.html' title='struct serde_json::Number'>Number</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.isize.html'>isize</a>&gt; for <a class='struct' href='serde_json/struct.Number.html' title='struct serde_json::Number'>Number</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt; for <a class='struct' href='serde_json/struct.Number.html' title='struct serde_json::Number'>Number</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u16.html'>u16</a>&gt; for <a class='struct' href='serde_json/struct.Number.html' title='struct serde_json::Number'>Number</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='serde_json/struct.Number.html' title='struct serde_json::Number'>Number</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u64.html'>u64</a>&gt; for <a class='struct' href='serde_json/struct.Number.html' title='struct serde_json::Number'>Number</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.usize.html'>usize</a>&gt; for <a class='struct' href='serde_json/struct.Number.html' title='struct serde_json::Number'>Number</a>",];
implementors["servo"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt; for <a class='enum' href='mp3_metadata/enums/enum.Version.html' title='enum mp3_metadata::enums::Version'>Version</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt; for <a class='enum' href='mp3_metadata/enums/enum.Layer.html' title='enum mp3_metadata::enums::Layer'>Layer</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt; for <a class='enum' href='mp3_metadata/enums/enum.CRC.html' title='enum mp3_metadata::enums::CRC'>CRC</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt; for <a class='enum' href='mp3_metadata/enums/enum.ChannelType.html' title='enum mp3_metadata::enums::ChannelType'>ChannelType</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt; for <a class='enum' href='mp3_metadata/enums/enum.Copyright.html' title='enum mp3_metadata::enums::Copyright'>Copyright</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt; for <a class='enum' href='mp3_metadata/enums/enum.Status.html' title='enum mp3_metadata::enums::Status'>Status</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt; for <a class='enum' href='mp3_metadata/enums/enum.Emphasis.html' title='enum mp3_metadata::enums::Emphasis'>Emphasis</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='mp3_metadata/enums/enum.Genre.html' title='enum mp3_metadata::enums::Genre'>Genre</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt; for <a class='enum' href='mp3_metadata/enums/enum.Genre.html' title='enum mp3_metadata::enums::Genre'>Genre</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='idna/uts46/struct.Errors.html' title='struct idna::uts46::Errors'>Errors</a>&gt; for <a class='enum' href='url/parser/enum.ParseError.html' title='enum url::parser::ParseError'>ParseError</a>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='url/percent_encoding/struct.PercentEncode.html' title='struct url::percent_encoding::PercentEncode'>PercentEncode</a>&lt;'a, E&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt; <span class='where fmt-newline'>where E: <a class='trait' href='url/percent_encoding/trait.EncodeSet.html' title='trait url::percent_encoding::EncodeSet'>EncodeSet</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='url/percent_encoding/struct.PercentDecode.html' title='struct url::percent_encoding::PercentDecode'>PercentDecode</a>&lt;'a&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='enum' href='bincode/serde/enum.ErrorKind.html' title='enum bincode::serde::ErrorKind'>ErrorKind</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='openssl/ssl/error/enum.SslError.html' title='enum openssl::ssl::error::SslError'>SslError</a>&gt; for <a class='enum' href='openssl/ssl/error/enum.NonblockingSslError.html' title='enum openssl::ssl::error::NonblockingSslError'>NonblockingSslError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='regex_syntax/struct.Error.html' title='struct regex_syntax::Error'>Error</a>&gt; for <a class='enum' href='regex/error/enum.Error.html' title='enum regex::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;Exec&gt; for <a class='struct' href='regex/re_bytes/struct.Regex.html' title='struct regex::re_bytes::Regex'>Regex</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;Exec&gt; for <a class='struct' href='regex/re_unicode/struct.Regex.html' title='struct regex::re_unicode::Regex'>Regex</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;Exec&gt; for <a class='struct' href='regex/re_set/unicode/struct.RegexSet.html' title='struct regex::re_set::unicode::RegexSet'>RegexSet</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;Exec&gt; for <a class='struct' href='regex/re_set/bytes/struct.RegexSet.html' title='struct regex::re_set::bytes::RegexSet'>RegexSet</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='rustc_serialize/json/enum.ParserError.html' title='enum rustc_serialize::json::ParserError'>ParserError</a>&gt; for <a class='enum' href='rustc_serialize/json/enum.DecoderError.html' title='enum rustc_serialize::json::DecoderError'>DecoderError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='rustc_serialize/json/enum.ParserError.html' title='enum rustc_serialize::json::ParserError'>ParserError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='core/fmt/struct.Error.html' title='struct core::fmt::Error'>Error</a>&gt; for <a class='enum' href='rustc_serialize/json/enum.EncoderError.html' title='enum rustc_serialize::json::EncoderError'>EncoderError</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='atomic_refcell/struct.AtomicRefCell.html' title='struct atomic_refcell::AtomicRefCell'>AtomicRefCell</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='script/dom/bindings/str/struct.DOMString.html' title='struct script::dom::bindings::str::DOMString'>DOMString</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='script/dom/bindings/str/struct.DOMString.html' title='struct script::dom::bindings::str::DOMString'>DOMString</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='script/dom/bindings/str/struct.DOMString.html' title='struct script::dom::bindings::str::DOMString'>DOMString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='script/dom/bindings/str/struct.DOMString.html' title='struct script::dom::bindings::str::DOMString'>DOMString</a>&gt; for <a class='struct' href='string_cache/atom/struct.Atom.html' title='struct string_cache::atom::Atom'>Atom</a>&lt;<a class='struct' href='html5ever_atoms/struct.LocalNameStaticSet.html' title='struct html5ever_atoms::LocalNameStaticSet'>LocalNameStaticSet</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='script/dom/bindings/str/struct.DOMString.html' title='struct script::dom::bindings::str::DOMString'>DOMString</a>&gt; for <a class='struct' href='string_cache/atom/struct.Atom.html' title='struct string_cache::atom::Atom'>Atom</a>&lt;<a class='struct' href='html5ever_atoms/struct.NamespaceStaticSet.html' title='struct html5ever_atoms::NamespaceStaticSet'>NamespaceStaticSet</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='script/dom/bindings/str/struct.DOMString.html' title='struct script::dom::bindings::str::DOMString'>DOMString</a>&gt; for <a class='struct' href='string_cache/atom/struct.Atom.html' title='struct string_cache::atom::Atom'>Atom</a>&lt;<a class='struct' href='servo_atoms/struct.AtomStaticSet.html' title='struct servo_atoms::AtomStaticSet'>AtomStaticSet</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='script/dom/bindings/str/struct.DOMString.html' title='struct script::dom::bindings::str::DOMString'>DOMString</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;EventBubbles&gt; for <a class='primitive' href='std/primitive.bool.html'>bool</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;EventCancelable&gt; for <a class='primitive' href='std/primitive.bool.html'>bool</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a WebGLContextAttributes&gt; for <a class='struct' href='offscreen_gl_context/gl_context_attributes/struct.GLContextAttributes.html' title='struct offscreen_gl_context::gl_context_attributes::GLContextAttributes'>GLContextAttributes</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='script/dom/bindings/str/struct.DOMString.html' title='struct script::dom::bindings::str::DOMString'>DOMString</a>&gt; for <a class='enum' href='script/textinput/enum.SelectionDirection.html' title='enum script::textinput::SelectionDirection'>SelectionDirection</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='script/textinput/enum.SelectionDirection.html' title='enum script::textinput::SelectionDirection'>SelectionDirection</a>&gt; for <a class='struct' href='script/dom/bindings/str/struct.DOMString.html' title='struct script::dom::bindings::str::DOMString'>DOMString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;Error&gt; for <a class='primitive' href='std/primitive.tuple.html'>()</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;NullError&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='libloading/os/unix/struct.Library.html' title='struct libloading::os::unix::Library'>Library</a>&gt; for <a class='struct' href='libloading/struct.Library.html' title='struct libloading::Library'>Library</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='libloading/struct.Library.html' title='struct libloading::Library'>Library</a>&gt; for <a class='struct' href='libloading/os/unix/struct.Library.html' title='struct libloading::os::unix::Library'>Library</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='dbus/message/enum.MessageItem.html' title='enum dbus::message::MessageItem'>MessageItem</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='dbus/message/enum.MessageItem.html' title='enum dbus::message::MessageItem'>MessageItem</a>&gt; + <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a> + <a class='trait' href='core/default/trait.Default.html' title='trait core::default::Default'>Default</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='dbus/message/enum.MessageItem.html' title='enum dbus::message::MessageItem'>MessageItem</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='dbus/message/enum.MessageItem.html' title='enum dbus::message::MessageItem'>MessageItem</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='dbus/strings/struct.Path.html' title='struct dbus::strings::Path'>Path</a>&lt;'static&gt;&gt; for <a class='enum' href='dbus/message/enum.MessageItem.html' title='enum dbus::message::MessageItem'>MessageItem</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='dbus/message/struct.OwnedFd.html' title='struct dbus::message::OwnedFd'>OwnedFd</a>&gt; for <a class='enum' href='dbus/message/enum.MessageItem.html' title='enum dbus::message::MessageItem'>MessageItem</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='enum' href='dbus/message/enum.MessageItem.html' title='enum dbus::message::MessageItem'>MessageItem</a>&gt;&gt; for <a class='enum' href='dbus/message/enum.MessageItem.html' title='enum dbus::message::MessageItem'>MessageItem</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a><a class='enum' href='dbus/message/enum.MessageItem.html' title='enum dbus::message::MessageItem'>MessageItem</a>, <a class='enum' href='dbus/message/enum.MessageItem.html' title='enum dbus::message::MessageItem'>MessageItem</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='dbus/message/enum.MessageItem.html' title='enum dbus::message::MessageItem'>MessageItem</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='dbus/strings/struct.Signature.html' title='struct dbus::strings::Signature'>Signature</a>&lt;'static&gt;&gt; for <a class='struct' href='dbus/methoddisp/struct.Argument.html' title='struct dbus::methoddisp::Argument'>Argument</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='dbus/methoddisp/struct.Argument.html' title='struct dbus::methoddisp::Argument'>Argument</a>","impl&lt;N, S&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>N, S<a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='struct' href='dbus/methoddisp/struct.Argument.html' title='struct dbus::methoddisp::Argument'>Argument</a> <span class='where fmt-newline'>where N: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;S: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='struct' href='dbus/strings/struct.Signature.html' title='struct dbus::strings::Signature'>Signature</a>&lt;'static&gt;&gt;</span>","impl&lt;T, M&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>T, M<a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='struct' href='dbus/methoddisp/struct.MethodErr.html' title='struct dbus::methoddisp::MethodErr'>MethodErr</a> <span class='where fmt-newline'>where M: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='struct' href='dbus/strings/struct.ErrorName.html' title='struct dbus::strings::ErrorName'>ErrorName</a>&lt;'static&gt;&gt;</span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt; for <a class='enum' href='dbus/message/enum.MessageItem.html' title='enum dbus::message::MessageItem'>MessageItem</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u64.html'>u64</a>&gt; for <a class='enum' href='dbus/message/enum.MessageItem.html' title='enum dbus::message::MessageItem'>MessageItem</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='enum' href='dbus/message/enum.MessageItem.html' title='enum dbus::message::MessageItem'>MessageItem</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u16.html'>u16</a>&gt; for <a class='enum' href='dbus/message/enum.MessageItem.html' title='enum dbus::message::MessageItem'>MessageItem</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.i16.html'>i16</a>&gt; for <a class='enum' href='dbus/message/enum.MessageItem.html' title='enum dbus::message::MessageItem'>MessageItem</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.i32.html'>i32</a>&gt; for <a class='enum' href='dbus/message/enum.MessageItem.html' title='enum dbus::message::MessageItem'>MessageItem</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.i64.html'>i64</a>&gt; for <a class='enum' href='dbus/message/enum.MessageItem.html' title='enum dbus::message::MessageItem'>MessageItem</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.f64.html'>f64</a>&gt; for <a class='enum' href='dbus/message/enum.MessageItem.html' title='enum dbus::message::MessageItem'>MessageItem</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.bool.html'>bool</a>&gt; for <a class='enum' href='dbus/message/enum.MessageItem.html' title='enum dbus::message::MessageItem'>MessageItem</a>","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='dbus/strings/struct.Signature.html' title='struct dbus::strings::Signature'>Signature</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'m <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='dbus/strings/struct.Signature.html' title='struct dbus::strings::Signature'>Signature</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'m <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='dbus/strings/struct.Signature.html' title='struct dbus::strings::Signature'>Signature</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='dbus/strings/struct.Path.html' title='struct dbus::strings::Path'>Path</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'m <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='dbus/strings/struct.Path.html' title='struct dbus::strings::Path'>Path</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'m <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='dbus/strings/struct.Path.html' title='struct dbus::strings::Path'>Path</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='dbus/strings/struct.Member.html' title='struct dbus::strings::Member'>Member</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'m <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='dbus/strings/struct.Member.html' title='struct dbus::strings::Member'>Member</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'m <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='dbus/strings/struct.Member.html' title='struct dbus::strings::Member'>Member</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='dbus/strings/struct.Interface.html' title='struct dbus::strings::Interface'>Interface</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'m <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='dbus/strings/struct.Interface.html' title='struct dbus::strings::Interface'>Interface</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'m <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='dbus/strings/struct.Interface.html' title='struct dbus::strings::Interface'>Interface</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='dbus/strings/struct.BusName.html' title='struct dbus::strings::BusName'>BusName</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'m <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='dbus/strings/struct.BusName.html' title='struct dbus::strings::BusName'>BusName</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'m <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='dbus/strings/struct.BusName.html' title='struct dbus::strings::BusName'>BusName</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='dbus/strings/struct.ErrorName.html' title='struct dbus::strings::ErrorName'>ErrorName</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'m <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='dbus/strings/struct.ErrorName.html' title='struct dbus::strings::ErrorName'>ErrorName</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'m <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='dbus/strings/struct.ErrorName.html' title='struct dbus::strings::ErrorName'>ErrorName</a>&lt;'m&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='ogg/enum.OggReadError.html' title='enum ogg::OggReadError'>OggReadError</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='enum' href='hyper/header/common/referrer_policy/enum.ReferrerPolicy.html' title='enum hyper::header::common::referrer_policy::ReferrerPolicy'>ReferrerPolicy</a>&gt; for <a class='enum' href='net_traits/enum.ReferrerPolicy.html' title='enum net_traits::ReferrerPolicy'>ReferrerPolicy</a>","impl&lt;O, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;O&gt; for <a class='struct' href='owning_ref/struct.OwningRef.html' title='struct owning_ref::OwningRef'>OwningRef</a>&lt;O, T&gt; <span class='where fmt-newline'>where O: <a class='trait' href='owning_ref/trait.StableAddress.html' title='trait owning_ref::StableAddress'>StableAddress</a>&lt;Target=T&gt; + <a class='trait' href='core/ops/trait.Deref.html' title='trait core::ops::Deref'>Deref</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T: ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='png/decoder/stream/enum.DecodingError.html' title='enum png::decoder::stream::DecodingError'>DecodingError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='png/decoder/stream/enum.DecodingError.html' title='enum png::decoder::stream::DecodingError'>DecodingError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='png/decoder/stream/enum.DecodingError.html' title='enum png::decoder::stream::DecodingError'>DecodingError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='png/encoder/enum.EncodingError.html' title='enum png::encoder::EncodingError'>EncodingError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='png/encoder/enum.EncodingError.html' title='enum png::encoder::EncodingError'>EncodingError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='enum' href='webrender_traits/enum.PropertyBinding.html' title='enum webrender_traits::PropertyBinding'>PropertyBinding</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='webrender_traits/struct.PropertyBindingKey.html' title='struct webrender_traits::PropertyBindingKey'>PropertyBindingKey</a>&lt;T&gt;&gt; for <a class='enum' href='webrender_traits/enum.PropertyBinding.html' title='enum webrender_traits::PropertyBinding'>PropertyBinding</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='webrender_traits/struct.ColorF.html' title='struct webrender_traits::ColorF'>ColorF</a>&gt; for <a class='struct' href='webrender_traits/struct.ColorU.html' title='struct webrender_traits::ColorU'>ColorU</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='immeta/types/enum.Error.html' title='enum immeta::types::Error'>Error</a>","impl&lt;T, U&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>T, U<a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='struct' href='immeta/types/struct.Dimensions.html' title='struct immeta::types::Dimensions'>Dimensions</a> <span class='where fmt-newline'>where T: <a class='trait' href='num_traits/cast/trait.ToPrimitive.html' title='trait num_traits::cast::ToPrimitive'>ToPrimitive</a>, U: <a class='trait' href='num_traits/cast/trait.ToPrimitive.html' title='trait num_traits::cast::ToPrimitive'>ToPrimitive</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='audio_video_metadata/enums/enum.AudioType.html' title='enum audio_video_metadata::enums::AudioType'>AudioType</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='audio_video_metadata/enums/enum.VideoType.html' title='enum audio_video_metadata::enums::VideoType'>VideoType</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='audio_video_metadata/types/struct.AudioMetadata.html' title='struct audio_video_metadata::types::AudioMetadata'>AudioMetadata</a>&gt; for <a class='enum' href='audio_video_metadata/enums/enum.Metadata.html' title='enum audio_video_metadata::enums::Metadata'>Metadata</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='audio_video_metadata/types/struct.VideoMetadata.html' title='struct audio_video_metadata::types::VideoMetadata'>VideoMetadata</a>&gt; for <a class='enum' href='audio_video_metadata/enums/enum.Metadata.html' title='enum audio_video_metadata::enums::Metadata'>Metadata</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='gif/reader/decoder/enum.DecodingError.html' title='enum gif::reader::decoder::DecodingError'>DecodingError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.bool.html'>bool</a>&gt; for <a class='struct' href='simd/struct.bool8i.html' title='struct simd::bool8i'>bool8i</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='simd/struct.bool8i.html' title='struct simd::bool8i'>bool8i</a>&gt; for <a class='primitive' href='std/primitive.bool.html'>bool</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.bool.html'>bool</a>&gt; for <a class='struct' href='simd/struct.bool16i.html' title='struct simd::bool16i'>bool16i</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='simd/struct.bool16i.html' title='struct simd::bool16i'>bool16i</a>&gt; for <a class='primitive' href='std/primitive.bool.html'>bool</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.bool.html'>bool</a>&gt; for <a class='struct' href='simd/struct.bool32i.html' title='struct simd::bool32i'>bool32i</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='simd/struct.bool32i.html' title='struct simd::bool32i'>bool32i</a>&gt; for <a class='primitive' href='std/primitive.bool.html'>bool</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.bool.html'>bool</a>&gt; for <a class='struct' href='simd/struct.bool32f.html' title='struct simd::bool32f'>bool32f</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='simd/struct.bool32f.html' title='struct simd::bool32f'>bool32f</a>&gt; for <a class='primitive' href='std/primitive.bool.html'>bool</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a><a class='enum' href='png/common/enum.ColorType.html' title='enum png::common::ColorType'>ColorType</a>, <a class='enum' href='png/common/enum.BitDepth.html' title='enum png::common::BitDepth'>BitDepth</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='image/color/enum.ColorType.html' title='enum image::color::ColorType'>ColorType</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='image/color/enum.ColorType.html' title='enum image::color::ColorType'>ColorType</a>&gt; for <a class='primitive' href='std/primitive.tuple.html'>(</a><a class='enum' href='png/common/enum.ColorType.html' title='enum png::common::ColorType'>ColorType</a>, <a class='enum' href='png/common/enum.BitDepth.html' title='enum png::common::BitDepth'>BitDepth</a><a class='primitive' href='std/primitive.tuple.html'>)</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='png/decoder/stream/enum.DecodingError.html' title='enum png::decoder::stream::DecodingError'>DecodingError</a>&gt; for <a class='enum' href='image/image/enum.ImageError.html' title='enum image::image::ImageError'>ImageError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='jpeg_decoder/decoder/enum.PixelFormat.html' title='enum jpeg_decoder::decoder::PixelFormat'>PixelFormat</a>&gt; for <a class='enum' href='image/color/enum.ColorType.html' title='enum image::color::ColorType'>ColorType</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='jpeg_decoder/error/enum.Error.html' title='enum jpeg_decoder::error::Error'>Error</a>&gt; for <a class='enum' href='image/image/enum.ImageError.html' title='enum image::image::ImageError'>ImageError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='gif/reader/decoder/enum.DecodingError.html' title='enum gif::reader::decoder::DecodingError'>DecodingError</a>&gt; for <a class='enum' href='image/image/enum.ImageError.html' title='enum image::image::ImageError'>ImageError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='image/image/enum.ImageError.html' title='enum image::image::ImageError'>ImageError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='deflate/compression_options/enum.Compression.html' title='enum deflate::compression_options::Compression'>Compression</a>&gt; for <a class='struct' href='deflate/compression_options/struct.CompressionOptions.html' title='struct deflate::compression_options::CompressionOptions'>CompressionOptions</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;HuffmanError&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='ordered_float/struct.OrderedFloat.html' title='struct ordered_float::OrderedFloat'>OrderedFloat</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='num_traits/float/trait.Float.html' title='trait num_traits::float::Float'>Float</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='ordered_float/struct.NotNaN.html' title='struct ordered_float::NotNaN'>NotNaN</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='num_traits/float/trait.Float.html' title='trait num_traits::float::Float'>Float</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='odds/slice/iter/struct.SliceCopyIter.html' title='struct odds::slice::iter::SliceCopyIter'>SliceCopyIter</a>&lt;'a, T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a></span>","impl&lt;'a, T, Slice&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a Slice&gt; for &amp;'a <a class='struct' href='odds/slice/struct.RevSlice.html' title='struct odds::slice::RevSlice'>RevSlice</a>&lt;T&gt; <span class='where fmt-newline'>where Slice: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl&lt;'a, T, Slice&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a mut Slice&gt; for &amp;'a mut <a class='struct' href='odds/slice/struct.RevSlice.html' title='struct odds::slice::RevSlice'>RevSlice</a>&lt;T&gt; <span class='where fmt-newline'>where Slice: <a class='trait' href='core/convert/trait.AsMut.html' title='trait core::convert::AsMut'>AsMut</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='odds/slice/struct.RevSlice.html' title='struct odds::slice::RevSlice'>RevSlice</a>&lt;T&gt;&gt;","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='struct std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt;","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='struct std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/io/error/enum.ErrorKind.html' title='enum std::io::error::ErrorKind'>ErrorKind</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='primitive' href='std/primitive.u128.html'>u128</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u128.html'>u128</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV4.html' title='struct std::net::addr::SocketAddrV4'>SocketAddrV4</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV6.html' title='struct std::net::addr::SocketAddrV6'>SocketAddrV6</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl&lt;I&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>I, <a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a> <span class='where fmt-newline'>where I: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='struct std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='enum std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='bitreader/enum.BitReaderError.html' title='enum bitreader::BitReaderError'>BitReaderError</a>&gt; for <a class='enum' href='mp4parse/enum.Error.html' title='enum mp4parse::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='mp4parse/enum.Error.html' title='enum mp4parse::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.FromUtf8Error.html' title='struct collections::string::FromUtf8Error'>FromUtf8Error</a>&gt; for <a class='enum' href='mp4parse/enum.Error.html' title='enum mp4parse::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='style/restyle_hints/struct.RestyleHint.html' title='struct style::restyle_hints::RestyleHint'>RestyleHint</a>&gt; for <a class='struct' href='style/data/struct.StoredRestyleHint.html' title='struct style::data::StoredRestyleHint'>StoredRestyleHint</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='style/stylesheets/enum.SingleRuleParseError.html' title='enum style::stylesheets::SingleRuleParseError'>SingleRuleParseError</a>&gt; for <a class='enum' href='style/stylesheets/enum.RulesMutateError.html' title='enum style::stylesheets::RulesMutateError'>RulesMutateError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='style/values/computed/length/enum.LengthOrPercentage.html' title='enum style::values::computed::length::LengthOrPercentage'>LengthOrPercentage</a>&gt; for <a class='struct' href='style/values/computed/length/struct.CalcLengthOrPercentage.html' title='struct style::values::computed::length::CalcLengthOrPercentage'>CalcLengthOrPercentage</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='style/values/computed/length/enum.LengthOrPercentageOrAuto.html' title='enum style::values::computed::length::LengthOrPercentageOrAuto'>LengthOrPercentageOrAuto</a>&gt; for <a class='enum' href='core/option/enum.Option.html' title='enum core::option::Option'>Option</a>&lt;<a class='struct' href='style/values/computed/length/struct.CalcLengthOrPercentage.html' title='struct style::values::computed::length::CalcLengthOrPercentage'>CalcLengthOrPercentage</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='style/values/specified/length/enum.NoCalcLength.html' title='enum style::values::specified::length::NoCalcLength'>NoCalcLength</a>&gt; for <a class='enum' href='style/values/specified/length/enum.Length.html' title='enum style::values::specified::length::Length'>Length</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='style/values/specified/length/enum.Length.html' title='enum style::values::specified::length::Length'>Length</a>&gt; for <a class='enum' href='style/values/specified/length/enum.LengthOrPercentage.html' title='enum style::values::specified::length::LengthOrPercentage'>LengthOrPercentage</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='style/values/specified/length/enum.NoCalcLength.html' title='enum style::values::specified::length::NoCalcLength'>NoCalcLength</a>&gt; for <a class='enum' href='style/values/specified/length/enum.LengthOrPercentage.html' title='enum style::values::specified::length::LengthOrPercentage'>LengthOrPercentage</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='style/values/specified/length/struct.Percentage.html' title='struct style::values::specified::length::Percentage'>Percentage</a>&gt; for <a class='enum' href='style/values/specified/length/enum.LengthOrPercentage.html' title='enum style::values::specified::length::LengthOrPercentage'>LengthOrPercentage</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='style/values/specified/length/enum.NoCalcLength.html' title='enum style::values::specified::length::NoCalcLength'>NoCalcLength</a>&gt; for <a class='enum' href='style/values/specified/length/enum.LengthOrPercentageOrAuto.html' title='enum style::values::specified::length::LengthOrPercentageOrAuto'>LengthOrPercentageOrAuto</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='style/values/specified/length/struct.Percentage.html' title='struct style::values::specified::length::Percentage'>Percentage</a>&gt; for <a class='enum' href='style/values/specified/length/enum.LengthOrPercentageOrAuto.html' title='enum style::values::specified::length::LengthOrPercentageOrAuto'>LengthOrPercentageOrAuto</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='style/properties/longhands/background_origin/single_value/computed_value/enum.T.html' title='enum style::properties::longhands::background_origin::single_value::computed_value::T'>T</a>&gt; for <a class='enum' href='style/properties/longhands/background_clip/single_value/computed_value/enum.T.html' title='enum style::properties::longhands::background_clip::single_value::computed_value::T'>T</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='style/properties/longhands/transform/computed_value/struct.ComputedMatrix.html' title='struct style::properties::longhands::transform::computed_value::ComputedMatrix'>ComputedMatrix</a>&gt; for <a class='struct' href='style/properties/animated_properties/struct.MatrixDecomposed2D.html' title='struct style::properties::animated_properties::MatrixDecomposed2D'>MatrixDecomposed2D</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='style/properties/animated_properties/struct.MatrixDecomposed2D.html' title='struct style::properties::animated_properties::MatrixDecomposed2D'>MatrixDecomposed2D</a>&gt; for <a class='struct' href='style/properties/longhands/transform/computed_value/struct.ComputedMatrix.html' title='struct style::properties::longhands::transform::computed_value::ComputedMatrix'>ComputedMatrix</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='style/properties/animated_properties/struct.MatrixDecomposed3D.html' title='struct style::properties::animated_properties::MatrixDecomposed3D'>MatrixDecomposed3D</a>&gt; for <a class='struct' href='style/properties/longhands/transform/computed_value/struct.ComputedMatrix.html' title='struct style::properties::longhands::transform::computed_value::ComputedMatrix'>ComputedMatrix</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='core/option/enum.Option.html' title='enum core::option::Option'>Option</a>&lt;T&gt;&gt; for <a class='enum' href='webdriver/common/enum.Nullable.html' title='enum webdriver::common::Nullable'>Nullable</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='rustc_serialize/json/trait.ToJson.html' title='trait rustc_serialize::json::ToJson'>ToJson</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='webdriver/common/struct.WebElement.html' title='struct webdriver::common::WebElement'>WebElement</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt;</span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='rustc_serialize/json/enum.ParserError.html' title='enum rustc_serialize::json::ParserError'>ParserError</a>&gt; for <a class='struct' href='webdriver/error/struct.WebDriverError.html' title='struct webdriver::error::WebDriverError'>WebDriverError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='struct' href='webdriver/error/struct.WebDriverError.html' title='struct webdriver::error::WebDriverError'>WebDriverError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='rustc_serialize/json/enum.DecoderError.html' title='enum rustc_serialize::json::DecoderError'>DecoderError</a>&gt; for <a class='struct' href='webdriver/error/struct.WebDriverError.html' title='struct webdriver::error::WebDriverError'>WebDriverError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='rustc_serialize/base64/enum.FromBase64Error.html' title='enum rustc_serialize::base64::FromBase64Error'>FromBase64Error</a>&gt; for <a class='struct' href='webdriver/error/struct.WebDriverError.html' title='struct webdriver::error::WebDriverError'>WebDriverError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;&gt; for <a class='struct' href='webdriver/error/struct.WebDriverError.html' title='struct webdriver::error::WebDriverError'>WebDriverError</a>","impl&lt;F, A&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='tendril/tendril/struct.Tendril.html' title='struct tendril::tendril::Tendril'>Tendril</a>&lt;F, A&gt;&gt; for <a class='struct' href='tendril/tendril/struct.SendTendril.html' title='struct tendril::tendril::SendTendril'>SendTendril</a>&lt;F&gt; <span class='where fmt-newline'>where A: <a class='trait' href='tendril/tendril/trait.Atomicity.html' title='trait tendril::tendril::Atomicity'>Atomicity</a>, F: <a class='trait' href='tendril/fmt/trait.Format.html' title='trait tendril::fmt::Format'>Format</a></span>","impl&lt;F, A&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='tendril/tendril/struct.SendTendril.html' title='struct tendril::tendril::SendTendril'>SendTendril</a>&lt;F&gt;&gt; for <a class='struct' href='tendril/tendril/struct.Tendril.html' title='struct tendril::tendril::Tendril'>Tendril</a>&lt;F, A&gt; <span class='where fmt-newline'>where A: <a class='trait' href='tendril/tendril/trait.Atomicity.html' title='trait tendril::tendril::Atomicity'>Atomicity</a>, F: <a class='trait' href='tendril/fmt/trait.Format.html' title='trait tendril::fmt::Format'>Format</a></span>","impl&lt;'a, F, A&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a F::<a class='trait' href='tendril/fmt/trait.SliceFormat.html' title='trait tendril::fmt::SliceFormat'>Slice</a>&gt; for <a class='struct' href='tendril/tendril/struct.Tendril.html' title='struct tendril::tendril::Tendril'>Tendril</a>&lt;F, A&gt; <span class='where fmt-newline'>where A: <a class='trait' href='tendril/tendril/trait.Atomicity.html' title='trait tendril::tendril::Atomicity'>Atomicity</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;F: <a class='trait' href='tendril/fmt/trait.SliceFormat.html' title='trait tendril::fmt::SliceFormat'>SliceFormat</a></span>","impl&lt;A&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='tendril/tendril/struct.Tendril.html' title='struct tendril::tendril::Tendril'>Tendril</a>&lt;<a class='struct' href='tendril/fmt/struct.UTF8.html' title='struct tendril::fmt::UTF8'>UTF8</a>, A&gt; <span class='where fmt-newline'>where A: <a class='trait' href='tendril/tendril/trait.Atomicity.html' title='trait tendril::tendril::Atomicity'>Atomicity</a></span>","impl&lt;A&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='tendril/tendril/struct.Tendril.html' title='struct tendril::tendril::Tendril'>Tendril</a>&lt;<a class='struct' href='tendril/fmt/struct.UTF8.html' title='struct tendril::fmt::UTF8'>UTF8</a>, A&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a> <span class='where fmt-newline'>where A: <a class='trait' href='tendril/tendril/trait.Atomicity.html' title='trait tendril::tendril::Atomicity'>Atomicity</a></span>","impl&lt;'a, A&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='tendril/tendril/struct.Tendril.html' title='struct tendril::tendril::Tendril'>Tendril</a>&lt;<a class='struct' href='tendril/fmt/struct.UTF8.html' title='struct tendril::fmt::UTF8'>UTF8</a>, A&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a> <span class='where fmt-newline'>where A: <a class='trait' href='tendril/tendril/trait.Atomicity.html' title='trait tendril::tendril::Atomicity'>Atomicity</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='websocket/result/enum.WebSocketError.html' title='enum websocket::result::WebSocketError'>WebSocketError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>&gt; for <a class='enum' href='websocket/result/enum.WebSocketError.html' title='enum websocket::result::WebSocketError'>WebSocketError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='url/parser/enum.ParseError.html' title='enum url::parser::ParseError'>ParseError</a>&gt; for <a class='enum' href='websocket/result/enum.WebSocketError.html' title='enum websocket::result::WebSocketError'>WebSocketError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='openssl/ssl/error/enum.SslError.html' title='enum openssl::ssl::error::SslError'>SslError</a>&gt; for <a class='enum' href='websocket/result/enum.WebSocketError.html' title='enum websocket::result::WebSocketError'>WebSocketError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='core/str/struct.Utf8Error.html' title='struct core::str::Utf8Error'>Utf8Error</a>&gt; for <a class='enum' href='websocket/result/enum.WebSocketError.html' title='enum websocket::result::WebSocketError'>WebSocketError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='websocket/result/enum.WSUrlErrorKind.html' title='enum websocket::result::WSUrlErrorKind'>WSUrlErrorKind</a>&gt; for <a class='enum' href='websocket/result/enum.WebSocketError.html' title='enum websocket::result::WebSocketError'>WebSocketError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;Specificity&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='jpeg_decoder/error/enum.Error.html' title='enum jpeg_decoder::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sync/mpsc/struct.RecvError.html' title='struct std::sync::mpsc::RecvError'>RecvError</a>&gt; for <a class='enum' href='jpeg_decoder/error/enum.Error.html' title='enum jpeg_decoder::error::Error'>Error</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sync/mpsc/struct.SendError.html' title='struct std::sync::mpsc::SendError'>SendError</a>&lt;T&gt;&gt; for <a class='enum' href='jpeg_decoder/error/enum.Error.html' title='enum jpeg_decoder::error::Error'>Error</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/any/trait.Any.html' title='trait core::any::Any'>Any</a></span>","impl&lt;'a, Static&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='string_cache/atom/struct.Atom.html' title='struct string_cache::atom::Atom'>Atom</a>&lt;Static&gt; <span class='where fmt-newline'>where Static: <a class='trait' href='string_cache/atom/trait.StaticAtomSet.html' title='trait string_cache::atom::StaticAtomSet'>StaticAtomSet</a></span>","impl&lt;'a, Static&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='string_cache/atom/struct.Atom.html' title='struct string_cache::atom::Atom'>Atom</a>&lt;Static&gt; <span class='where fmt-newline'>where Static: <a class='trait' href='string_cache/atom/trait.StaticAtomSet.html' title='trait string_cache::atom::StaticAtomSet'>StaticAtomSet</a></span>","impl&lt;Static&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='string_cache/atom/struct.Atom.html' title='struct string_cache::atom::Atom'>Atom</a>&lt;Static&gt; <span class='where fmt-newline'>where Static: <a class='trait' href='string_cache/atom/trait.StaticAtomSet.html' title='trait string_cache::atom::StaticAtomSet'>StaticAtomSet</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='trait core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>: <a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>ToOwned</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>::<a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>Owned</a> == <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='ogg_metadata/enum.OggMetadataError.html' title='enum ogg_metadata::OggMetadataError'>OggMetadataError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='ogg/enum.OggReadError.html' title='enum ogg::OggReadError'>OggReadError</a>&gt; for <a class='enum' href='ogg_metadata/enum.OggMetadataError.html' title='enum ogg_metadata::OggMetadataError'>OggMetadataError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;&gt; for <a class='struct' href='solicit/http/frame/struct.RawFrame.html' title='struct solicit::http::frame::RawFrame'>RawFrame</a>","impl&lt;E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='enum' href='solicit/http/session/enum.StreamDataError.html' title='enum solicit::http::session::StreamDataError'>StreamDataError</a> <span class='where fmt-newline'>where E: <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a> + 'static</span>","impl&lt;E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='enum' href='solicit/http/enum.HttpError.html' title='enum solicit::http::HttpError'>HttpError</a> <span class='where fmt-newline'>where E: <a class='trait' href='solicit/http/client/trait.HttpConnectError.html' title='trait solicit::http::client::HttpConnectError'>HttpConnectError</a> + 'static</span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='struct' href='solicit/http/client/struct.CleartextConnectError.html' title='struct solicit::http::client::CleartextConnectError'>CleartextConnectError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='solicit/http/enum.HttpError.html' title='enum solicit::http::HttpError'>HttpError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;ErrorImpl&gt; for <a class='struct' href='serde_json/error/struct.Error.html' title='struct serde_json::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='struct' href='serde_json/error/struct.Error.html' title='struct serde_json::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='serde/de/value/struct.Error.html' title='struct serde::de::value::Error'>Error</a>&gt; for <a class='struct' href='serde_json/error/struct.Error.html' title='struct serde_json::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.f32.html'>f32</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.f64.html'>f64</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.bool.html'>bool</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='serde_json/map/struct.Map.html' title='struct serde_json::map::Map'>Map</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>, <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>&gt;&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>&gt;</span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a> + <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>&gt;</span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.i8.html'>i8</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.i16.html'>i16</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.i32.html'>i32</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.i64.html'>i64</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.isize.html'>isize</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u16.html'>u16</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u64.html'>u64</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.usize.html'>usize</a>&gt; for <a class='enum' href='serde_json/value/enum.Value.html' title='enum serde_json::value::Value'>Value</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.i8.html'>i8</a>&gt; for <a class='struct' href='serde_json/number/struct.Number.html' title='struct serde_json::number::Number'>Number</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.i16.html'>i16</a>&gt; for <a class='struct' href='serde_json/number/struct.Number.html' title='struct serde_json::number::Number'>Number</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.i32.html'>i32</a>&gt; for <a class='struct' href='serde_json/number/struct.Number.html' title='struct serde_json::number::Number'>Number</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.i64.html'>i64</a>&gt; for <a class='struct' href='serde_json/number/struct.Number.html' title='struct serde_json::number::Number'>Number</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.isize.html'>isize</a>&gt; for <a class='struct' href='serde_json/number/struct.Number.html' title='struct serde_json::number::Number'>Number</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt; for <a class='struct' href='serde_json/number/struct.Number.html' title='struct serde_json::number::Number'>Number</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u16.html'>u16</a>&gt; for <a class='struct' href='serde_json/number/struct.Number.html' title='struct serde_json::number::Number'>Number</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='serde_json/number/struct.Number.html' title='struct serde_json::number::Number'>Number</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u64.html'>u64</a>&gt; for <a class='struct' href='serde_json/number/struct.Number.html' title='struct serde_json::number::Number'>Number</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.usize.html'>usize</a>&gt; for <a class='struct' href='serde_json/number/struct.Number.html' title='struct serde_json::number::Number'>Number</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for <a class='struct' href='serde/bytes/struct.Bytes.html' title='struct serde::bytes::Bytes'>Bytes</a>&lt;'a&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;&gt; for <a class='struct' href='serde/bytes/struct.Bytes.html' title='struct serde::bytes::Bytes'>Bytes</a>&lt;'a&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;&gt; for <a class='struct' href='serde/bytes/bytebuf/struct.ByteBuf.html' title='struct serde::bytes::bytebuf::ByteBuf'>ByteBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='fontsan/enum.Error.html' title='enum fontsan::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='flate2/mem/struct.DataError.html' title='struct flate2::mem::DataError'>DataError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='struct' href='backtrace/capture/struct.BacktraceFrame.html' title='struct backtrace::capture::BacktraceFrame'>BacktraceFrame</a>&gt;&gt; for <a class='struct' href='backtrace/capture/struct.Backtrace.html' title='struct backtrace::capture::Backtrace'>Backtrace</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XAnyEvent.html' title='struct x11::xlib::XAnyEvent'>XAnyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XAnyEvent.html' title='struct x11::xlib::XAnyEvent'>XAnyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XAnyEvent.html' title='struct x11::xlib::XAnyEvent'>XAnyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XAnyEvent.html' title='struct x11::xlib::XAnyEvent'>XAnyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XButtonEvent.html' title='struct x11::xlib::XButtonEvent'>XButtonEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XButtonEvent.html' title='struct x11::xlib::XButtonEvent'>XButtonEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XButtonEvent.html' title='struct x11::xlib::XButtonEvent'>XButtonEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XButtonEvent.html' title='struct x11::xlib::XButtonEvent'>XButtonEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XCirculateEvent.html' title='struct x11::xlib::XCirculateEvent'>XCirculateEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XCirculateEvent.html' title='struct x11::xlib::XCirculateEvent'>XCirculateEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCirculateEvent.html' title='struct x11::xlib::XCirculateEvent'>XCirculateEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCirculateEvent.html' title='struct x11::xlib::XCirculateEvent'>XCirculateEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XCirculateRequestEvent.html' title='struct x11::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XCirculateRequestEvent.html' title='struct x11::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCirculateRequestEvent.html' title='struct x11::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCirculateRequestEvent.html' title='struct x11::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XClientMessageEvent.html' title='struct x11::xlib::XClientMessageEvent'>XClientMessageEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XClientMessageEvent.html' title='struct x11::xlib::XClientMessageEvent'>XClientMessageEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XClientMessageEvent.html' title='struct x11::xlib::XClientMessageEvent'>XClientMessageEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XClientMessageEvent.html' title='struct x11::xlib::XClientMessageEvent'>XClientMessageEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XColormapEvent.html' title='struct x11::xlib::XColormapEvent'>XColormapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XColormapEvent.html' title='struct x11::xlib::XColormapEvent'>XColormapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XColormapEvent.html' title='struct x11::xlib::XColormapEvent'>XColormapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XColormapEvent.html' title='struct x11::xlib::XColormapEvent'>XColormapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XConfigureEvent.html' title='struct x11::xlib::XConfigureEvent'>XConfigureEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XConfigureEvent.html' title='struct x11::xlib::XConfigureEvent'>XConfigureEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XConfigureEvent.html' title='struct x11::xlib::XConfigureEvent'>XConfigureEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XConfigureEvent.html' title='struct x11::xlib::XConfigureEvent'>XConfigureEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XConfigureRequestEvent.html' title='struct x11::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XConfigureRequestEvent.html' title='struct x11::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XConfigureRequestEvent.html' title='struct x11::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XConfigureRequestEvent.html' title='struct x11::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XCreateWindowEvent.html' title='struct x11::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XCreateWindowEvent.html' title='struct x11::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCreateWindowEvent.html' title='struct x11::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCreateWindowEvent.html' title='struct x11::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XCrossingEvent.html' title='struct x11::xlib::XCrossingEvent'>XCrossingEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XCrossingEvent.html' title='struct x11::xlib::XCrossingEvent'>XCrossingEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCrossingEvent.html' title='struct x11::xlib::XCrossingEvent'>XCrossingEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCrossingEvent.html' title='struct x11::xlib::XCrossingEvent'>XCrossingEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XDestroyWindowEvent.html' title='struct x11::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XDestroyWindowEvent.html' title='struct x11::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XDestroyWindowEvent.html' title='struct x11::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XDestroyWindowEvent.html' title='struct x11::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XErrorEvent.html' title='struct x11::xlib::XErrorEvent'>XErrorEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XErrorEvent.html' title='struct x11::xlib::XErrorEvent'>XErrorEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XErrorEvent.html' title='struct x11::xlib::XErrorEvent'>XErrorEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XErrorEvent.html' title='struct x11::xlib::XErrorEvent'>XErrorEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XExposeEvent.html' title='struct x11::xlib::XExposeEvent'>XExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XExposeEvent.html' title='struct x11::xlib::XExposeEvent'>XExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XExposeEvent.html' title='struct x11::xlib::XExposeEvent'>XExposeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XExposeEvent.html' title='struct x11::xlib::XExposeEvent'>XExposeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XFocusChangeEvent.html' title='struct x11::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XFocusChangeEvent.html' title='struct x11::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XFocusChangeEvent.html' title='struct x11::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XFocusChangeEvent.html' title='struct x11::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XGenericEventCookie.html' title='struct x11::xlib::XGenericEventCookie'>XGenericEventCookie</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XGenericEventCookie.html' title='struct x11::xlib::XGenericEventCookie'>XGenericEventCookie</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGenericEventCookie.html' title='struct x11::xlib::XGenericEventCookie'>XGenericEventCookie</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGenericEventCookie.html' title='struct x11::xlib::XGenericEventCookie'>XGenericEventCookie</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XGraphicsExposeEvent.html' title='struct x11::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XGraphicsExposeEvent.html' title='struct x11::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGraphicsExposeEvent.html' title='struct x11::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGraphicsExposeEvent.html' title='struct x11::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XGravityEvent.html' title='struct x11::xlib::XGravityEvent'>XGravityEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XGravityEvent.html' title='struct x11::xlib::XGravityEvent'>XGravityEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGravityEvent.html' title='struct x11::xlib::XGravityEvent'>XGravityEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGravityEvent.html' title='struct x11::xlib::XGravityEvent'>XGravityEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XKeyEvent.html' title='struct x11::xlib::XKeyEvent'>XKeyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XKeyEvent.html' title='struct x11::xlib::XKeyEvent'>XKeyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XKeyEvent.html' title='struct x11::xlib::XKeyEvent'>XKeyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XKeyEvent.html' title='struct x11::xlib::XKeyEvent'>XKeyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XKeymapEvent.html' title='struct x11::xlib::XKeymapEvent'>XKeymapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XKeymapEvent.html' title='struct x11::xlib::XKeymapEvent'>XKeymapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XKeymapEvent.html' title='struct x11::xlib::XKeymapEvent'>XKeymapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XKeymapEvent.html' title='struct x11::xlib::XKeymapEvent'>XKeymapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XMapEvent.html' title='struct x11::xlib::XMapEvent'>XMapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XMapEvent.html' title='struct x11::xlib::XMapEvent'>XMapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMapEvent.html' title='struct x11::xlib::XMapEvent'>XMapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMapEvent.html' title='struct x11::xlib::XMapEvent'>XMapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XMappingEvent.html' title='struct x11::xlib::XMappingEvent'>XMappingEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XMappingEvent.html' title='struct x11::xlib::XMappingEvent'>XMappingEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMappingEvent.html' title='struct x11::xlib::XMappingEvent'>XMappingEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMappingEvent.html' title='struct x11::xlib::XMappingEvent'>XMappingEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XMapRequestEvent.html' title='struct x11::xlib::XMapRequestEvent'>XMapRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XMapRequestEvent.html' title='struct x11::xlib::XMapRequestEvent'>XMapRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMapRequestEvent.html' title='struct x11::xlib::XMapRequestEvent'>XMapRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMapRequestEvent.html' title='struct x11::xlib::XMapRequestEvent'>XMapRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XMotionEvent.html' title='struct x11::xlib::XMotionEvent'>XMotionEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XMotionEvent.html' title='struct x11::xlib::XMotionEvent'>XMotionEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMotionEvent.html' title='struct x11::xlib::XMotionEvent'>XMotionEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMotionEvent.html' title='struct x11::xlib::XMotionEvent'>XMotionEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XNoExposeEvent.html' title='struct x11::xlib::XNoExposeEvent'>XNoExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XNoExposeEvent.html' title='struct x11::xlib::XNoExposeEvent'>XNoExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XNoExposeEvent.html' title='struct x11::xlib::XNoExposeEvent'>XNoExposeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XNoExposeEvent.html' title='struct x11::xlib::XNoExposeEvent'>XNoExposeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XPropertyEvent.html' title='struct x11::xlib::XPropertyEvent'>XPropertyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XPropertyEvent.html' title='struct x11::xlib::XPropertyEvent'>XPropertyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XPropertyEvent.html' title='struct x11::xlib::XPropertyEvent'>XPropertyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XPropertyEvent.html' title='struct x11::xlib::XPropertyEvent'>XPropertyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XReparentEvent.html' title='struct x11::xlib::XReparentEvent'>XReparentEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XReparentEvent.html' title='struct x11::xlib::XReparentEvent'>XReparentEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XReparentEvent.html' title='struct x11::xlib::XReparentEvent'>XReparentEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XReparentEvent.html' title='struct x11::xlib::XReparentEvent'>XReparentEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XResizeRequestEvent.html' title='struct x11::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XResizeRequestEvent.html' title='struct x11::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XResizeRequestEvent.html' title='struct x11::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XResizeRequestEvent.html' title='struct x11::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XSelectionClearEvent.html' title='struct x11::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XSelectionClearEvent.html' title='struct x11::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionClearEvent.html' title='struct x11::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionClearEvent.html' title='struct x11::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XSelectionEvent.html' title='struct x11::xlib::XSelectionEvent'>XSelectionEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XSelectionEvent.html' title='struct x11::xlib::XSelectionEvent'>XSelectionEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionEvent.html' title='struct x11::xlib::XSelectionEvent'>XSelectionEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionEvent.html' title='struct x11::xlib::XSelectionEvent'>XSelectionEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XSelectionRequestEvent.html' title='struct x11::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XSelectionRequestEvent.html' title='struct x11::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionRequestEvent.html' title='struct x11::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionRequestEvent.html' title='struct x11::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XUnmapEvent.html' title='struct x11::xlib::XUnmapEvent'>XUnmapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XUnmapEvent.html' title='struct x11::xlib::XUnmapEvent'>XUnmapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XUnmapEvent.html' title='struct x11::xlib::XUnmapEvent'>XUnmapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XUnmapEvent.html' title='struct x11::xlib::XUnmapEvent'>XUnmapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XVisibilityEvent.html' title='struct x11::xlib::XVisibilityEvent'>XVisibilityEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XVisibilityEvent.html' title='struct x11::xlib::XVisibilityEvent'>XVisibilityEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XVisibilityEvent.html' title='struct x11::xlib::XVisibilityEvent'>XVisibilityEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XVisibilityEvent.html' title='struct x11::xlib::XVisibilityEvent'>XVisibilityEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.i8.html'>i8</a><a class='primitive' href='std/primitive.array.html'>; 20]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 20]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.i16.html'>i16</a><a class='primitive' href='std/primitive.array.html'>; 10]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 10]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.i64.html'>i64</a><a class='primitive' href='std/primitive.array.html'>; 5]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u64.html'>u64</a><a class='primitive' href='std/primitive.array.html'>; 5]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xf86vmode/struct.XF86VidModeNotifyEvent.html' title='struct x11::xf86vmode::XF86VidModeNotifyEvent'>XF86VidModeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xf86vmode/struct.XF86VidModeNotifyEvent.html' title='struct x11::xf86vmode::XF86VidModeNotifyEvent'>XF86VidModeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xf86vmode/struct.XF86VidModeNotifyEvent.html' title='struct x11::xf86vmode::XF86VidModeNotifyEvent'>XF86VidModeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xf86vmode/struct.XF86VidModeNotifyEvent.html' title='struct x11::xf86vmode::XF86VidModeNotifyEvent'>XF86VidModeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRScreenChangeNotifyEvent.html' title='struct x11::xrandr::XRRScreenChangeNotifyEvent'>XRRScreenChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRScreenChangeNotifyEvent.html' title='struct x11::xrandr::XRRScreenChangeNotifyEvent'>XRRScreenChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRScreenChangeNotifyEvent.html' title='struct x11::xrandr::XRRScreenChangeNotifyEvent'>XRRScreenChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRScreenChangeNotifyEvent.html' title='struct x11::xrandr::XRRScreenChangeNotifyEvent'>XRRScreenChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRNotifyEvent.html' title='struct x11::xrandr::XRRNotifyEvent'>XRRNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRNotifyEvent.html' title='struct x11::xrandr::XRRNotifyEvent'>XRRNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRNotifyEvent.html' title='struct x11::xrandr::XRRNotifyEvent'>XRRNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRNotifyEvent.html' title='struct x11::xrandr::XRRNotifyEvent'>XRRNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRROutputChangeNotifyEvent.html' title='struct x11::xrandr::XRROutputChangeNotifyEvent'>XRROutputChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRROutputChangeNotifyEvent.html' title='struct x11::xrandr::XRROutputChangeNotifyEvent'>XRROutputChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRROutputChangeNotifyEvent.html' title='struct x11::xrandr::XRROutputChangeNotifyEvent'>XRROutputChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRROutputChangeNotifyEvent.html' title='struct x11::xrandr::XRROutputChangeNotifyEvent'>XRROutputChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRCrtcChangeNotifyEvent.html' title='struct x11::xrandr::XRRCrtcChangeNotifyEvent'>XRRCrtcChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRCrtcChangeNotifyEvent.html' title='struct x11::xrandr::XRRCrtcChangeNotifyEvent'>XRRCrtcChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRCrtcChangeNotifyEvent.html' title='struct x11::xrandr::XRRCrtcChangeNotifyEvent'>XRRCrtcChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRCrtcChangeNotifyEvent.html' title='struct x11::xrandr::XRRCrtcChangeNotifyEvent'>XRRCrtcChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRROutputPropertyNotifyEvent.html' title='struct x11::xrandr::XRROutputPropertyNotifyEvent'>XRROutputPropertyNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRROutputPropertyNotifyEvent.html' title='struct x11::xrandr::XRROutputPropertyNotifyEvent'>XRROutputPropertyNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRROutputPropertyNotifyEvent.html' title='struct x11::xrandr::XRROutputPropertyNotifyEvent'>XRROutputPropertyNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRROutputPropertyNotifyEvent.html' title='struct x11::xrandr::XRROutputPropertyNotifyEvent'>XRROutputPropertyNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRProviderChangeNotifyEvent.html' title='struct x11::xrandr::XRRProviderChangeNotifyEvent'>XRRProviderChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRProviderChangeNotifyEvent.html' title='struct x11::xrandr::XRRProviderChangeNotifyEvent'>XRRProviderChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRProviderChangeNotifyEvent.html' title='struct x11::xrandr::XRRProviderChangeNotifyEvent'>XRRProviderChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRProviderChangeNotifyEvent.html' title='struct x11::xrandr::XRRProviderChangeNotifyEvent'>XRRProviderChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRProviderPropertyNotifyEvent.html' title='struct x11::xrandr::XRRProviderPropertyNotifyEvent'>XRRProviderPropertyNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRProviderPropertyNotifyEvent.html' title='struct x11::xrandr::XRRProviderPropertyNotifyEvent'>XRRProviderPropertyNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRProviderPropertyNotifyEvent.html' title='struct x11::xrandr::XRRProviderPropertyNotifyEvent'>XRRProviderPropertyNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRProviderPropertyNotifyEvent.html' title='struct x11::xrandr::XRRProviderPropertyNotifyEvent'>XRRProviderPropertyNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRResourceChangeNotifyEvent.html' title='struct x11::xrandr::XRRResourceChangeNotifyEvent'>XRRResourceChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRResourceChangeNotifyEvent.html' title='struct x11::xrandr::XRRResourceChangeNotifyEvent'>XRRResourceChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRResourceChangeNotifyEvent.html' title='struct x11::xrandr::XRRResourceChangeNotifyEvent'>XRRResourceChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRResourceChangeNotifyEvent.html' title='struct x11::xrandr::XRRResourceChangeNotifyEvent'>XRRResourceChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xss/struct.XScreenSaverNotifyEvent.html' title='struct x11::xss::XScreenSaverNotifyEvent'>XScreenSaverNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xss/struct.XScreenSaverNotifyEvent.html' title='struct x11::xss::XScreenSaverNotifyEvent'>XScreenSaverNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xss/struct.XScreenSaverNotifyEvent.html' title='struct x11::xss::XScreenSaverNotifyEvent'>XScreenSaverNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xss/struct.XScreenSaverNotifyEvent.html' title='struct x11::xss::XScreenSaverNotifyEvent'>XScreenSaverNotifyEvent</a>","impl&lt;'a, R&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a mut R&gt; for <a class='enum' href='hyper/client/enum.Body.html' title='enum hyper::client::Body'>Body</a>&lt;'a&gt; <span class='where fmt-newline'>where R: <a class='trait' href='std/io/trait.Read.html' title='trait std::io::Read'>Read</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='url/parser/enum.ParseError.html' title='enum url::parser::ParseError'>ParseError</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='openssl/ssl/error/enum.SslError.html' title='enum openssl::ssl::error::SslError'>SslError</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='core/str/struct.Utf8Error.html' title='struct core::str::Utf8Error'>Utf8Error</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.FromUtf8Error.html' title='struct collections::string::FromUtf8Error'>FromUtf8Error</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='httparse/enum.Error.html' title='enum httparse::Error'>Error</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='solicit/http/enum.HttpError.html' title='enum solicit::http::HttpError'>HttpError</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='hyper/http/h1/struct.EndError.html' title='struct hyper::http::h1::EndError'>EndError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a> <span class='where fmt-newline'>where W: <a class='trait' href='std/io/trait.Write.html' title='trait std::io::Write'>Write</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='hyper/net/trait.NetworkStream.html' title='trait hyper::net::NetworkStream'>NetworkStream</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='hyper/net/trait.NetworkStream.html' title='trait hyper::net::NetworkStream'>NetworkStream</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/tcp/struct.TcpListener.html' title='struct std::net::tcp::TcpListener'>TcpListener</a>&gt; for <a class='struct' href='hyper/net/struct.HttpListener.html' title='struct hyper::net::HttpListener'>HttpListener</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='url/struct.Url.html' title='struct url::Url'>Url</a>&gt; for <a class='struct' href='servo/url/struct.ServoUrl.html' title='struct servo::url::ServoUrl'>ServoUrl</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;UnixError&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='enum' href='bincode/serde/enum.ErrorKind.html' title='enum bincode::serde::ErrorKind'>ErrorKind</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;UnixError&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='struct' href='ws/result/struct.Error.html' title='struct ws::result::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='httparse/enum.Error.html' title='enum httparse::Error'>Error</a>&gt; for <a class='struct' href='ws/result/struct.Error.html' title='struct ws::result::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='mio/channel/enum.SendError.html' title='enum mio::channel::SendError'>SendError</a>&lt;Command&gt;&gt; for <a class='struct' href='ws/result/struct.Error.html' title='struct ws::result::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='mio/timer/struct.TimerError.html' title='struct mio::timer::TimerError'>TimerError</a>&gt; for <a class='struct' href='ws/result/struct.Error.html' title='struct ws::result::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='core/str/struct.Utf8Error.html' title='struct core::str::Utf8Error'>Utf8Error</a>&gt; for <a class='struct' href='ws/result/struct.Error.html' title='struct ws::result::Error'>Error</a>","impl&lt;B&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;B&gt;&gt; for <a class='struct' href='ws/result/struct.Error.html' title='struct ws::result::Error'>Error</a> <span class='where fmt-newline'>where B: <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a> + 'static</span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='ws/message/enum.Message.html' title='enum ws::message::Message'>Message</a>","impl&lt;'s&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'s <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='ws/message/enum.Message.html' title='enum ws::message::Message'>Message</a>","impl&lt;'b&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'b [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for <a class='enum' href='ws/message/enum.Message.html' title='enum ws::message::Message'>Message</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;&gt; for <a class='enum' href='ws/message/enum.Message.html' title='enum ws::message::Message'>Message</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt; for <a class='enum' href='ws/protocol/enum.OpCode.html' title='enum ws::protocol::OpCode'>OpCode</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u16.html'>u16</a>&gt; for <a class='enum' href='ws/protocol/enum.CloseCode.html' title='enum ws::protocol::CloseCode'>CloseCode</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;ShaderError&gt; for <a class='enum' href='webrender/renderer/enum.InitError.html' title='enum webrender::renderer::InitError'>InitError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='webrender/renderer/enum.InitError.html' title='enum webrender::renderer::InitError'>InitError</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='struct alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='struct alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for &amp;'a <a class='struct' href='mio/iovec/struct.IoVec.html' title='struct mio::iovec::IoVec'>IoVec</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a mut [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for &amp;'a mut <a class='struct' href='mio/iovec/struct.IoVec.html' title='struct mio::iovec::IoVec'>IoVec</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for &amp;'a IoVec","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a mut [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for &amp;'a mut IoVec","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.usize.html'>usize</a>&gt; for <a class='struct' href='mio/token/struct.Token.html' title='struct mio::token::Token'>Token</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='mio/token/struct.Token.html' title='struct mio::token::Token'>Token</a>&gt; for <a class='primitive' href='std/primitive.usize.html'>usize</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sync/mpsc/struct.SendError.html' title='struct std::sync::mpsc::SendError'>SendError</a>&lt;T&gt;&gt; for <a class='enum' href='mio/channel/enum.SendError.html' title='enum mio::channel::SendError'>SendError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='mio/channel/enum.SendError.html' title='enum mio::channel::SendError'>SendError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/sync/mpsc/enum.TrySendError.html' title='enum std::sync::mpsc::TrySendError'>TrySendError</a>&lt;T&gt;&gt; for <a class='enum' href='mio/channel/enum.TrySendError.html' title='enum mio::channel::TrySendError'>TrySendError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sync/mpsc/struct.SendError.html' title='struct std::sync::mpsc::SendError'>SendError</a>&lt;T&gt;&gt; for <a class='enum' href='mio/channel/enum.TrySendError.html' title='enum mio::channel::TrySendError'>TrySendError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='mio/channel/enum.TrySendError.html' title='enum mio::channel::TrySendError'>TrySendError</a>&lt;T&gt;","impl&lt;M&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='mio/channel/enum.TrySendError.html' title='enum mio::channel::TrySendError'>TrySendError</a>&lt;M&gt;&gt; for <a class='enum' href='mio/deprecated/notify/enum.NotifyError.html' title='enum mio::deprecated::notify::NotifyError'>NotifyError</a>&lt;M&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;UnixSocket&gt; for <a class='struct' href='mio/deprecated/unix/struct.UnixSocket.html' title='struct mio::deprecated::unix::UnixSocket'>UnixSocket</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;UnixSocket&gt; for <a class='struct' href='mio/deprecated/unix/struct.UnixStream.html' title='struct mio::deprecated::unix::UnixStream'>UnixStream</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;UnixSocket&gt; for <a class='struct' href='mio/deprecated/unix/struct.UnixListener.html' title='struct mio::deprecated::unix::UnixListener'>UnixListener</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='mio/sys/unix/io/struct.Io.html' title='struct mio::sys::unix::io::Io'>Io</a>&gt; for <a class='struct' href='mio/deprecated/unix/struct.PipeReader.html' title='struct mio::deprecated::unix::PipeReader'>PipeReader</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='mio/sys/unix/io/struct.Io.html' title='struct mio::sys::unix::io::Io'>Io</a>&gt; for <a class='struct' href='mio/deprecated/unix/struct.PipeWriter.html' title='struct mio::deprecated::unix::PipeWriter'>PipeWriter</a>","impl&lt;A&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;A&gt; for <a class='struct' href='arrayvec/struct.ArrayVec.html' title='struct arrayvec::ArrayVec'>ArrayVec</a>&lt;A&gt; <span class='where fmt-newline'>where A: <a class='trait' href='arrayvec/array/trait.Array.html' title='trait arrayvec::array::Array'>Array</a></span>",];
implementors["servo_config"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='url/struct.Url.html' title='struct url::Url'>Url</a>&gt; for <a class='struct' href='servo_url/struct.ServoUrl.html' title='struct servo_url::ServoUrl'>ServoUrl</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for <a class='struct' href='serde/bytes/struct.Bytes.html' title='struct serde::bytes::Bytes'>Bytes</a>&lt;'a&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;&gt; for <a class='struct' href='serde/bytes/struct.Bytes.html' title='struct serde::bytes::Bytes'>Bytes</a>&lt;'a&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;&gt; for <a class='struct' href='serde/bytes/bytebuf/struct.ByteBuf.html' title='struct serde::bytes::bytebuf::ByteBuf'>ByteBuf</a>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='struct std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt;","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='struct std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/io/error/enum.ErrorKind.html' title='enum std::io::error::ErrorKind'>ErrorKind</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='primitive' href='std/primitive.u128.html'>u128</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u128.html'>u128</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV4.html' title='struct std::net::addr::SocketAddrV4'>SocketAddrV4</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV6.html' title='struct std::net::addr::SocketAddrV6'>SocketAddrV6</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl&lt;I&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>I, <a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a> <span class='where fmt-newline'>where I: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='struct std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='enum std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='struct alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='struct alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='idna/uts46/struct.Errors.html' title='struct idna::uts46::Errors'>Errors</a>&gt; for <a class='enum' href='url/parser/enum.ParseError.html' title='enum url::parser::ParseError'>ParseError</a>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='url/percent_encoding/struct.PercentEncode.html' title='struct url::percent_encoding::PercentEncode'>PercentEncode</a>&lt;'a, E&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt; <span class='where fmt-newline'>where E: <a class='trait' href='url/percent_encoding/trait.EncodeSet.html' title='trait url::percent_encoding::EncodeSet'>EncodeSet</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='url/percent_encoding/struct.PercentDecode.html' title='struct url::percent_encoding::PercentDecode'>PercentDecode</a>&lt;'a&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='rustc_serialize/json/enum.ParserError.html' title='enum rustc_serialize::json::ParserError'>ParserError</a>&gt; for <a class='enum' href='rustc_serialize/json/enum.DecoderError.html' title='enum rustc_serialize::json::DecoderError'>DecoderError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='rustc_serialize/json/enum.ParserError.html' title='enum rustc_serialize::json::ParserError'>ParserError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='core/fmt/struct.Error.html' title='struct core::fmt::Error'>Error</a>&gt; for <a class='enum' href='rustc_serialize/json/enum.EncoderError.html' title='enum rustc_serialize::json::EncoderError'>EncoderError</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='trait core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>: <a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>ToOwned</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>::<a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>Owned</a> == <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;",];
implementors["servo_rand"] = ["impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='struct alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='struct alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='struct std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt;","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='struct std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/io/error/enum.ErrorKind.html' title='enum std::io::error::ErrorKind'>ErrorKind</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='primitive' href='std/primitive.u128.html'>u128</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u128.html'>u128</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV4.html' title='struct std::net::addr::SocketAddrV4'>SocketAddrV4</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV6.html' title='struct std::net::addr::SocketAddrV6'>SocketAddrV6</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl&lt;I&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>I, <a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a> <span class='where fmt-newline'>where I: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='struct std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='enum std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='trait core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>: <a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>ToOwned</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>::<a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>Owned</a> == <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;",];
implementors["servo_remutex"] = ["impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='struct alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='struct alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='struct std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt;","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='struct std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/io/error/enum.ErrorKind.html' title='enum std::io::error::ErrorKind'>ErrorKind</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='primitive' href='std/primitive.u128.html'>u128</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u128.html'>u128</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV4.html' title='struct std::net::addr::SocketAddrV4'>SocketAddrV4</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV6.html' title='struct std::net::addr::SocketAddrV6'>SocketAddrV6</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl&lt;I&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>I, <a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a> <span class='where fmt-newline'>where I: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='struct std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='enum std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='trait core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>: <a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>ToOwned</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>::<a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>Owned</a> == <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;",];
implementors["servo_url"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='url/struct.Url.html' title='struct url::Url'>Url</a>&gt; for <a class='struct' href='servo_url/struct.ServoUrl.html' title='struct servo_url::ServoUrl'>ServoUrl</a>",];
implementors["shared_library"] = ["impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='struct alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='struct alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='struct std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt;","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='struct std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/io/error/enum.ErrorKind.html' title='enum std::io::error::ErrorKind'>ErrorKind</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='primitive' href='std/primitive.u128.html'>u128</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u128.html'>u128</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV4.html' title='struct std::net::addr::SocketAddrV4'>SocketAddrV4</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV6.html' title='struct std::net::addr::SocketAddrV6'>SocketAddrV6</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl&lt;I&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>I, <a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a> <span class='where fmt-newline'>where I: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='struct std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='enum std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='trait core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>: <a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>ToOwned</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>::<a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>Owned</a> == <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;",];
implementors["simd"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.bool.html'>bool</a>&gt; for <a class='struct' href='simd/struct.bool8i.html' title='struct simd::bool8i'>bool8i</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='simd/struct.bool8i.html' title='struct simd::bool8i'>bool8i</a>&gt; for <a class='primitive' href='std/primitive.bool.html'>bool</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.bool.html'>bool</a>&gt; for <a class='struct' href='simd/struct.bool16i.html' title='struct simd::bool16i'>bool16i</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='simd/struct.bool16i.html' title='struct simd::bool16i'>bool16i</a>&gt; for <a class='primitive' href='std/primitive.bool.html'>bool</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.bool.html'>bool</a>&gt; for <a class='struct' href='simd/struct.bool32i.html' title='struct simd::bool32i'>bool32i</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='simd/struct.bool32i.html' title='struct simd::bool32i'>bool32i</a>&gt; for <a class='primitive' href='std/primitive.bool.html'>bool</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.bool.html'>bool</a>&gt; for <a class='struct' href='simd/struct.bool32f.html' title='struct simd::bool32f'>bool32f</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='simd/struct.bool32f.html' title='struct simd::bool32f'>bool32f</a>&gt; for <a class='primitive' href='std/primitive.bool.html'>bool</a>",];
implementors["solicit"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;&gt; for <a class='struct' href='solicit/http/frame/struct.RawFrame.html' title='struct solicit::http::frame::RawFrame'>RawFrame</a>","impl&lt;E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='enum' href='solicit/http/session/enum.StreamDataError.html' title='enum solicit::http::session::StreamDataError'>StreamDataError</a> <span class='where fmt-newline'>where E: <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a> + 'static</span>","impl&lt;E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='enum' href='solicit/http/enum.HttpError.html' title='enum solicit::http::HttpError'>HttpError</a> <span class='where fmt-newline'>where E: <a class='trait' href='solicit/http/client/trait.HttpConnectError.html' title='trait solicit::http::client::HttpConnectError'>HttpConnectError</a> + 'static</span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='struct' href='solicit/http/client/struct.CleartextConnectError.html' title='struct solicit::http::client::CleartextConnectError'>CleartextConnectError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='solicit/http/enum.HttpError.html' title='enum solicit::http::HttpError'>HttpError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='solicit/http/enum.HttpError.html' title='enum solicit::http::HttpError'>HttpError</a>&gt; for <a class='enum' href='solicit/client/async/enum.ClientServiceErr.html' title='enum solicit::client::async::ClientServiceErr'>ClientServiceErr</a>",];
implementors["std_unicode"] = [];
implementors["string_cache"] = ["impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for <a class='struct' href='serde/bytes/struct.Bytes.html' title='struct serde::bytes::Bytes'>Bytes</a>&lt;'a&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;&gt; for <a class='struct' href='serde/bytes/struct.Bytes.html' title='struct serde::bytes::Bytes'>Bytes</a>&lt;'a&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;&gt; for <a class='struct' href='serde/bytes/bytebuf/struct.ByteBuf.html' title='struct serde::bytes::bytebuf::ByteBuf'>ByteBuf</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='struct alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='struct alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='struct std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt;","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='struct std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/io/error/enum.ErrorKind.html' title='enum std::io::error::ErrorKind'>ErrorKind</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='primitive' href='std/primitive.u128.html'>u128</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u128.html'>u128</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV4.html' title='struct std::net::addr::SocketAddrV4'>SocketAddrV4</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV6.html' title='struct std::net::addr::SocketAddrV6'>SocketAddrV6</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl&lt;I&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>I, <a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a> <span class='where fmt-newline'>where I: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='struct std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='enum std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='trait core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>: <a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>ToOwned</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>::<a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>Owned</a> == <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a, Static:&nbsp;<a class='trait' href='string_cache/atom/trait.StaticAtomSet.html' title='trait string_cache::atom::StaticAtomSet'>StaticAtomSet</a>&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='string_cache/atom/struct.Atom.html' title='struct string_cache::atom::Atom'>Atom</a>&lt;Static&gt;","impl&lt;'a, Static:&nbsp;<a class='trait' href='string_cache/atom/trait.StaticAtomSet.html' title='trait string_cache::atom::StaticAtomSet'>StaticAtomSet</a>&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='string_cache/atom/struct.Atom.html' title='struct string_cache::atom::Atom'>Atom</a>&lt;Static&gt;","impl&lt;Static:&nbsp;<a class='trait' href='string_cache/atom/trait.StaticAtomSet.html' title='trait string_cache::atom::StaticAtomSet'>StaticAtomSet</a>&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='string_cache/atom/struct.Atom.html' title='struct string_cache::atom::Atom'>Atom</a>&lt;Static&gt;",];
implementors["style"] = ["impl&lt;O, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;O&gt; for <a class='struct' href='owning_ref/struct.OwningRef.html' title='struct owning_ref::OwningRef'>OwningRef</a>&lt;O, T&gt; <span class='where fmt-newline'>where O: <a class='trait' href='owning_ref/trait.StableAddress.html' title='trait owning_ref::StableAddress'>StableAddress</a>&lt;Target=T&gt; + <a class='trait' href='core/ops/trait.Deref.html' title='trait core::ops::Deref'>Deref</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T: ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;Error&gt; for <a class='primitive' href='std/primitive.tuple.html'>()</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='idna/uts46/struct.Errors.html' title='struct idna::uts46::Errors'>Errors</a>&gt; for <a class='enum' href='url/parser/enum.ParseError.html' title='enum url::parser::ParseError'>ParseError</a>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='url/percent_encoding/struct.PercentEncode.html' title='struct url::percent_encoding::PercentEncode'>PercentEncode</a>&lt;'a, E&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt; <span class='where fmt-newline'>where E: <a class='trait' href='url/percent_encoding/trait.EncodeSet.html' title='trait url::percent_encoding::EncodeSet'>EncodeSet</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='url/percent_encoding/struct.PercentDecode.html' title='struct url::percent_encoding::PercentDecode'>PercentDecode</a>&lt;'a&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt;","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='struct std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt;","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='struct std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/io/error/enum.ErrorKind.html' title='enum std::io::error::ErrorKind'>ErrorKind</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='primitive' href='std/primitive.u128.html'>u128</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u128.html'>u128</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV4.html' title='struct std::net::addr::SocketAddrV4'>SocketAddrV4</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV6.html' title='struct std::net::addr::SocketAddrV6'>SocketAddrV6</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl&lt;I&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>I, <a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a> <span class='where fmt-newline'>where I: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='struct std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='enum std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='rustc_serialize/json/enum.ParserError.html' title='enum rustc_serialize::json::ParserError'>ParserError</a>&gt; for <a class='enum' href='rustc_serialize/json/enum.DecoderError.html' title='enum rustc_serialize::json::DecoderError'>DecoderError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='rustc_serialize/json/enum.ParserError.html' title='enum rustc_serialize::json::ParserError'>ParserError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='core/fmt/struct.Error.html' title='struct core::fmt::Error'>Error</a>&gt; for <a class='enum' href='rustc_serialize/json/enum.EncoderError.html' title='enum rustc_serialize::json::EncoderError'>EncoderError</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='trait core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>: <a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>ToOwned</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>::<a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>Owned</a> == <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for <a class='struct' href='serde/bytes/struct.Bytes.html' title='struct serde::bytes::Bytes'>Bytes</a>&lt;'a&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;&gt; for <a class='struct' href='serde/bytes/struct.Bytes.html' title='struct serde::bytes::Bytes'>Bytes</a>&lt;'a&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;&gt; for <a class='struct' href='serde/bytes/bytebuf/struct.ByteBuf.html' title='struct serde::bytes::bytebuf::ByteBuf'>ByteBuf</a>","impl&lt;'a, Static&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='string_cache/atom/struct.Atom.html' title='struct string_cache::atom::Atom'>Atom</a>&lt;Static&gt; <span class='where fmt-newline'>where Static: <a class='trait' href='string_cache/atom/trait.StaticAtomSet.html' title='trait string_cache::atom::StaticAtomSet'>StaticAtomSet</a></span>","impl&lt;'a, Static&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='string_cache/atom/struct.Atom.html' title='struct string_cache::atom::Atom'>Atom</a>&lt;Static&gt; <span class='where fmt-newline'>where Static: <a class='trait' href='string_cache/atom/trait.StaticAtomSet.html' title='trait string_cache::atom::StaticAtomSet'>StaticAtomSet</a></span>","impl&lt;Static&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='string_cache/atom/struct.Atom.html' title='struct string_cache::atom::Atom'>Atom</a>&lt;Static&gt; <span class='where fmt-newline'>where Static: <a class='trait' href='string_cache/atom/trait.StaticAtomSet.html' title='trait string_cache::atom::StaticAtomSet'>StaticAtomSet</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='atomic_refcell/struct.AtomicRefCell.html' title='struct atomic_refcell::AtomicRefCell'>AtomicRefCell</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='struct alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='struct alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='url/struct.Url.html' title='struct url::Url'>Url</a>&gt; for <a class='struct' href='servo_url/struct.ServoUrl.html' title='struct servo_url::ServoUrl'>ServoUrl</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;Specificity&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='ordered_float/struct.OrderedFloat.html' title='struct ordered_float::OrderedFloat'>OrderedFloat</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='num_traits/float/trait.Float.html' title='trait num_traits::float::Float'>Float</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='ordered_float/struct.NotNaN.html' title='struct ordered_float::NotNaN'>NotNaN</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='num_traits/float/trait.Float.html' title='trait num_traits::float::Float'>Float</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='style/restyle_hints/struct.RestyleHint.html' title='struct style::restyle_hints::RestyleHint'>RestyleHint</a>&gt; for <a class='struct' href='style/data/struct.StoredRestyleHint.html' title='struct style::data::StoredRestyleHint'>StoredRestyleHint</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='style/rule_tree/struct.StrongRuleNode.html' title='struct style::rule_tree::StrongRuleNode'>StrongRuleNode</a>&gt; for <a class='struct' href='style/rule_tree/struct.WeakRuleNode.html' title='struct style::rule_tree::WeakRuleNode'>WeakRuleNode</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='style/stylesheets/enum.SingleRuleParseError.html' title='enum style::stylesheets::SingleRuleParseError'>SingleRuleParseError</a>&gt; for <a class='enum' href='style/stylesheets/enum.RulesMutateError.html' title='enum style::stylesheets::RulesMutateError'>RulesMutateError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='style/values/computed/length/enum.LengthOrPercentage.html' title='enum style::values::computed::length::LengthOrPercentage'>LengthOrPercentage</a>&gt; for <a class='struct' href='style/values/computed/length/struct.CalcLengthOrPercentage.html' title='struct style::values::computed::length::CalcLengthOrPercentage'>CalcLengthOrPercentage</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='style/values/computed/length/enum.LengthOrPercentageOrAuto.html' title='enum style::values::computed::length::LengthOrPercentageOrAuto'>LengthOrPercentageOrAuto</a>&gt; for <a class='enum' href='core/option/enum.Option.html' title='enum core::option::Option'>Option</a>&lt;<a class='struct' href='style/values/computed/length/struct.CalcLengthOrPercentage.html' title='struct style::values::computed::length::CalcLengthOrPercentage'>CalcLengthOrPercentage</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='style/values/specified/length/enum.NoCalcLength.html' title='enum style::values::specified::length::NoCalcLength'>NoCalcLength</a>&gt; for <a class='enum' href='style/values/specified/length/enum.Length.html' title='enum style::values::specified::length::Length'>Length</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='style/values/specified/length/enum.Length.html' title='enum style::values::specified::length::Length'>Length</a>&gt; for <a class='enum' href='style/values/specified/length/enum.LengthOrPercentage.html' title='enum style::values::specified::length::LengthOrPercentage'>LengthOrPercentage</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='style/values/specified/length/enum.NoCalcLength.html' title='enum style::values::specified::length::NoCalcLength'>NoCalcLength</a>&gt; for <a class='enum' href='style/values/specified/length/enum.LengthOrPercentage.html' title='enum style::values::specified::length::LengthOrPercentage'>LengthOrPercentage</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='style/values/specified/length/struct.Percentage.html' title='struct style::values::specified::length::Percentage'>Percentage</a>&gt; for <a class='enum' href='style/values/specified/length/enum.LengthOrPercentage.html' title='enum style::values::specified::length::LengthOrPercentage'>LengthOrPercentage</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='style/values/specified/length/enum.NoCalcLength.html' title='enum style::values::specified::length::NoCalcLength'>NoCalcLength</a>&gt; for <a class='enum' href='style/values/specified/length/enum.LengthOrPercentageOrAuto.html' title='enum style::values::specified::length::LengthOrPercentageOrAuto'>LengthOrPercentageOrAuto</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='style/values/specified/length/struct.Percentage.html' title='struct style::values::specified::length::Percentage'>Percentage</a>&gt; for <a class='enum' href='style/values/specified/length/enum.LengthOrPercentageOrAuto.html' title='enum style::values::specified::length::LengthOrPercentageOrAuto'>LengthOrPercentageOrAuto</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='style/properties/longhands/background_origin/single_value/computed_value/enum.T.html' title='enum style::properties::longhands::background_origin::single_value::computed_value::T'>SpecifiedValue</a>&gt; for <a class='enum' href='style/properties/longhands/background_clip/single_value/computed_value/enum.T.html' title='enum style::properties::longhands::background_clip::single_value::computed_value::T'>SpecifiedValue</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='style/properties/longhands/transform/computed_value/struct.ComputedMatrix.html' title='struct style::properties::longhands::transform::computed_value::ComputedMatrix'>ComputedMatrix</a>&gt; for <a class='struct' href='style/properties/animated_properties/struct.MatrixDecomposed2D.html' title='struct style::properties::animated_properties::MatrixDecomposed2D'>MatrixDecomposed2D</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='style/properties/animated_properties/struct.MatrixDecomposed2D.html' title='struct style::properties::animated_properties::MatrixDecomposed2D'>MatrixDecomposed2D</a>&gt; for <a class='struct' href='style/properties/longhands/transform/computed_value/struct.ComputedMatrix.html' title='struct style::properties::longhands::transform::computed_value::ComputedMatrix'>ComputedMatrix</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='style/properties/animated_properties/struct.MatrixDecomposed3D.html' title='struct style::properties::animated_properties::MatrixDecomposed3D'>MatrixDecomposed3D</a>&gt; for <a class='struct' href='style/properties/longhands/transform/computed_value/struct.ComputedMatrix.html' title='struct style::properties::longhands::transform::computed_value::ComputedMatrix'>ComputedMatrix</a>",];
implementors["syn"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='syn/enum.ExprKind.html' title='enum syn::ExprKind'>ExprKind</a>&gt; for <a class='struct' href='syn/struct.Expr.html' title='struct syn::Expr'>Expr</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='syn/struct.Ident.html' title='struct syn::Ident'>Ident</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='syn/struct.Ident.html' title='struct syn::Ident'>Ident</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='syn/struct.Ident.html' title='struct syn::Ident'>Ident</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.usize.html'>usize</a>&gt; for <a class='struct' href='syn/struct.Ident.html' title='struct syn::Ident'>Ident</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='syn/struct.DeriveInput.html' title='struct syn::DeriveInput'>DeriveInput</a>&gt; for <a class='struct' href='syn/struct.Item.html' title='struct syn::Item'>Item</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='syn/enum.Lit.html' title='enum syn::Lit'>Lit</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='syn/enum.Lit.html' title='enum syn::Lit'>Lit</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;&gt; for <a class='enum' href='syn/enum.Lit.html' title='enum syn::Lit'>Lit</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for <a class='enum' href='syn/enum.Lit.html' title='enum syn::Lit'>Lit</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.char.html'>char</a>&gt; for <a class='enum' href='syn/enum.Lit.html' title='enum syn::Lit'>Lit</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.bool.html'>bool</a>&gt; for <a class='enum' href='syn/enum.Lit.html' title='enum syn::Lit'>Lit</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.isize.html'>isize</a>&gt; for <a class='enum' href='syn/enum.Lit.html' title='enum syn::Lit'>Lit</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.i8.html'>i8</a>&gt; for <a class='enum' href='syn/enum.Lit.html' title='enum syn::Lit'>Lit</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.i16.html'>i16</a>&gt; for <a class='enum' href='syn/enum.Lit.html' title='enum syn::Lit'>Lit</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.i32.html'>i32</a>&gt; for <a class='enum' href='syn/enum.Lit.html' title='enum syn::Lit'>Lit</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.i64.html'>i64</a>&gt; for <a class='enum' href='syn/enum.Lit.html' title='enum syn::Lit'>Lit</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.usize.html'>usize</a>&gt; for <a class='enum' href='syn/enum.Lit.html' title='enum syn::Lit'>Lit</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt; for <a class='enum' href='syn/enum.Lit.html' title='enum syn::Lit'>Lit</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u16.html'>u16</a>&gt; for <a class='enum' href='syn/enum.Lit.html' title='enum syn::Lit'>Lit</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='enum' href='syn/enum.Lit.html' title='enum syn::Lit'>Lit</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u64.html'>u64</a>&gt; for <a class='enum' href='syn/enum.Lit.html' title='enum syn::Lit'>Lit</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.f32.html'>f32</a>&gt; for <a class='enum' href='syn/enum.Lit.html' title='enum syn::Lit'>Lit</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.f64.html'>f64</a>&gt; for <a class='enum' href='syn/enum.Lit.html' title='enum syn::Lit'>Lit</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='syn/struct.Path.html' title='struct syn::Path'>Path</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='struct' href='syn/struct.PathSegment.html' title='struct syn::PathSegment'>PathSegment</a>&gt;</span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='syn/struct.PathSegment.html' title='struct syn::PathSegment'>PathSegment</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='struct' href='syn/struct.Ident.html' title='struct syn::Ident'>Ident</a>&gt;</span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='struct alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='struct alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='struct std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt;","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='struct std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/io/error/enum.ErrorKind.html' title='enum std::io::error::ErrorKind'>ErrorKind</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='primitive' href='std/primitive.u128.html'>u128</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u128.html'>u128</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV4.html' title='struct std::net::addr::SocketAddrV4'>SocketAddrV4</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV6.html' title='struct std::net::addr::SocketAddrV6'>SocketAddrV6</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl&lt;I&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>I, <a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a> <span class='where fmt-newline'>where I: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='struct std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='enum std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='quote/ident/struct.Ident.html' title='struct quote::ident::Ident'>Ident</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='quote/ident/struct.Ident.html' title='struct quote::ident::Ident'>Ident</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='quote/ident/struct.Ident.html' title='struct quote::ident::Ident'>Ident</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='trait core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>: <a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>ToOwned</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>::<a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>Owned</a> == <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;",];
implementors["synstructure"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='synstructure/enum.BindStyle.html' title='enum synstructure::BindStyle'>BindStyle</a>&gt; for <a class='struct' href='synstructure/struct.BindOpts.html' title='struct synstructure::BindOpts'>BindOpts</a>",];
implementors["tendril"] = ["impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='struct alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='struct alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='struct std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt;","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='struct std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/io/error/enum.ErrorKind.html' title='enum std::io::error::ErrorKind'>ErrorKind</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='primitive' href='std/primitive.u128.html'>u128</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u128.html'>u128</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV4.html' title='struct std::net::addr::SocketAddrV4'>SocketAddrV4</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV6.html' title='struct std::net::addr::SocketAddrV6'>SocketAddrV6</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl&lt;I&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>I, <a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a> <span class='where fmt-newline'>where I: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='struct std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='enum std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='trait core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>: <a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>ToOwned</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>::<a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>Owned</a> == <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;F, A&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='tendril/struct.Tendril.html' title='struct tendril::Tendril'>Tendril</a>&lt;F, A&gt;&gt; for <a class='struct' href='tendril/struct.SendTendril.html' title='struct tendril::SendTendril'>SendTendril</a>&lt;F&gt; <span class='where fmt-newline'>where F: <a class='trait' href='tendril/fmt/trait.Format.html' title='trait tendril::fmt::Format'>Format</a>, A: <a class='trait' href='tendril/tendril/trait.Atomicity.html' title='trait tendril::tendril::Atomicity'>Atomicity</a></span>","impl&lt;F, A&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='tendril/struct.SendTendril.html' title='struct tendril::SendTendril'>SendTendril</a>&lt;F&gt;&gt; for <a class='struct' href='tendril/struct.Tendril.html' title='struct tendril::Tendril'>Tendril</a>&lt;F, A&gt; <span class='where fmt-newline'>where F: <a class='trait' href='tendril/fmt/trait.Format.html' title='trait tendril::fmt::Format'>Format</a>, A: <a class='trait' href='tendril/tendril/trait.Atomicity.html' title='trait tendril::tendril::Atomicity'>Atomicity</a></span>","impl&lt;'a, F, A&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a F::<a class='trait' href='tendril/fmt/trait.SliceFormat.html' title='trait tendril::fmt::SliceFormat'>Slice</a>&gt; for <a class='struct' href='tendril/struct.Tendril.html' title='struct tendril::Tendril'>Tendril</a>&lt;F, A&gt; <span class='where fmt-newline'>where F: <a class='trait' href='tendril/fmt/trait.SliceFormat.html' title='trait tendril::fmt::SliceFormat'>SliceFormat</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A: <a class='trait' href='tendril/tendril/trait.Atomicity.html' title='trait tendril::tendril::Atomicity'>Atomicity</a></span>","impl&lt;A&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='tendril/struct.Tendril.html' title='struct tendril::Tendril'>Tendril</a>&lt;<a class='struct' href='tendril/fmt/struct.UTF8.html' title='struct tendril::fmt::UTF8'>UTF8</a>, A&gt; <span class='where fmt-newline'>where A: <a class='trait' href='tendril/tendril/trait.Atomicity.html' title='trait tendril::tendril::Atomicity'>Atomicity</a></span>","impl&lt;A&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='tendril/struct.Tendril.html' title='struct tendril::Tendril'>Tendril</a>&lt;<a class='struct' href='tendril/fmt/struct.UTF8.html' title='struct tendril::fmt::UTF8'>UTF8</a>, A&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a> <span class='where fmt-newline'>where A: <a class='trait' href='tendril/tendril/trait.Atomicity.html' title='trait tendril::tendril::Atomicity'>Atomicity</a></span>","impl&lt;'a, A&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='tendril/struct.Tendril.html' title='struct tendril::Tendril'>Tendril</a>&lt;<a class='struct' href='tendril/fmt/struct.UTF8.html' title='struct tendril::fmt::UTF8'>UTF8</a>, A&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a> <span class='where fmt-newline'>where A: <a class='trait' href='tendril/tendril/trait.Atomicity.html' title='trait tendril::tendril::Atomicity'>Atomicity</a></span>",];
implementors["unicase"] = ["impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt;",];
implementors["url"] = ["impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='struct alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='struct alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='struct std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt;","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='struct std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/io/error/enum.ErrorKind.html' title='enum std::io::error::ErrorKind'>ErrorKind</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='primitive' href='std/primitive.u128.html'>u128</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u128.html'>u128</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV4.html' title='struct std::net::addr::SocketAddrV4'>SocketAddrV4</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV6.html' title='struct std::net::addr::SocketAddrV6'>SocketAddrV6</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl&lt;I&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>I, <a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a> <span class='where fmt-newline'>where I: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='struct std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='enum std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='trait core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>: <a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>ToOwned</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>::<a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>Owned</a> == <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;S&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='url/enum.Host.html' title='enum url::Host'>Host</a>&lt;S&gt;&gt; for <a class='enum' href='url/host/enum.HostInternal.html' title='enum url::host::HostInternal'>HostInternal</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='idna/uts46/struct.Errors.html' title='struct idna::uts46::Errors'>Errors</a>&gt; for <a class='enum' href='url/enum.ParseError.html' title='enum url::ParseError'>ParseError</a>","impl&lt;'a, E:&nbsp;<a class='trait' href='url/percent_encoding/trait.EncodeSet.html' title='trait url::percent_encoding::EncodeSet'>EncodeSet</a>&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='url/percent_encoding/struct.PercentEncode.html' title='struct url::percent_encoding::PercentEncode'>PercentEncode</a>&lt;'a, E&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='url/percent_encoding/struct.PercentDecode.html' title='struct url::percent_encoding::PercentDecode'>PercentDecode</a>&lt;'a&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt;",];
implementors["void"] = [];
implementors["webdriver"] = ["impl&lt;T:&nbsp;<a class='trait' href='rustc_serialize/json/trait.ToJson.html' title='trait rustc_serialize::json::ToJson'>ToJson</a>&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='core/option/enum.Option.html' title='enum core::option::Option'>Option</a>&lt;T&gt;&gt; for <a class='enum' href='webdriver/common/enum.Nullable.html' title='enum webdriver::common::Nullable'>Nullable</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='webdriver/common/struct.WebElement.html' title='struct webdriver::common::WebElement'>WebElement</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt;</span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='rustc_serialize/json/enum.ParserError.html' title='enum rustc_serialize::json::ParserError'>ParserError</a>&gt; for <a class='struct' href='webdriver/error/struct.WebDriverError.html' title='struct webdriver::error::WebDriverError'>WebDriverError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>IoError</a>&gt; for <a class='struct' href='webdriver/error/struct.WebDriverError.html' title='struct webdriver::error::WebDriverError'>WebDriverError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='rustc_serialize/json/enum.DecoderError.html' title='enum rustc_serialize::json::DecoderError'>DecoderError</a>&gt; for <a class='struct' href='webdriver/error/struct.WebDriverError.html' title='struct webdriver::error::WebDriverError'>WebDriverError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='rustc_serialize/base64/enum.FromBase64Error.html' title='enum rustc_serialize::base64::FromBase64Error'>FromBase64Error</a>&gt; for <a class='struct' href='webdriver/error/struct.WebDriverError.html' title='struct webdriver::error::WebDriverError'>WebDriverError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a>&gt;&gt; for <a class='struct' href='webdriver/error/struct.WebDriverError.html' title='struct webdriver::error::WebDriverError'>WebDriverError</a>",];
implementors["webrender"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='webrender/prim_store/struct.TextRunPrimitiveGpu.html' title='struct webrender::prim_store::TextRunPrimitiveGpu'>TextRunPrimitiveGpu</a>&gt; for <a class='struct' href='webrender/prim_store/struct.GpuBlock16.html' title='struct webrender::prim_store::GpuBlock16'>GpuBlock16</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='webrender/prim_store/struct.RectanglePrimitive.html' title='struct webrender::prim_store::RectanglePrimitive'>RectanglePrimitive</a>&gt; for <a class='struct' href='webrender/prim_store/struct.GpuBlock16.html' title='struct webrender::prim_store::GpuBlock16'>GpuBlock16</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='webrender/prim_store/struct.InstanceRect.html' title='struct webrender::prim_store::InstanceRect'>InstanceRect</a>&gt; for <a class='struct' href='webrender/prim_store/struct.GpuBlock16.html' title='struct webrender::prim_store::GpuBlock16'>GpuBlock16</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='webrender/prim_store/struct.ImagePrimitiveGpu.html' title='struct webrender::prim_store::ImagePrimitiveGpu'>ImagePrimitiveGpu</a>&gt; for <a class='struct' href='webrender/prim_store/struct.GpuBlock16.html' title='struct webrender::prim_store::GpuBlock16'>GpuBlock16</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='webrender/prim_store/struct.GlyphPrimitive.html' title='struct webrender::prim_store::GlyphPrimitive'>GlyphPrimitive</a>&gt; for <a class='struct' href='webrender/prim_store/struct.GpuBlock16.html' title='struct webrender::prim_store::GpuBlock16'>GpuBlock16</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='webrender/prim_store/struct.GradientPrimitiveGpu.html' title='struct webrender::prim_store::GradientPrimitiveGpu'>GradientPrimitiveGpu</a>&gt; for <a class='struct' href='webrender/prim_store/struct.GpuBlock32.html' title='struct webrender::prim_store::GpuBlock32'>GpuBlock32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='webrender/prim_store/struct.GradientStopGpu.html' title='struct webrender::prim_store::GradientStopGpu'>GradientStopGpu</a>&gt; for <a class='struct' href='webrender/prim_store/struct.GpuBlock32.html' title='struct webrender::prim_store::GpuBlock32'>GpuBlock32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='webrender/prim_store/struct.RadialGradientPrimitiveGpu.html' title='struct webrender::prim_store::RadialGradientPrimitiveGpu'>RadialGradientPrimitiveGpu</a>&gt; for <a class='struct' href='webrender/prim_store/struct.GpuBlock32.html' title='struct webrender::prim_store::GpuBlock32'>GpuBlock32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='webrender/prim_store/struct.YuvImagePrimitiveGpu.html' title='struct webrender::prim_store::YuvImagePrimitiveGpu'>YuvImagePrimitiveGpu</a>&gt; for <a class='struct' href='webrender/prim_store/struct.GpuBlock64.html' title='struct webrender::prim_store::GpuBlock64'>GpuBlock64</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='webrender/prim_store/struct.ClipRect.html' title='struct webrender::prim_store::ClipRect'>ClipRect</a>&gt; for <a class='struct' href='webrender/prim_store/struct.GpuBlock32.html' title='struct webrender::prim_store::GpuBlock32'>GpuBlock32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='webrender/prim_store/struct.ImageMaskData.html' title='struct webrender::prim_store::ImageMaskData'>ImageMaskData</a>&gt; for <a class='struct' href='webrender/prim_store/struct.GpuBlock32.html' title='struct webrender::prim_store::GpuBlock32'>GpuBlock32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='webrender/prim_store/struct.ClipCorner.html' title='struct webrender::prim_store::ClipCorner'>ClipCorner</a>&gt; for <a class='struct' href='webrender/prim_store/struct.GpuBlock32.html' title='struct webrender::prim_store::GpuBlock32'>GpuBlock32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='webrender/prim_store/struct.BoxShadowPrimitiveGpu.html' title='struct webrender::prim_store::BoxShadowPrimitiveGpu'>BoxShadowPrimitiveGpu</a>&gt; for <a class='struct' href='webrender/prim_store/struct.GpuBlock64.html' title='struct webrender::prim_store::GpuBlock64'>GpuBlock64</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='webrender/prim_store/struct.BorderPrimitiveGpu.html' title='struct webrender::prim_store::BorderPrimitiveGpu'>BorderPrimitiveGpu</a>&gt; for <a class='struct' href='webrender/prim_store/struct.GpuBlock128.html' title='struct webrender::prim_store::GpuBlock128'>GpuBlock128</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;UnixError&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='enum' href='bincode/serde/enum.ErrorKind.html' title='enum bincode::serde::ErrorKind'>ErrorKind</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;UnixError&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='rustc_serialize/json/enum.ParserError.html' title='enum rustc_serialize::json::ParserError'>ParserError</a>&gt; for <a class='enum' href='rustc_serialize/json/enum.DecoderError.html' title='enum rustc_serialize::json::DecoderError'>DecoderError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='rustc_serialize/json/enum.ParserError.html' title='enum rustc_serialize::json::ParserError'>ParserError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='core/fmt/struct.Error.html' title='struct core::fmt::Error'>Error</a>&gt; for <a class='enum' href='rustc_serialize/json/enum.EncoderError.html' title='enum rustc_serialize::json::EncoderError'>EncoderError</a>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='struct std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt;","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='struct std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/io/error/enum.ErrorKind.html' title='enum std::io::error::ErrorKind'>ErrorKind</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='primitive' href='std/primitive.u128.html'>u128</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u128.html'>u128</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV4.html' title='struct std::net::addr::SocketAddrV4'>SocketAddrV4</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV6.html' title='struct std::net::addr::SocketAddrV6'>SocketAddrV6</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl&lt;I&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>I, <a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a> <span class='where fmt-newline'>where I: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='struct std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='enum std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for <a class='struct' href='serde/bytes/struct.Bytes.html' title='struct serde::bytes::Bytes'>Bytes</a>&lt;'a&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;&gt; for <a class='struct' href='serde/bytes/struct.Bytes.html' title='struct serde::bytes::Bytes'>Bytes</a>&lt;'a&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;&gt; for <a class='struct' href='serde/bytes/bytebuf/struct.ByteBuf.html' title='struct serde::bytes::bytebuf::ByteBuf'>ByteBuf</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='struct alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='struct alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XAnyEvent.html' title='struct x11::xlib::XAnyEvent'>XAnyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XAnyEvent.html' title='struct x11::xlib::XAnyEvent'>XAnyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XAnyEvent.html' title='struct x11::xlib::XAnyEvent'>XAnyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XAnyEvent.html' title='struct x11::xlib::XAnyEvent'>XAnyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XButtonEvent.html' title='struct x11::xlib::XButtonEvent'>XButtonEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XButtonEvent.html' title='struct x11::xlib::XButtonEvent'>XButtonEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XButtonEvent.html' title='struct x11::xlib::XButtonEvent'>XButtonEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XButtonEvent.html' title='struct x11::xlib::XButtonEvent'>XButtonEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XCirculateEvent.html' title='struct x11::xlib::XCirculateEvent'>XCirculateEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XCirculateEvent.html' title='struct x11::xlib::XCirculateEvent'>XCirculateEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCirculateEvent.html' title='struct x11::xlib::XCirculateEvent'>XCirculateEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCirculateEvent.html' title='struct x11::xlib::XCirculateEvent'>XCirculateEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XCirculateRequestEvent.html' title='struct x11::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XCirculateRequestEvent.html' title='struct x11::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCirculateRequestEvent.html' title='struct x11::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCirculateRequestEvent.html' title='struct x11::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XClientMessageEvent.html' title='struct x11::xlib::XClientMessageEvent'>XClientMessageEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XClientMessageEvent.html' title='struct x11::xlib::XClientMessageEvent'>XClientMessageEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XClientMessageEvent.html' title='struct x11::xlib::XClientMessageEvent'>XClientMessageEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XClientMessageEvent.html' title='struct x11::xlib::XClientMessageEvent'>XClientMessageEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XColormapEvent.html' title='struct x11::xlib::XColormapEvent'>XColormapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XColormapEvent.html' title='struct x11::xlib::XColormapEvent'>XColormapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XColormapEvent.html' title='struct x11::xlib::XColormapEvent'>XColormapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XColormapEvent.html' title='struct x11::xlib::XColormapEvent'>XColormapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XConfigureEvent.html' title='struct x11::xlib::XConfigureEvent'>XConfigureEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XConfigureEvent.html' title='struct x11::xlib::XConfigureEvent'>XConfigureEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XConfigureEvent.html' title='struct x11::xlib::XConfigureEvent'>XConfigureEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XConfigureEvent.html' title='struct x11::xlib::XConfigureEvent'>XConfigureEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XConfigureRequestEvent.html' title='struct x11::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XConfigureRequestEvent.html' title='struct x11::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XConfigureRequestEvent.html' title='struct x11::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XConfigureRequestEvent.html' title='struct x11::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XCreateWindowEvent.html' title='struct x11::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XCreateWindowEvent.html' title='struct x11::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCreateWindowEvent.html' title='struct x11::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCreateWindowEvent.html' title='struct x11::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XCrossingEvent.html' title='struct x11::xlib::XCrossingEvent'>XCrossingEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XCrossingEvent.html' title='struct x11::xlib::XCrossingEvent'>XCrossingEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCrossingEvent.html' title='struct x11::xlib::XCrossingEvent'>XCrossingEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCrossingEvent.html' title='struct x11::xlib::XCrossingEvent'>XCrossingEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XDestroyWindowEvent.html' title='struct x11::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XDestroyWindowEvent.html' title='struct x11::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XDestroyWindowEvent.html' title='struct x11::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XDestroyWindowEvent.html' title='struct x11::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XErrorEvent.html' title='struct x11::xlib::XErrorEvent'>XErrorEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XErrorEvent.html' title='struct x11::xlib::XErrorEvent'>XErrorEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XErrorEvent.html' title='struct x11::xlib::XErrorEvent'>XErrorEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XErrorEvent.html' title='struct x11::xlib::XErrorEvent'>XErrorEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XExposeEvent.html' title='struct x11::xlib::XExposeEvent'>XExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XExposeEvent.html' title='struct x11::xlib::XExposeEvent'>XExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XExposeEvent.html' title='struct x11::xlib::XExposeEvent'>XExposeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XExposeEvent.html' title='struct x11::xlib::XExposeEvent'>XExposeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XFocusChangeEvent.html' title='struct x11::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XFocusChangeEvent.html' title='struct x11::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XFocusChangeEvent.html' title='struct x11::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XFocusChangeEvent.html' title='struct x11::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XGenericEventCookie.html' title='struct x11::xlib::XGenericEventCookie'>XGenericEventCookie</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XGenericEventCookie.html' title='struct x11::xlib::XGenericEventCookie'>XGenericEventCookie</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGenericEventCookie.html' title='struct x11::xlib::XGenericEventCookie'>XGenericEventCookie</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGenericEventCookie.html' title='struct x11::xlib::XGenericEventCookie'>XGenericEventCookie</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XGraphicsExposeEvent.html' title='struct x11::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XGraphicsExposeEvent.html' title='struct x11::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGraphicsExposeEvent.html' title='struct x11::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGraphicsExposeEvent.html' title='struct x11::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XGravityEvent.html' title='struct x11::xlib::XGravityEvent'>XGravityEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XGravityEvent.html' title='struct x11::xlib::XGravityEvent'>XGravityEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGravityEvent.html' title='struct x11::xlib::XGravityEvent'>XGravityEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGravityEvent.html' title='struct x11::xlib::XGravityEvent'>XGravityEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XKeyEvent.html' title='struct x11::xlib::XKeyEvent'>XKeyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XKeyEvent.html' title='struct x11::xlib::XKeyEvent'>XKeyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XKeyEvent.html' title='struct x11::xlib::XKeyEvent'>XKeyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XKeyEvent.html' title='struct x11::xlib::XKeyEvent'>XKeyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XKeymapEvent.html' title='struct x11::xlib::XKeymapEvent'>XKeymapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XKeymapEvent.html' title='struct x11::xlib::XKeymapEvent'>XKeymapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XKeymapEvent.html' title='struct x11::xlib::XKeymapEvent'>XKeymapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XKeymapEvent.html' title='struct x11::xlib::XKeymapEvent'>XKeymapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XMapEvent.html' title='struct x11::xlib::XMapEvent'>XMapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XMapEvent.html' title='struct x11::xlib::XMapEvent'>XMapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMapEvent.html' title='struct x11::xlib::XMapEvent'>XMapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMapEvent.html' title='struct x11::xlib::XMapEvent'>XMapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XMappingEvent.html' title='struct x11::xlib::XMappingEvent'>XMappingEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XMappingEvent.html' title='struct x11::xlib::XMappingEvent'>XMappingEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMappingEvent.html' title='struct x11::xlib::XMappingEvent'>XMappingEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMappingEvent.html' title='struct x11::xlib::XMappingEvent'>XMappingEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XMapRequestEvent.html' title='struct x11::xlib::XMapRequestEvent'>XMapRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XMapRequestEvent.html' title='struct x11::xlib::XMapRequestEvent'>XMapRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMapRequestEvent.html' title='struct x11::xlib::XMapRequestEvent'>XMapRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMapRequestEvent.html' title='struct x11::xlib::XMapRequestEvent'>XMapRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XMotionEvent.html' title='struct x11::xlib::XMotionEvent'>XMotionEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XMotionEvent.html' title='struct x11::xlib::XMotionEvent'>XMotionEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMotionEvent.html' title='struct x11::xlib::XMotionEvent'>XMotionEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMotionEvent.html' title='struct x11::xlib::XMotionEvent'>XMotionEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XNoExposeEvent.html' title='struct x11::xlib::XNoExposeEvent'>XNoExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XNoExposeEvent.html' title='struct x11::xlib::XNoExposeEvent'>XNoExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XNoExposeEvent.html' title='struct x11::xlib::XNoExposeEvent'>XNoExposeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XNoExposeEvent.html' title='struct x11::xlib::XNoExposeEvent'>XNoExposeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XPropertyEvent.html' title='struct x11::xlib::XPropertyEvent'>XPropertyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XPropertyEvent.html' title='struct x11::xlib::XPropertyEvent'>XPropertyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XPropertyEvent.html' title='struct x11::xlib::XPropertyEvent'>XPropertyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XPropertyEvent.html' title='struct x11::xlib::XPropertyEvent'>XPropertyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XReparentEvent.html' title='struct x11::xlib::XReparentEvent'>XReparentEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XReparentEvent.html' title='struct x11::xlib::XReparentEvent'>XReparentEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XReparentEvent.html' title='struct x11::xlib::XReparentEvent'>XReparentEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XReparentEvent.html' title='struct x11::xlib::XReparentEvent'>XReparentEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XResizeRequestEvent.html' title='struct x11::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XResizeRequestEvent.html' title='struct x11::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XResizeRequestEvent.html' title='struct x11::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XResizeRequestEvent.html' title='struct x11::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XSelectionClearEvent.html' title='struct x11::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XSelectionClearEvent.html' title='struct x11::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionClearEvent.html' title='struct x11::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionClearEvent.html' title='struct x11::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XSelectionEvent.html' title='struct x11::xlib::XSelectionEvent'>XSelectionEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XSelectionEvent.html' title='struct x11::xlib::XSelectionEvent'>XSelectionEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionEvent.html' title='struct x11::xlib::XSelectionEvent'>XSelectionEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionEvent.html' title='struct x11::xlib::XSelectionEvent'>XSelectionEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XSelectionRequestEvent.html' title='struct x11::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XSelectionRequestEvent.html' title='struct x11::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionRequestEvent.html' title='struct x11::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionRequestEvent.html' title='struct x11::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XUnmapEvent.html' title='struct x11::xlib::XUnmapEvent'>XUnmapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XUnmapEvent.html' title='struct x11::xlib::XUnmapEvent'>XUnmapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XUnmapEvent.html' title='struct x11::xlib::XUnmapEvent'>XUnmapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XUnmapEvent.html' title='struct x11::xlib::XUnmapEvent'>XUnmapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XVisibilityEvent.html' title='struct x11::xlib::XVisibilityEvent'>XVisibilityEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XVisibilityEvent.html' title='struct x11::xlib::XVisibilityEvent'>XVisibilityEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XVisibilityEvent.html' title='struct x11::xlib::XVisibilityEvent'>XVisibilityEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XVisibilityEvent.html' title='struct x11::xlib::XVisibilityEvent'>XVisibilityEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.i8.html'>i8</a><a class='primitive' href='std/primitive.array.html'>; 20]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 20]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.i16.html'>i16</a><a class='primitive' href='std/primitive.array.html'>; 10]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 10]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.i64.html'>i64</a><a class='primitive' href='std/primitive.array.html'>; 5]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u64.html'>u64</a><a class='primitive' href='std/primitive.array.html'>; 5]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xf86vmode/struct.XF86VidModeNotifyEvent.html' title='struct x11::xf86vmode::XF86VidModeNotifyEvent'>XF86VidModeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xf86vmode/struct.XF86VidModeNotifyEvent.html' title='struct x11::xf86vmode::XF86VidModeNotifyEvent'>XF86VidModeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xf86vmode/struct.XF86VidModeNotifyEvent.html' title='struct x11::xf86vmode::XF86VidModeNotifyEvent'>XF86VidModeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xf86vmode/struct.XF86VidModeNotifyEvent.html' title='struct x11::xf86vmode::XF86VidModeNotifyEvent'>XF86VidModeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRScreenChangeNotifyEvent.html' title='struct x11::xrandr::XRRScreenChangeNotifyEvent'>XRRScreenChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRScreenChangeNotifyEvent.html' title='struct x11::xrandr::XRRScreenChangeNotifyEvent'>XRRScreenChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRScreenChangeNotifyEvent.html' title='struct x11::xrandr::XRRScreenChangeNotifyEvent'>XRRScreenChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRScreenChangeNotifyEvent.html' title='struct x11::xrandr::XRRScreenChangeNotifyEvent'>XRRScreenChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRNotifyEvent.html' title='struct x11::xrandr::XRRNotifyEvent'>XRRNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRNotifyEvent.html' title='struct x11::xrandr::XRRNotifyEvent'>XRRNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRNotifyEvent.html' title='struct x11::xrandr::XRRNotifyEvent'>XRRNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRNotifyEvent.html' title='struct x11::xrandr::XRRNotifyEvent'>XRRNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRROutputChangeNotifyEvent.html' title='struct x11::xrandr::XRROutputChangeNotifyEvent'>XRROutputChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRROutputChangeNotifyEvent.html' title='struct x11::xrandr::XRROutputChangeNotifyEvent'>XRROutputChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRROutputChangeNotifyEvent.html' title='struct x11::xrandr::XRROutputChangeNotifyEvent'>XRROutputChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRROutputChangeNotifyEvent.html' title='struct x11::xrandr::XRROutputChangeNotifyEvent'>XRROutputChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRCrtcChangeNotifyEvent.html' title='struct x11::xrandr::XRRCrtcChangeNotifyEvent'>XRRCrtcChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRCrtcChangeNotifyEvent.html' title='struct x11::xrandr::XRRCrtcChangeNotifyEvent'>XRRCrtcChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRCrtcChangeNotifyEvent.html' title='struct x11::xrandr::XRRCrtcChangeNotifyEvent'>XRRCrtcChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRCrtcChangeNotifyEvent.html' title='struct x11::xrandr::XRRCrtcChangeNotifyEvent'>XRRCrtcChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRROutputPropertyNotifyEvent.html' title='struct x11::xrandr::XRROutputPropertyNotifyEvent'>XRROutputPropertyNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRROutputPropertyNotifyEvent.html' title='struct x11::xrandr::XRROutputPropertyNotifyEvent'>XRROutputPropertyNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRROutputPropertyNotifyEvent.html' title='struct x11::xrandr::XRROutputPropertyNotifyEvent'>XRROutputPropertyNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRROutputPropertyNotifyEvent.html' title='struct x11::xrandr::XRROutputPropertyNotifyEvent'>XRROutputPropertyNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRProviderChangeNotifyEvent.html' title='struct x11::xrandr::XRRProviderChangeNotifyEvent'>XRRProviderChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRProviderChangeNotifyEvent.html' title='struct x11::xrandr::XRRProviderChangeNotifyEvent'>XRRProviderChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRProviderChangeNotifyEvent.html' title='struct x11::xrandr::XRRProviderChangeNotifyEvent'>XRRProviderChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRProviderChangeNotifyEvent.html' title='struct x11::xrandr::XRRProviderChangeNotifyEvent'>XRRProviderChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRProviderPropertyNotifyEvent.html' title='struct x11::xrandr::XRRProviderPropertyNotifyEvent'>XRRProviderPropertyNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRProviderPropertyNotifyEvent.html' title='struct x11::xrandr::XRRProviderPropertyNotifyEvent'>XRRProviderPropertyNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRProviderPropertyNotifyEvent.html' title='struct x11::xrandr::XRRProviderPropertyNotifyEvent'>XRRProviderPropertyNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRProviderPropertyNotifyEvent.html' title='struct x11::xrandr::XRRProviderPropertyNotifyEvent'>XRRProviderPropertyNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRResourceChangeNotifyEvent.html' title='struct x11::xrandr::XRRResourceChangeNotifyEvent'>XRRResourceChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRResourceChangeNotifyEvent.html' title='struct x11::xrandr::XRRResourceChangeNotifyEvent'>XRRResourceChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRResourceChangeNotifyEvent.html' title='struct x11::xrandr::XRRResourceChangeNotifyEvent'>XRRResourceChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRResourceChangeNotifyEvent.html' title='struct x11::xrandr::XRRResourceChangeNotifyEvent'>XRRResourceChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xss/struct.XScreenSaverNotifyEvent.html' title='struct x11::xss::XScreenSaverNotifyEvent'>XScreenSaverNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xss/struct.XScreenSaverNotifyEvent.html' title='struct x11::xss::XScreenSaverNotifyEvent'>XScreenSaverNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xss/struct.XScreenSaverNotifyEvent.html' title='struct x11::xss::XScreenSaverNotifyEvent'>XScreenSaverNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xss/struct.XScreenSaverNotifyEvent.html' title='struct x11::xss::XScreenSaverNotifyEvent'>XScreenSaverNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for &amp;'a <a class='struct' href='mio/iovec/struct.IoVec.html' title='struct mio::iovec::IoVec'>IoVec</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a mut [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for &amp;'a mut <a class='struct' href='mio/iovec/struct.IoVec.html' title='struct mio::iovec::IoVec'>IoVec</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for &amp;'a IoVec","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a mut [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for &amp;'a mut IoVec","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.usize.html'>usize</a>&gt; for <a class='struct' href='mio/token/struct.Token.html' title='struct mio::token::Token'>Token</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='mio/token/struct.Token.html' title='struct mio::token::Token'>Token</a>&gt; for <a class='primitive' href='std/primitive.usize.html'>usize</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sync/mpsc/struct.SendError.html' title='struct std::sync::mpsc::SendError'>SendError</a>&lt;T&gt;&gt; for <a class='enum' href='mio/channel/enum.SendError.html' title='enum mio::channel::SendError'>SendError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='mio/channel/enum.SendError.html' title='enum mio::channel::SendError'>SendError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/sync/mpsc/enum.TrySendError.html' title='enum std::sync::mpsc::TrySendError'>TrySendError</a>&lt;T&gt;&gt; for <a class='enum' href='mio/channel/enum.TrySendError.html' title='enum mio::channel::TrySendError'>TrySendError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sync/mpsc/struct.SendError.html' title='struct std::sync::mpsc::SendError'>SendError</a>&lt;T&gt;&gt; for <a class='enum' href='mio/channel/enum.TrySendError.html' title='enum mio::channel::TrySendError'>TrySendError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='mio/channel/enum.TrySendError.html' title='enum mio::channel::TrySendError'>TrySendError</a>&lt;T&gt;","impl&lt;M&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='mio/channel/enum.TrySendError.html' title='enum mio::channel::TrySendError'>TrySendError</a>&lt;M&gt;&gt; for <a class='enum' href='mio/deprecated/notify/enum.NotifyError.html' title='enum mio::deprecated::notify::NotifyError'>NotifyError</a>&lt;M&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;UnixSocket&gt; for <a class='struct' href='mio/deprecated/unix/struct.UnixSocket.html' title='struct mio::deprecated::unix::UnixSocket'>UnixSocket</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;UnixSocket&gt; for <a class='struct' href='mio/deprecated/unix/struct.UnixStream.html' title='struct mio::deprecated::unix::UnixStream'>UnixStream</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;UnixSocket&gt; for <a class='struct' href='mio/deprecated/unix/struct.UnixListener.html' title='struct mio::deprecated::unix::UnixListener'>UnixListener</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='mio/sys/unix/io/struct.Io.html' title='struct mio::sys::unix::io::Io'>Io</a>&gt; for <a class='struct' href='mio/deprecated/unix/struct.PipeReader.html' title='struct mio::deprecated::unix::PipeReader'>PipeReader</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='mio/sys/unix/io/struct.Io.html' title='struct mio::sys::unix::io::Io'>Io</a>&gt; for <a class='struct' href='mio/deprecated/unix/struct.PipeWriter.html' title='struct mio::deprecated::unix::PipeWriter'>PipeWriter</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='enum' href='webrender_traits/enum.PropertyBinding.html' title='enum webrender_traits::PropertyBinding'>PropertyBinding</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='webrender_traits/struct.PropertyBindingKey.html' title='struct webrender_traits::PropertyBindingKey'>PropertyBindingKey</a>&lt;T&gt;&gt; for <a class='enum' href='webrender_traits/enum.PropertyBinding.html' title='enum webrender_traits::PropertyBinding'>PropertyBinding</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='webrender_traits/struct.ColorF.html' title='struct webrender_traits::ColorF'>ColorF</a>&gt; for <a class='struct' href='webrender_traits/struct.ColorU.html' title='struct webrender_traits::ColorU'>ColorU</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='enum' href='bincode/serde/enum.ErrorKind.html' title='enum bincode::serde::ErrorKind'>ErrorKind</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='trait core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>: <a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>ToOwned</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>::<a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>Owned</a> == <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='webrender/device/enum.ShaderError.html' title='enum webrender::device::ShaderError'>ShaderError</a>&gt; for <a class='enum' href='webrender/renderer/enum.InitError.html' title='enum webrender::renderer::InitError'>InitError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='webrender/renderer/enum.InitError.html' title='enum webrender::renderer::InitError'>InitError</a>",];
implementors["webrender_traits"] = ["impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='enum' href='webrender_traits/enum.PropertyBinding.html' title='enum webrender_traits::PropertyBinding'>PropertyBinding</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='webrender_traits/struct.PropertyBindingKey.html' title='struct webrender_traits::PropertyBindingKey'>PropertyBindingKey</a>&lt;T&gt;&gt; for <a class='enum' href='webrender_traits/enum.PropertyBinding.html' title='enum webrender_traits::PropertyBinding'>PropertyBinding</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='webrender_traits/struct.ColorF.html' title='struct webrender_traits::ColorF'>ColorF</a>&gt; for <a class='struct' href='webrender_traits/struct.ColorU.html' title='struct webrender_traits::ColorU'>ColorU</a>",];
implementors["websocket"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;&gt; for <a class='struct' href='solicit/http/frame/struct.RawFrame.html' title='struct solicit::http::frame::RawFrame'>RawFrame</a>","impl&lt;E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='enum' href='solicit/http/session/enum.StreamDataError.html' title='enum solicit::http::session::StreamDataError'>StreamDataError</a> <span class='where fmt-newline'>where E: <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a> + 'static</span>","impl&lt;E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='enum' href='solicit/http/enum.HttpError.html' title='enum solicit::http::HttpError'>HttpError</a> <span class='where fmt-newline'>where E: <a class='trait' href='solicit/http/client/trait.HttpConnectError.html' title='trait solicit::http::client::HttpConnectError'>HttpConnectError</a> + 'static</span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='struct' href='solicit/http/client/struct.CleartextConnectError.html' title='struct solicit::http::client::CleartextConnectError'>CleartextConnectError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='solicit/http/enum.HttpError.html' title='enum solicit::http::HttpError'>HttpError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='openssl/ssl/error/enum.SslError.html' title='enum openssl::ssl::error::SslError'>SslError</a>&gt; for <a class='enum' href='openssl/ssl/error/enum.NonblockingSslError.html' title='enum openssl::ssl::error::NonblockingSslError'>NonblockingSslError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='idna/uts46/struct.Errors.html' title='struct idna::uts46::Errors'>Errors</a>&gt; for <a class='enum' href='url/parser/enum.ParseError.html' title='enum url::parser::ParseError'>ParseError</a>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='url/percent_encoding/struct.PercentEncode.html' title='struct url::percent_encoding::PercentEncode'>PercentEncode</a>&lt;'a, E&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt; <span class='where fmt-newline'>where E: <a class='trait' href='url/percent_encoding/trait.EncodeSet.html' title='trait url::percent_encoding::EncodeSet'>EncodeSet</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='url/percent_encoding/struct.PercentDecode.html' title='struct url::percent_encoding::PercentDecode'>PercentDecode</a>&lt;'a&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='rustc_serialize/json/enum.ParserError.html' title='enum rustc_serialize::json::ParserError'>ParserError</a>&gt; for <a class='enum' href='rustc_serialize/json/enum.DecoderError.html' title='enum rustc_serialize::json::DecoderError'>DecoderError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='rustc_serialize/json/enum.ParserError.html' title='enum rustc_serialize::json::ParserError'>ParserError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='core/fmt/struct.Error.html' title='struct core::fmt::Error'>Error</a>&gt; for <a class='enum' href='rustc_serialize/json/enum.EncoderError.html' title='enum rustc_serialize::json::EncoderError'>EncoderError</a>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='struct std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt;","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='struct std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/io/error/enum.ErrorKind.html' title='enum std::io::error::ErrorKind'>ErrorKind</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='primitive' href='std/primitive.u128.html'>u128</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u128.html'>u128</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV4.html' title='struct std::net::addr::SocketAddrV4'>SocketAddrV4</a>&gt; for <a class='enum' href='websocket/stream/enum.SocketAddr.html' title='enum websocket::stream::SocketAddr'>SocketAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV6.html' title='struct std::net::addr::SocketAddrV6'>SocketAddrV6</a>&gt; for <a class='enum' href='websocket/stream/enum.SocketAddr.html' title='enum websocket::stream::SocketAddr'>SocketAddr</a>","impl&lt;I&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>I, <a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='websocket/stream/enum.SocketAddr.html' title='enum websocket::stream::SocketAddr'>SocketAddr</a> <span class='where fmt-newline'>where I: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='struct std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='enum std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='struct alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='struct alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl&lt;'a, R&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a mut R&gt; for <a class='enum' href='hyper/client/enum.Body.html' title='enum hyper::client::Body'>Body</a>&lt;'a&gt; <span class='where fmt-newline'>where R: <a class='trait' href='std/io/trait.Read.html' title='trait std::io::Read'>Read</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='url/parser/enum.ParseError.html' title='enum url::parser::ParseError'>ParseError</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='openssl/ssl/error/enum.SslError.html' title='enum openssl::ssl::error::SslError'>SslError</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='core/str/struct.Utf8Error.html' title='struct core::str::Utf8Error'>Utf8Error</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.FromUtf8Error.html' title='struct collections::string::FromUtf8Error'>FromUtf8Error</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='httparse/enum.Error.html' title='enum httparse::Error'>Error</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='solicit/http/enum.HttpError.html' title='enum solicit::http::HttpError'>HttpError</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>Error</a>","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='hyper/http/h1/struct.EndError.html' title='struct hyper::http::h1::EndError'>EndError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a> <span class='where fmt-newline'>where W: <a class='trait' href='std/io/trait.Write.html' title='trait std::io::Write'>Write</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='hyper/net/trait.NetworkStream.html' title='trait hyper::net::NetworkStream'>NetworkStream</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='hyper/net/trait.NetworkStream.html' title='trait hyper::net::NetworkStream'>NetworkStream</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/tcp/struct.TcpListener.html' title='struct std::net::tcp::TcpListener'>TcpListener</a>&gt; for <a class='struct' href='hyper/net/struct.HttpListener.html' title='struct hyper::net::HttpListener'>HttpListener</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='trait core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>: <a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>ToOwned</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>::<a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>Owned</a> == <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='websocket/result/enum.WebSocketError.html' title='enum websocket::result::WebSocketError'>WebSocketError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='hyper/error/enum.Error.html' title='enum hyper::error::Error'>HttpError</a>&gt; for <a class='enum' href='websocket/result/enum.WebSocketError.html' title='enum websocket::result::WebSocketError'>WebSocketError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='url/parser/enum.ParseError.html' title='enum url::parser::ParseError'>ParseError</a>&gt; for <a class='enum' href='websocket/result/enum.WebSocketError.html' title='enum websocket::result::WebSocketError'>WebSocketError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='openssl/ssl/error/enum.SslError.html' title='enum openssl::ssl::error::SslError'>SslError</a>&gt; for <a class='enum' href='websocket/result/enum.WebSocketError.html' title='enum websocket::result::WebSocketError'>WebSocketError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='core/str/struct.Utf8Error.html' title='struct core::str::Utf8Error'>Utf8Error</a>&gt; for <a class='enum' href='websocket/result/enum.WebSocketError.html' title='enum websocket::result::WebSocketError'>WebSocketError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='websocket/result/enum.WSUrlErrorKind.html' title='enum websocket::result::WSUrlErrorKind'>WSUrlErrorKind</a>&gt; for <a class='enum' href='websocket/result/enum.WebSocketError.html' title='enum websocket::result::WebSocketError'>WebSocketError</a>",];
implementors["webvr_traits"] = ["impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='struct std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt;","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='struct std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/io/error/enum.ErrorKind.html' title='enum std::io::error::ErrorKind'>ErrorKind</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='primitive' href='std/primitive.u128.html'>u128</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u128.html'>u128</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV4.html' title='struct std::net::addr::SocketAddrV4'>SocketAddrV4</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV6.html' title='struct std::net::addr::SocketAddrV6'>SocketAddrV6</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl&lt;I&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>I, <a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a> <span class='where fmt-newline'>where I: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='struct std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='enum std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;NullError&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='libloading/os/unix/struct.Library.html' title='struct libloading::os::unix::Library'>Library</a>&gt; for <a class='struct' href='libloading/struct.Library.html' title='struct libloading::Library'>Library</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='libloading/struct.Library.html' title='struct libloading::Library'>Library</a>&gt; for <a class='struct' href='libloading/os/unix/struct.Library.html' title='struct libloading::os::unix::Library'>Library</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='rustc_serialize/json/enum.ParserError.html' title='enum rustc_serialize::json::ParserError'>ParserError</a>&gt; for <a class='enum' href='rustc_serialize/json/enum.DecoderError.html' title='enum rustc_serialize::json::DecoderError'>DecoderError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='rustc_serialize/json/enum.ParserError.html' title='enum rustc_serialize::json::ParserError'>ParserError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='core/fmt/struct.Error.html' title='struct core::fmt::Error'>Error</a>&gt; for <a class='enum' href='rustc_serialize/json/enum.EncoderError.html' title='enum rustc_serialize::json::EncoderError'>EncoderError</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for &amp;'a <a class='struct' href='mio/iovec/struct.IoVec.html' title='struct mio::iovec::IoVec'>IoVec</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a mut [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for &amp;'a mut <a class='struct' href='mio/iovec/struct.IoVec.html' title='struct mio::iovec::IoVec'>IoVec</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for &amp;'a IoVec","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a mut [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for &amp;'a mut IoVec","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.usize.html'>usize</a>&gt; for <a class='struct' href='mio/token/struct.Token.html' title='struct mio::token::Token'>Token</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='mio/token/struct.Token.html' title='struct mio::token::Token'>Token</a>&gt; for <a class='primitive' href='std/primitive.usize.html'>usize</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sync/mpsc/struct.SendError.html' title='struct std::sync::mpsc::SendError'>SendError</a>&lt;T&gt;&gt; for <a class='enum' href='mio/channel/enum.SendError.html' title='enum mio::channel::SendError'>SendError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='mio/channel/enum.SendError.html' title='enum mio::channel::SendError'>SendError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/sync/mpsc/enum.TrySendError.html' title='enum std::sync::mpsc::TrySendError'>TrySendError</a>&lt;T&gt;&gt; for <a class='enum' href='mio/channel/enum.TrySendError.html' title='enum mio::channel::TrySendError'>TrySendError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sync/mpsc/struct.SendError.html' title='struct std::sync::mpsc::SendError'>SendError</a>&lt;T&gt;&gt; for <a class='enum' href='mio/channel/enum.TrySendError.html' title='enum mio::channel::TrySendError'>TrySendError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='mio/channel/enum.TrySendError.html' title='enum mio::channel::TrySendError'>TrySendError</a>&lt;T&gt;","impl&lt;M&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='mio/channel/enum.TrySendError.html' title='enum mio::channel::TrySendError'>TrySendError</a>&lt;M&gt;&gt; for <a class='enum' href='mio/deprecated/notify/enum.NotifyError.html' title='enum mio::deprecated::notify::NotifyError'>NotifyError</a>&lt;M&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;UnixSocket&gt; for <a class='struct' href='mio/deprecated/unix/struct.UnixSocket.html' title='struct mio::deprecated::unix::UnixSocket'>UnixSocket</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;UnixSocket&gt; for <a class='struct' href='mio/deprecated/unix/struct.UnixStream.html' title='struct mio::deprecated::unix::UnixStream'>UnixStream</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;UnixSocket&gt; for <a class='struct' href='mio/deprecated/unix/struct.UnixListener.html' title='struct mio::deprecated::unix::UnixListener'>UnixListener</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='mio/sys/unix/io/struct.Io.html' title='struct mio::sys::unix::io::Io'>Io</a>&gt; for <a class='struct' href='mio/deprecated/unix/struct.PipeReader.html' title='struct mio::deprecated::unix::PipeReader'>PipeReader</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='mio/sys/unix/io/struct.Io.html' title='struct mio::sys::unix::io::Io'>Io</a>&gt; for <a class='struct' href='mio/deprecated/unix/struct.PipeWriter.html' title='struct mio::deprecated::unix::PipeWriter'>PipeWriter</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for <a class='struct' href='serde/bytes/struct.Bytes.html' title='struct serde::bytes::Bytes'>Bytes</a>&lt;'a&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;&gt; for <a class='struct' href='serde/bytes/struct.Bytes.html' title='struct serde::bytes::Bytes'>Bytes</a>&lt;'a&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;&gt; for <a class='struct' href='serde/bytes/bytebuf/struct.ByteBuf.html' title='struct serde::bytes::bytebuf::ByteBuf'>ByteBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='enum' href='bincode/serde/enum.ErrorKind.html' title='enum bincode::serde::ErrorKind'>ErrorKind</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='struct alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='struct alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XAnyEvent.html' title='struct x11::xlib::XAnyEvent'>XAnyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XAnyEvent.html' title='struct x11::xlib::XAnyEvent'>XAnyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XAnyEvent.html' title='struct x11::xlib::XAnyEvent'>XAnyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XAnyEvent.html' title='struct x11::xlib::XAnyEvent'>XAnyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XButtonEvent.html' title='struct x11::xlib::XButtonEvent'>XButtonEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XButtonEvent.html' title='struct x11::xlib::XButtonEvent'>XButtonEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XButtonEvent.html' title='struct x11::xlib::XButtonEvent'>XButtonEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XButtonEvent.html' title='struct x11::xlib::XButtonEvent'>XButtonEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XCirculateEvent.html' title='struct x11::xlib::XCirculateEvent'>XCirculateEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XCirculateEvent.html' title='struct x11::xlib::XCirculateEvent'>XCirculateEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCirculateEvent.html' title='struct x11::xlib::XCirculateEvent'>XCirculateEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCirculateEvent.html' title='struct x11::xlib::XCirculateEvent'>XCirculateEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XCirculateRequestEvent.html' title='struct x11::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XCirculateRequestEvent.html' title='struct x11::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCirculateRequestEvent.html' title='struct x11::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCirculateRequestEvent.html' title='struct x11::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XClientMessageEvent.html' title='struct x11::xlib::XClientMessageEvent'>XClientMessageEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XClientMessageEvent.html' title='struct x11::xlib::XClientMessageEvent'>XClientMessageEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XClientMessageEvent.html' title='struct x11::xlib::XClientMessageEvent'>XClientMessageEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XClientMessageEvent.html' title='struct x11::xlib::XClientMessageEvent'>XClientMessageEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XColormapEvent.html' title='struct x11::xlib::XColormapEvent'>XColormapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XColormapEvent.html' title='struct x11::xlib::XColormapEvent'>XColormapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XColormapEvent.html' title='struct x11::xlib::XColormapEvent'>XColormapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XColormapEvent.html' title='struct x11::xlib::XColormapEvent'>XColormapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XConfigureEvent.html' title='struct x11::xlib::XConfigureEvent'>XConfigureEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XConfigureEvent.html' title='struct x11::xlib::XConfigureEvent'>XConfigureEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XConfigureEvent.html' title='struct x11::xlib::XConfigureEvent'>XConfigureEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XConfigureEvent.html' title='struct x11::xlib::XConfigureEvent'>XConfigureEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XConfigureRequestEvent.html' title='struct x11::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XConfigureRequestEvent.html' title='struct x11::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XConfigureRequestEvent.html' title='struct x11::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XConfigureRequestEvent.html' title='struct x11::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XCreateWindowEvent.html' title='struct x11::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XCreateWindowEvent.html' title='struct x11::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCreateWindowEvent.html' title='struct x11::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCreateWindowEvent.html' title='struct x11::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XCrossingEvent.html' title='struct x11::xlib::XCrossingEvent'>XCrossingEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XCrossingEvent.html' title='struct x11::xlib::XCrossingEvent'>XCrossingEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCrossingEvent.html' title='struct x11::xlib::XCrossingEvent'>XCrossingEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCrossingEvent.html' title='struct x11::xlib::XCrossingEvent'>XCrossingEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XDestroyWindowEvent.html' title='struct x11::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XDestroyWindowEvent.html' title='struct x11::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XDestroyWindowEvent.html' title='struct x11::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XDestroyWindowEvent.html' title='struct x11::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XErrorEvent.html' title='struct x11::xlib::XErrorEvent'>XErrorEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XErrorEvent.html' title='struct x11::xlib::XErrorEvent'>XErrorEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XErrorEvent.html' title='struct x11::xlib::XErrorEvent'>XErrorEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XErrorEvent.html' title='struct x11::xlib::XErrorEvent'>XErrorEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XExposeEvent.html' title='struct x11::xlib::XExposeEvent'>XExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XExposeEvent.html' title='struct x11::xlib::XExposeEvent'>XExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XExposeEvent.html' title='struct x11::xlib::XExposeEvent'>XExposeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XExposeEvent.html' title='struct x11::xlib::XExposeEvent'>XExposeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XFocusChangeEvent.html' title='struct x11::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XFocusChangeEvent.html' title='struct x11::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XFocusChangeEvent.html' title='struct x11::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XFocusChangeEvent.html' title='struct x11::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XGenericEventCookie.html' title='struct x11::xlib::XGenericEventCookie'>XGenericEventCookie</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XGenericEventCookie.html' title='struct x11::xlib::XGenericEventCookie'>XGenericEventCookie</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGenericEventCookie.html' title='struct x11::xlib::XGenericEventCookie'>XGenericEventCookie</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGenericEventCookie.html' title='struct x11::xlib::XGenericEventCookie'>XGenericEventCookie</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XGraphicsExposeEvent.html' title='struct x11::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XGraphicsExposeEvent.html' title='struct x11::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGraphicsExposeEvent.html' title='struct x11::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGraphicsExposeEvent.html' title='struct x11::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XGravityEvent.html' title='struct x11::xlib::XGravityEvent'>XGravityEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XGravityEvent.html' title='struct x11::xlib::XGravityEvent'>XGravityEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGravityEvent.html' title='struct x11::xlib::XGravityEvent'>XGravityEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGravityEvent.html' title='struct x11::xlib::XGravityEvent'>XGravityEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XKeyEvent.html' title='struct x11::xlib::XKeyEvent'>XKeyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XKeyEvent.html' title='struct x11::xlib::XKeyEvent'>XKeyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XKeyEvent.html' title='struct x11::xlib::XKeyEvent'>XKeyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XKeyEvent.html' title='struct x11::xlib::XKeyEvent'>XKeyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XKeymapEvent.html' title='struct x11::xlib::XKeymapEvent'>XKeymapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XKeymapEvent.html' title='struct x11::xlib::XKeymapEvent'>XKeymapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XKeymapEvent.html' title='struct x11::xlib::XKeymapEvent'>XKeymapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XKeymapEvent.html' title='struct x11::xlib::XKeymapEvent'>XKeymapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XMapEvent.html' title='struct x11::xlib::XMapEvent'>XMapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XMapEvent.html' title='struct x11::xlib::XMapEvent'>XMapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMapEvent.html' title='struct x11::xlib::XMapEvent'>XMapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMapEvent.html' title='struct x11::xlib::XMapEvent'>XMapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XMappingEvent.html' title='struct x11::xlib::XMappingEvent'>XMappingEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XMappingEvent.html' title='struct x11::xlib::XMappingEvent'>XMappingEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMappingEvent.html' title='struct x11::xlib::XMappingEvent'>XMappingEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMappingEvent.html' title='struct x11::xlib::XMappingEvent'>XMappingEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XMapRequestEvent.html' title='struct x11::xlib::XMapRequestEvent'>XMapRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XMapRequestEvent.html' title='struct x11::xlib::XMapRequestEvent'>XMapRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMapRequestEvent.html' title='struct x11::xlib::XMapRequestEvent'>XMapRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMapRequestEvent.html' title='struct x11::xlib::XMapRequestEvent'>XMapRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XMotionEvent.html' title='struct x11::xlib::XMotionEvent'>XMotionEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XMotionEvent.html' title='struct x11::xlib::XMotionEvent'>XMotionEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMotionEvent.html' title='struct x11::xlib::XMotionEvent'>XMotionEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMotionEvent.html' title='struct x11::xlib::XMotionEvent'>XMotionEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XNoExposeEvent.html' title='struct x11::xlib::XNoExposeEvent'>XNoExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XNoExposeEvent.html' title='struct x11::xlib::XNoExposeEvent'>XNoExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XNoExposeEvent.html' title='struct x11::xlib::XNoExposeEvent'>XNoExposeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XNoExposeEvent.html' title='struct x11::xlib::XNoExposeEvent'>XNoExposeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XPropertyEvent.html' title='struct x11::xlib::XPropertyEvent'>XPropertyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XPropertyEvent.html' title='struct x11::xlib::XPropertyEvent'>XPropertyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XPropertyEvent.html' title='struct x11::xlib::XPropertyEvent'>XPropertyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XPropertyEvent.html' title='struct x11::xlib::XPropertyEvent'>XPropertyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XReparentEvent.html' title='struct x11::xlib::XReparentEvent'>XReparentEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XReparentEvent.html' title='struct x11::xlib::XReparentEvent'>XReparentEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XReparentEvent.html' title='struct x11::xlib::XReparentEvent'>XReparentEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XReparentEvent.html' title='struct x11::xlib::XReparentEvent'>XReparentEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XResizeRequestEvent.html' title='struct x11::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XResizeRequestEvent.html' title='struct x11::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XResizeRequestEvent.html' title='struct x11::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XResizeRequestEvent.html' title='struct x11::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XSelectionClearEvent.html' title='struct x11::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XSelectionClearEvent.html' title='struct x11::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionClearEvent.html' title='struct x11::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionClearEvent.html' title='struct x11::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XSelectionEvent.html' title='struct x11::xlib::XSelectionEvent'>XSelectionEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XSelectionEvent.html' title='struct x11::xlib::XSelectionEvent'>XSelectionEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionEvent.html' title='struct x11::xlib::XSelectionEvent'>XSelectionEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionEvent.html' title='struct x11::xlib::XSelectionEvent'>XSelectionEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XSelectionRequestEvent.html' title='struct x11::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XSelectionRequestEvent.html' title='struct x11::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionRequestEvent.html' title='struct x11::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionRequestEvent.html' title='struct x11::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XUnmapEvent.html' title='struct x11::xlib::XUnmapEvent'>XUnmapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XUnmapEvent.html' title='struct x11::xlib::XUnmapEvent'>XUnmapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XUnmapEvent.html' title='struct x11::xlib::XUnmapEvent'>XUnmapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XUnmapEvent.html' title='struct x11::xlib::XUnmapEvent'>XUnmapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XVisibilityEvent.html' title='struct x11::xlib::XVisibilityEvent'>XVisibilityEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XVisibilityEvent.html' title='struct x11::xlib::XVisibilityEvent'>XVisibilityEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XVisibilityEvent.html' title='struct x11::xlib::XVisibilityEvent'>XVisibilityEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XVisibilityEvent.html' title='struct x11::xlib::XVisibilityEvent'>XVisibilityEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.i8.html'>i8</a><a class='primitive' href='std/primitive.array.html'>; 20]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 20]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.i16.html'>i16</a><a class='primitive' href='std/primitive.array.html'>; 10]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 10]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.i64.html'>i64</a><a class='primitive' href='std/primitive.array.html'>; 5]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u64.html'>u64</a><a class='primitive' href='std/primitive.array.html'>; 5]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xf86vmode/struct.XF86VidModeNotifyEvent.html' title='struct x11::xf86vmode::XF86VidModeNotifyEvent'>XF86VidModeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xf86vmode/struct.XF86VidModeNotifyEvent.html' title='struct x11::xf86vmode::XF86VidModeNotifyEvent'>XF86VidModeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xf86vmode/struct.XF86VidModeNotifyEvent.html' title='struct x11::xf86vmode::XF86VidModeNotifyEvent'>XF86VidModeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xf86vmode/struct.XF86VidModeNotifyEvent.html' title='struct x11::xf86vmode::XF86VidModeNotifyEvent'>XF86VidModeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRScreenChangeNotifyEvent.html' title='struct x11::xrandr::XRRScreenChangeNotifyEvent'>XRRScreenChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRScreenChangeNotifyEvent.html' title='struct x11::xrandr::XRRScreenChangeNotifyEvent'>XRRScreenChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRScreenChangeNotifyEvent.html' title='struct x11::xrandr::XRRScreenChangeNotifyEvent'>XRRScreenChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRScreenChangeNotifyEvent.html' title='struct x11::xrandr::XRRScreenChangeNotifyEvent'>XRRScreenChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRNotifyEvent.html' title='struct x11::xrandr::XRRNotifyEvent'>XRRNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRNotifyEvent.html' title='struct x11::xrandr::XRRNotifyEvent'>XRRNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRNotifyEvent.html' title='struct x11::xrandr::XRRNotifyEvent'>XRRNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRNotifyEvent.html' title='struct x11::xrandr::XRRNotifyEvent'>XRRNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRROutputChangeNotifyEvent.html' title='struct x11::xrandr::XRROutputChangeNotifyEvent'>XRROutputChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRROutputChangeNotifyEvent.html' title='struct x11::xrandr::XRROutputChangeNotifyEvent'>XRROutputChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRROutputChangeNotifyEvent.html' title='struct x11::xrandr::XRROutputChangeNotifyEvent'>XRROutputChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRROutputChangeNotifyEvent.html' title='struct x11::xrandr::XRROutputChangeNotifyEvent'>XRROutputChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRCrtcChangeNotifyEvent.html' title='struct x11::xrandr::XRRCrtcChangeNotifyEvent'>XRRCrtcChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRCrtcChangeNotifyEvent.html' title='struct x11::xrandr::XRRCrtcChangeNotifyEvent'>XRRCrtcChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRCrtcChangeNotifyEvent.html' title='struct x11::xrandr::XRRCrtcChangeNotifyEvent'>XRRCrtcChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRCrtcChangeNotifyEvent.html' title='struct x11::xrandr::XRRCrtcChangeNotifyEvent'>XRRCrtcChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRROutputPropertyNotifyEvent.html' title='struct x11::xrandr::XRROutputPropertyNotifyEvent'>XRROutputPropertyNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRROutputPropertyNotifyEvent.html' title='struct x11::xrandr::XRROutputPropertyNotifyEvent'>XRROutputPropertyNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRROutputPropertyNotifyEvent.html' title='struct x11::xrandr::XRROutputPropertyNotifyEvent'>XRROutputPropertyNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRROutputPropertyNotifyEvent.html' title='struct x11::xrandr::XRROutputPropertyNotifyEvent'>XRROutputPropertyNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRProviderChangeNotifyEvent.html' title='struct x11::xrandr::XRRProviderChangeNotifyEvent'>XRRProviderChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRProviderChangeNotifyEvent.html' title='struct x11::xrandr::XRRProviderChangeNotifyEvent'>XRRProviderChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRProviderChangeNotifyEvent.html' title='struct x11::xrandr::XRRProviderChangeNotifyEvent'>XRRProviderChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRProviderChangeNotifyEvent.html' title='struct x11::xrandr::XRRProviderChangeNotifyEvent'>XRRProviderChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRProviderPropertyNotifyEvent.html' title='struct x11::xrandr::XRRProviderPropertyNotifyEvent'>XRRProviderPropertyNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRProviderPropertyNotifyEvent.html' title='struct x11::xrandr::XRRProviderPropertyNotifyEvent'>XRRProviderPropertyNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRProviderPropertyNotifyEvent.html' title='struct x11::xrandr::XRRProviderPropertyNotifyEvent'>XRRProviderPropertyNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRProviderPropertyNotifyEvent.html' title='struct x11::xrandr::XRRProviderPropertyNotifyEvent'>XRRProviderPropertyNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRResourceChangeNotifyEvent.html' title='struct x11::xrandr::XRRResourceChangeNotifyEvent'>XRRResourceChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRResourceChangeNotifyEvent.html' title='struct x11::xrandr::XRRResourceChangeNotifyEvent'>XRRResourceChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRResourceChangeNotifyEvent.html' title='struct x11::xrandr::XRRResourceChangeNotifyEvent'>XRRResourceChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRResourceChangeNotifyEvent.html' title='struct x11::xrandr::XRRResourceChangeNotifyEvent'>XRRResourceChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xss/struct.XScreenSaverNotifyEvent.html' title='struct x11::xss::XScreenSaverNotifyEvent'>XScreenSaverNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xss/struct.XScreenSaverNotifyEvent.html' title='struct x11::xss::XScreenSaverNotifyEvent'>XScreenSaverNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xss/struct.XScreenSaverNotifyEvent.html' title='struct x11::xss::XScreenSaverNotifyEvent'>XScreenSaverNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xss/struct.XScreenSaverNotifyEvent.html' title='struct x11::xss::XScreenSaverNotifyEvent'>XScreenSaverNotifyEvent</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='enum' href='webrender_traits/enum.PropertyBinding.html' title='enum webrender_traits::PropertyBinding'>PropertyBinding</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='webrender_traits/struct.PropertyBindingKey.html' title='struct webrender_traits::PropertyBindingKey'>PropertyBindingKey</a>&lt;T&gt;&gt; for <a class='enum' href='webrender_traits/enum.PropertyBinding.html' title='enum webrender_traits::PropertyBinding'>PropertyBinding</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='webrender_traits/struct.ColorF.html' title='struct webrender_traits::ColorF'>ColorF</a>&gt; for <a class='struct' href='webrender_traits/struct.ColorU.html' title='struct webrender_traits::ColorU'>ColorU</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;UnixError&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='enum' href='bincode/serde/enum.ErrorKind.html' title='enum bincode::serde::ErrorKind'>ErrorKind</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;UnixError&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='trait core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>: <a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>ToOwned</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>::<a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>Owned</a> == <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;",];
implementors["ws"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='struct' href='ws/struct.Error.html' title='struct ws::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='httparse/enum.Error.html' title='enum httparse::Error'>Error</a>&gt; for <a class='struct' href='ws/struct.Error.html' title='struct ws::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='mio/channel/enum.SendError.html' title='enum mio::channel::SendError'>SendError</a>&lt;<a class='struct' href='ws/communication/struct.Command.html' title='struct ws::communication::Command'>Command</a>&gt;&gt; for <a class='struct' href='ws/struct.Error.html' title='struct ws::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='mio/timer/struct.TimerError.html' title='struct mio::timer::TimerError'>TimerError</a>&gt; for <a class='struct' href='ws/struct.Error.html' title='struct ws::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='core/str/struct.Utf8Error.html' title='struct core::str::Utf8Error'>Utf8Error</a>&gt; for <a class='struct' href='ws/struct.Error.html' title='struct ws::Error'>Error</a>","impl&lt;B&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;B&gt;&gt; for <a class='struct' href='ws/struct.Error.html' title='struct ws::Error'>Error</a> <span class='where fmt-newline'>where B: <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>StdError</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a> + 'static</span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='ws/enum.Message.html' title='enum ws::Message'>Message</a>","impl&lt;'s&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'s <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='ws/enum.Message.html' title='enum ws::Message'>Message</a>","impl&lt;'b&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'b [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for <a class='enum' href='ws/enum.Message.html' title='enum ws::Message'>Message</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;&gt; for <a class='enum' href='ws/enum.Message.html' title='enum ws::Message'>Message</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt; for <a class='enum' href='ws/enum.OpCode.html' title='enum ws::OpCode'>OpCode</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u16.html'>u16</a>&gt; for <a class='enum' href='ws/enum.CloseCode.html' title='enum ws::CloseCode'>CloseCode</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='idna/uts46/struct.Errors.html' title='struct idna::uts46::Errors'>Errors</a>&gt; for <a class='enum' href='url/parser/enum.ParseError.html' title='enum url::parser::ParseError'>ParseError</a>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='url/percent_encoding/struct.PercentEncode.html' title='struct url::percent_encoding::PercentEncode'>PercentEncode</a>&lt;'a, E&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt; <span class='where fmt-newline'>where E: <a class='trait' href='url/percent_encoding/trait.EncodeSet.html' title='trait url::percent_encoding::EncodeSet'>EncodeSet</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='url/percent_encoding/struct.PercentDecode.html' title='struct url::percent_encoding::PercentDecode'>PercentDecode</a>&lt;'a&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for &amp;'a <a class='struct' href='mio/iovec/struct.IoVec.html' title='struct mio::iovec::IoVec'>IoVec</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a mut [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for &amp;'a mut <a class='struct' href='mio/iovec/struct.IoVec.html' title='struct mio::iovec::IoVec'>IoVec</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for &amp;'a IoVec","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a mut [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for &amp;'a mut IoVec","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.usize.html'>usize</a>&gt; for <a class='struct' href='ws/util/struct.Token.html' title='struct ws::util::Token'>Token</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='ws/util/struct.Token.html' title='struct ws::util::Token'>Token</a>&gt; for <a class='primitive' href='std/primitive.usize.html'>usize</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sync/mpsc/struct.SendError.html' title='struct std::sync::mpsc::SendError'>SendError</a>&lt;T&gt;&gt; for <a class='enum' href='mio/channel/enum.SendError.html' title='enum mio::channel::SendError'>SendError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='mio/channel/enum.SendError.html' title='enum mio::channel::SendError'>SendError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/sync/mpsc/enum.TrySendError.html' title='enum std::sync::mpsc::TrySendError'>TrySendError</a>&lt;T&gt;&gt; for <a class='enum' href='mio/channel/enum.TrySendError.html' title='enum mio::channel::TrySendError'>TrySendError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sync/mpsc/struct.SendError.html' title='struct std::sync::mpsc::SendError'>SendError</a>&lt;T&gt;&gt; for <a class='enum' href='mio/channel/enum.TrySendError.html' title='enum mio::channel::TrySendError'>TrySendError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>&gt; for <a class='enum' href='mio/channel/enum.TrySendError.html' title='enum mio::channel::TrySendError'>TrySendError</a>&lt;T&gt;","impl&lt;M&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='mio/channel/enum.TrySendError.html' title='enum mio::channel::TrySendError'>TrySendError</a>&lt;M&gt;&gt; for <a class='enum' href='mio/deprecated/notify/enum.NotifyError.html' title='enum mio::deprecated::notify::NotifyError'>NotifyError</a>&lt;M&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;UnixSocket&gt; for <a class='struct' href='mio/deprecated/unix/struct.UnixSocket.html' title='struct mio::deprecated::unix::UnixSocket'>UnixSocket</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;UnixSocket&gt; for <a class='struct' href='mio/deprecated/unix/struct.UnixStream.html' title='struct mio::deprecated::unix::UnixStream'>UnixStream</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;UnixSocket&gt; for <a class='struct' href='mio/deprecated/unix/struct.UnixListener.html' title='struct mio::deprecated::unix::UnixListener'>UnixListener</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='mio/sys/unix/io/struct.Io.html' title='struct mio::sys::unix::io::Io'>Io</a>&gt; for <a class='struct' href='mio/deprecated/unix/struct.PipeReader.html' title='struct mio::deprecated::unix::PipeReader'>PipeReader</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='mio/sys/unix/io/struct.Io.html' title='struct mio::sys::unix::io::Io'>Io</a>&gt; for <a class='struct' href='mio/deprecated/unix/struct.PipeWriter.html' title='struct mio::deprecated::unix::PipeWriter'>PipeWriter</a>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='struct std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt;","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='struct std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/io/error/enum.ErrorKind.html' title='enum std::io::error::ErrorKind'>ErrorKind</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='primitive' href='std/primitive.u128.html'>u128</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u128.html'>u128</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV4.html' title='struct std::net::addr::SocketAddrV4'>SocketAddrV4</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV6.html' title='struct std::net::addr::SocketAddrV6'>SocketAddrV6</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl&lt;I&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>I, <a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a> <span class='where fmt-newline'>where I: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='struct std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='enum std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='struct alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='struct alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='trait core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>: <a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>ToOwned</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>::<a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>Owned</a> == <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;",];
implementors["x11"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XAnyEvent.html' title='struct x11::xlib::XAnyEvent'>XAnyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XAnyEvent.html' title='struct x11::xlib::XAnyEvent'>XAnyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XAnyEvent.html' title='struct x11::xlib::XAnyEvent'>XAnyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XAnyEvent.html' title='struct x11::xlib::XAnyEvent'>XAnyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XButtonEvent.html' title='struct x11::xlib::XButtonEvent'>XButtonEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XButtonEvent.html' title='struct x11::xlib::XButtonEvent'>XButtonEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XButtonEvent.html' title='struct x11::xlib::XButtonEvent'>XButtonEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XButtonEvent.html' title='struct x11::xlib::XButtonEvent'>XButtonEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XCirculateEvent.html' title='struct x11::xlib::XCirculateEvent'>XCirculateEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XCirculateEvent.html' title='struct x11::xlib::XCirculateEvent'>XCirculateEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCirculateEvent.html' title='struct x11::xlib::XCirculateEvent'>XCirculateEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCirculateEvent.html' title='struct x11::xlib::XCirculateEvent'>XCirculateEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XCirculateRequestEvent.html' title='struct x11::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XCirculateRequestEvent.html' title='struct x11::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCirculateRequestEvent.html' title='struct x11::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCirculateRequestEvent.html' title='struct x11::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XClientMessageEvent.html' title='struct x11::xlib::XClientMessageEvent'>XClientMessageEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XClientMessageEvent.html' title='struct x11::xlib::XClientMessageEvent'>XClientMessageEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XClientMessageEvent.html' title='struct x11::xlib::XClientMessageEvent'>XClientMessageEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XClientMessageEvent.html' title='struct x11::xlib::XClientMessageEvent'>XClientMessageEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XColormapEvent.html' title='struct x11::xlib::XColormapEvent'>XColormapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XColormapEvent.html' title='struct x11::xlib::XColormapEvent'>XColormapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XColormapEvent.html' title='struct x11::xlib::XColormapEvent'>XColormapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XColormapEvent.html' title='struct x11::xlib::XColormapEvent'>XColormapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XConfigureEvent.html' title='struct x11::xlib::XConfigureEvent'>XConfigureEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XConfigureEvent.html' title='struct x11::xlib::XConfigureEvent'>XConfigureEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XConfigureEvent.html' title='struct x11::xlib::XConfigureEvent'>XConfigureEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XConfigureEvent.html' title='struct x11::xlib::XConfigureEvent'>XConfigureEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XConfigureRequestEvent.html' title='struct x11::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XConfigureRequestEvent.html' title='struct x11::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XConfigureRequestEvent.html' title='struct x11::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XConfigureRequestEvent.html' title='struct x11::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XCreateWindowEvent.html' title='struct x11::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XCreateWindowEvent.html' title='struct x11::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCreateWindowEvent.html' title='struct x11::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCreateWindowEvent.html' title='struct x11::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XCrossingEvent.html' title='struct x11::xlib::XCrossingEvent'>XCrossingEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XCrossingEvent.html' title='struct x11::xlib::XCrossingEvent'>XCrossingEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCrossingEvent.html' title='struct x11::xlib::XCrossingEvent'>XCrossingEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCrossingEvent.html' title='struct x11::xlib::XCrossingEvent'>XCrossingEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XDestroyWindowEvent.html' title='struct x11::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XDestroyWindowEvent.html' title='struct x11::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XDestroyWindowEvent.html' title='struct x11::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XDestroyWindowEvent.html' title='struct x11::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XErrorEvent.html' title='struct x11::xlib::XErrorEvent'>XErrorEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XErrorEvent.html' title='struct x11::xlib::XErrorEvent'>XErrorEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XErrorEvent.html' title='struct x11::xlib::XErrorEvent'>XErrorEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XErrorEvent.html' title='struct x11::xlib::XErrorEvent'>XErrorEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XExposeEvent.html' title='struct x11::xlib::XExposeEvent'>XExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XExposeEvent.html' title='struct x11::xlib::XExposeEvent'>XExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XExposeEvent.html' title='struct x11::xlib::XExposeEvent'>XExposeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XExposeEvent.html' title='struct x11::xlib::XExposeEvent'>XExposeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XFocusChangeEvent.html' title='struct x11::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XFocusChangeEvent.html' title='struct x11::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XFocusChangeEvent.html' title='struct x11::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XFocusChangeEvent.html' title='struct x11::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XGenericEventCookie.html' title='struct x11::xlib::XGenericEventCookie'>XGenericEventCookie</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XGenericEventCookie.html' title='struct x11::xlib::XGenericEventCookie'>XGenericEventCookie</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGenericEventCookie.html' title='struct x11::xlib::XGenericEventCookie'>XGenericEventCookie</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGenericEventCookie.html' title='struct x11::xlib::XGenericEventCookie'>XGenericEventCookie</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XGraphicsExposeEvent.html' title='struct x11::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XGraphicsExposeEvent.html' title='struct x11::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGraphicsExposeEvent.html' title='struct x11::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGraphicsExposeEvent.html' title='struct x11::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XGravityEvent.html' title='struct x11::xlib::XGravityEvent'>XGravityEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XGravityEvent.html' title='struct x11::xlib::XGravityEvent'>XGravityEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGravityEvent.html' title='struct x11::xlib::XGravityEvent'>XGravityEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGravityEvent.html' title='struct x11::xlib::XGravityEvent'>XGravityEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XKeyEvent.html' title='struct x11::xlib::XKeyEvent'>XKeyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XKeyEvent.html' title='struct x11::xlib::XKeyEvent'>XKeyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XKeyEvent.html' title='struct x11::xlib::XKeyEvent'>XKeyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XKeyEvent.html' title='struct x11::xlib::XKeyEvent'>XKeyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XKeymapEvent.html' title='struct x11::xlib::XKeymapEvent'>XKeymapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XKeymapEvent.html' title='struct x11::xlib::XKeymapEvent'>XKeymapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XKeymapEvent.html' title='struct x11::xlib::XKeymapEvent'>XKeymapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XKeymapEvent.html' title='struct x11::xlib::XKeymapEvent'>XKeymapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XMapEvent.html' title='struct x11::xlib::XMapEvent'>XMapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XMapEvent.html' title='struct x11::xlib::XMapEvent'>XMapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMapEvent.html' title='struct x11::xlib::XMapEvent'>XMapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMapEvent.html' title='struct x11::xlib::XMapEvent'>XMapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XMappingEvent.html' title='struct x11::xlib::XMappingEvent'>XMappingEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XMappingEvent.html' title='struct x11::xlib::XMappingEvent'>XMappingEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMappingEvent.html' title='struct x11::xlib::XMappingEvent'>XMappingEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMappingEvent.html' title='struct x11::xlib::XMappingEvent'>XMappingEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XMapRequestEvent.html' title='struct x11::xlib::XMapRequestEvent'>XMapRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XMapRequestEvent.html' title='struct x11::xlib::XMapRequestEvent'>XMapRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMapRequestEvent.html' title='struct x11::xlib::XMapRequestEvent'>XMapRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMapRequestEvent.html' title='struct x11::xlib::XMapRequestEvent'>XMapRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XMotionEvent.html' title='struct x11::xlib::XMotionEvent'>XMotionEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XMotionEvent.html' title='struct x11::xlib::XMotionEvent'>XMotionEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMotionEvent.html' title='struct x11::xlib::XMotionEvent'>XMotionEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMotionEvent.html' title='struct x11::xlib::XMotionEvent'>XMotionEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XNoExposeEvent.html' title='struct x11::xlib::XNoExposeEvent'>XNoExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XNoExposeEvent.html' title='struct x11::xlib::XNoExposeEvent'>XNoExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XNoExposeEvent.html' title='struct x11::xlib::XNoExposeEvent'>XNoExposeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XNoExposeEvent.html' title='struct x11::xlib::XNoExposeEvent'>XNoExposeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XPropertyEvent.html' title='struct x11::xlib::XPropertyEvent'>XPropertyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XPropertyEvent.html' title='struct x11::xlib::XPropertyEvent'>XPropertyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XPropertyEvent.html' title='struct x11::xlib::XPropertyEvent'>XPropertyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XPropertyEvent.html' title='struct x11::xlib::XPropertyEvent'>XPropertyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XReparentEvent.html' title='struct x11::xlib::XReparentEvent'>XReparentEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XReparentEvent.html' title='struct x11::xlib::XReparentEvent'>XReparentEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XReparentEvent.html' title='struct x11::xlib::XReparentEvent'>XReparentEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XReparentEvent.html' title='struct x11::xlib::XReparentEvent'>XReparentEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XResizeRequestEvent.html' title='struct x11::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XResizeRequestEvent.html' title='struct x11::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XResizeRequestEvent.html' title='struct x11::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XResizeRequestEvent.html' title='struct x11::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XSelectionClearEvent.html' title='struct x11::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XSelectionClearEvent.html' title='struct x11::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionClearEvent.html' title='struct x11::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionClearEvent.html' title='struct x11::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XSelectionEvent.html' title='struct x11::xlib::XSelectionEvent'>XSelectionEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XSelectionEvent.html' title='struct x11::xlib::XSelectionEvent'>XSelectionEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionEvent.html' title='struct x11::xlib::XSelectionEvent'>XSelectionEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionEvent.html' title='struct x11::xlib::XSelectionEvent'>XSelectionEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XSelectionRequestEvent.html' title='struct x11::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XSelectionRequestEvent.html' title='struct x11::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionRequestEvent.html' title='struct x11::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionRequestEvent.html' title='struct x11::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XUnmapEvent.html' title='struct x11::xlib::XUnmapEvent'>XUnmapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XUnmapEvent.html' title='struct x11::xlib::XUnmapEvent'>XUnmapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XUnmapEvent.html' title='struct x11::xlib::XUnmapEvent'>XUnmapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XUnmapEvent.html' title='struct x11::xlib::XUnmapEvent'>XUnmapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XVisibilityEvent.html' title='struct x11::xlib::XVisibilityEvent'>XVisibilityEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XVisibilityEvent.html' title='struct x11::xlib::XVisibilityEvent'>XVisibilityEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XVisibilityEvent.html' title='struct x11::xlib::XVisibilityEvent'>XVisibilityEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XVisibilityEvent.html' title='struct x11::xlib::XVisibilityEvent'>XVisibilityEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='type' href='std/os/raw/type.c_schar.html' title='type std::os::raw::c_schar'>c_schar</a><a class='primitive' href='std/primitive.array.html'>; 20]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='type' href='std/os/raw/type.c_uchar.html' title='type std::os::raw::c_uchar'>c_uchar</a><a class='primitive' href='std/primitive.array.html'>; 20]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='type' href='std/os/raw/type.c_short.html' title='type std::os::raw::c_short'>c_short</a><a class='primitive' href='std/primitive.array.html'>; 10]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='type' href='std/os/raw/type.c_ushort.html' title='type std::os::raw::c_ushort'>c_ushort</a><a class='primitive' href='std/primitive.array.html'>; 10]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='type' href='std/os/raw/type.c_long.html' title='type std::os::raw::c_long'>c_long</a><a class='primitive' href='std/primitive.array.html'>; 5]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='type' href='std/os/raw/type.c_ulong.html' title='type std::os::raw::c_ulong'>c_ulong</a><a class='primitive' href='std/primitive.array.html'>; 5]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='struct x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xf86vmode/struct.XF86VidModeNotifyEvent.html' title='struct x11::xf86vmode::XF86VidModeNotifyEvent'>XF86VidModeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xf86vmode/struct.XF86VidModeNotifyEvent.html' title='struct x11::xf86vmode::XF86VidModeNotifyEvent'>XF86VidModeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xf86vmode/struct.XF86VidModeNotifyEvent.html' title='struct x11::xf86vmode::XF86VidModeNotifyEvent'>XF86VidModeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xf86vmode/struct.XF86VidModeNotifyEvent.html' title='struct x11::xf86vmode::XF86VidModeNotifyEvent'>XF86VidModeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRScreenChangeNotifyEvent.html' title='struct x11::xrandr::XRRScreenChangeNotifyEvent'>XRRScreenChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRScreenChangeNotifyEvent.html' title='struct x11::xrandr::XRRScreenChangeNotifyEvent'>XRRScreenChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRScreenChangeNotifyEvent.html' title='struct x11::xrandr::XRRScreenChangeNotifyEvent'>XRRScreenChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRScreenChangeNotifyEvent.html' title='struct x11::xrandr::XRRScreenChangeNotifyEvent'>XRRScreenChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRNotifyEvent.html' title='struct x11::xrandr::XRRNotifyEvent'>XRRNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRNotifyEvent.html' title='struct x11::xrandr::XRRNotifyEvent'>XRRNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRNotifyEvent.html' title='struct x11::xrandr::XRRNotifyEvent'>XRRNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRNotifyEvent.html' title='struct x11::xrandr::XRRNotifyEvent'>XRRNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRROutputChangeNotifyEvent.html' title='struct x11::xrandr::XRROutputChangeNotifyEvent'>XRROutputChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRROutputChangeNotifyEvent.html' title='struct x11::xrandr::XRROutputChangeNotifyEvent'>XRROutputChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRROutputChangeNotifyEvent.html' title='struct x11::xrandr::XRROutputChangeNotifyEvent'>XRROutputChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRROutputChangeNotifyEvent.html' title='struct x11::xrandr::XRROutputChangeNotifyEvent'>XRROutputChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRCrtcChangeNotifyEvent.html' title='struct x11::xrandr::XRRCrtcChangeNotifyEvent'>XRRCrtcChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRCrtcChangeNotifyEvent.html' title='struct x11::xrandr::XRRCrtcChangeNotifyEvent'>XRRCrtcChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRCrtcChangeNotifyEvent.html' title='struct x11::xrandr::XRRCrtcChangeNotifyEvent'>XRRCrtcChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRCrtcChangeNotifyEvent.html' title='struct x11::xrandr::XRRCrtcChangeNotifyEvent'>XRRCrtcChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRROutputPropertyNotifyEvent.html' title='struct x11::xrandr::XRROutputPropertyNotifyEvent'>XRROutputPropertyNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRROutputPropertyNotifyEvent.html' title='struct x11::xrandr::XRROutputPropertyNotifyEvent'>XRROutputPropertyNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRROutputPropertyNotifyEvent.html' title='struct x11::xrandr::XRROutputPropertyNotifyEvent'>XRROutputPropertyNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRROutputPropertyNotifyEvent.html' title='struct x11::xrandr::XRROutputPropertyNotifyEvent'>XRROutputPropertyNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRProviderChangeNotifyEvent.html' title='struct x11::xrandr::XRRProviderChangeNotifyEvent'>XRRProviderChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRProviderChangeNotifyEvent.html' title='struct x11::xrandr::XRRProviderChangeNotifyEvent'>XRRProviderChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRProviderChangeNotifyEvent.html' title='struct x11::xrandr::XRRProviderChangeNotifyEvent'>XRRProviderChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRProviderChangeNotifyEvent.html' title='struct x11::xrandr::XRRProviderChangeNotifyEvent'>XRRProviderChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRProviderPropertyNotifyEvent.html' title='struct x11::xrandr::XRRProviderPropertyNotifyEvent'>XRRProviderPropertyNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRProviderPropertyNotifyEvent.html' title='struct x11::xrandr::XRRProviderPropertyNotifyEvent'>XRRProviderPropertyNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRProviderPropertyNotifyEvent.html' title='struct x11::xrandr::XRRProviderPropertyNotifyEvent'>XRRProviderPropertyNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRProviderPropertyNotifyEvent.html' title='struct x11::xrandr::XRRProviderPropertyNotifyEvent'>XRRProviderPropertyNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xrandr/struct.XRRResourceChangeNotifyEvent.html' title='struct x11::xrandr::XRRResourceChangeNotifyEvent'>XRRResourceChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xrandr/struct.XRRResourceChangeNotifyEvent.html' title='struct x11::xrandr::XRRResourceChangeNotifyEvent'>XRRResourceChangeNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRResourceChangeNotifyEvent.html' title='struct x11::xrandr::XRRResourceChangeNotifyEvent'>XRRResourceChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xrandr/struct.XRRResourceChangeNotifyEvent.html' title='struct x11::xrandr::XRRResourceChangeNotifyEvent'>XRRResourceChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xss/struct.XScreenSaverNotifyEvent.html' title='struct x11::xss::XScreenSaverNotifyEvent'>XScreenSaverNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xss/struct.XScreenSaverNotifyEvent.html' title='struct x11::xss::XScreenSaverNotifyEvent'>XScreenSaverNotifyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xss/struct.XScreenSaverNotifyEvent.html' title='struct x11::xss::XScreenSaverNotifyEvent'>XScreenSaverNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='struct x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xss/struct.XScreenSaverNotifyEvent.html' title='struct x11::xss::XScreenSaverNotifyEvent'>XScreenSaverNotifyEvent</a>",];
implementors["x11_dl"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XAnyEvent.html' title='struct x11_dl::xlib::XAnyEvent'>XAnyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XAnyEvent.html' title='struct x11_dl::xlib::XAnyEvent'>XAnyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XAnyEvent.html' title='struct x11_dl::xlib::XAnyEvent'>XAnyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XAnyEvent.html' title='struct x11_dl::xlib::XAnyEvent'>XAnyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XButtonEvent.html' title='struct x11_dl::xlib::XButtonEvent'>XButtonEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XButtonEvent.html' title='struct x11_dl::xlib::XButtonEvent'>XButtonEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XButtonEvent.html' title='struct x11_dl::xlib::XButtonEvent'>XButtonEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XButtonEvent.html' title='struct x11_dl::xlib::XButtonEvent'>XButtonEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XCirculateEvent.html' title='struct x11_dl::xlib::XCirculateEvent'>XCirculateEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XCirculateEvent.html' title='struct x11_dl::xlib::XCirculateEvent'>XCirculateEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XCirculateEvent.html' title='struct x11_dl::xlib::XCirculateEvent'>XCirculateEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XCirculateEvent.html' title='struct x11_dl::xlib::XCirculateEvent'>XCirculateEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XCirculateRequestEvent.html' title='struct x11_dl::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XCirculateRequestEvent.html' title='struct x11_dl::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XCirculateRequestEvent.html' title='struct x11_dl::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XCirculateRequestEvent.html' title='struct x11_dl::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XClientMessageEvent.html' title='struct x11_dl::xlib::XClientMessageEvent'>XClientMessageEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XClientMessageEvent.html' title='struct x11_dl::xlib::XClientMessageEvent'>XClientMessageEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XClientMessageEvent.html' title='struct x11_dl::xlib::XClientMessageEvent'>XClientMessageEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XClientMessageEvent.html' title='struct x11_dl::xlib::XClientMessageEvent'>XClientMessageEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XColormapEvent.html' title='struct x11_dl::xlib::XColormapEvent'>XColormapEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XColormapEvent.html' title='struct x11_dl::xlib::XColormapEvent'>XColormapEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XColormapEvent.html' title='struct x11_dl::xlib::XColormapEvent'>XColormapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XColormapEvent.html' title='struct x11_dl::xlib::XColormapEvent'>XColormapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XConfigureEvent.html' title='struct x11_dl::xlib::XConfigureEvent'>XConfigureEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XConfigureEvent.html' title='struct x11_dl::xlib::XConfigureEvent'>XConfigureEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XConfigureEvent.html' title='struct x11_dl::xlib::XConfigureEvent'>XConfigureEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XConfigureEvent.html' title='struct x11_dl::xlib::XConfigureEvent'>XConfigureEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XConfigureRequestEvent.html' title='struct x11_dl::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XConfigureRequestEvent.html' title='struct x11_dl::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XConfigureRequestEvent.html' title='struct x11_dl::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XConfigureRequestEvent.html' title='struct x11_dl::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XCreateWindowEvent.html' title='struct x11_dl::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XCreateWindowEvent.html' title='struct x11_dl::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XCreateWindowEvent.html' title='struct x11_dl::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XCreateWindowEvent.html' title='struct x11_dl::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XCrossingEvent.html' title='struct x11_dl::xlib::XCrossingEvent'>XCrossingEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XCrossingEvent.html' title='struct x11_dl::xlib::XCrossingEvent'>XCrossingEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XCrossingEvent.html' title='struct x11_dl::xlib::XCrossingEvent'>XCrossingEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XCrossingEvent.html' title='struct x11_dl::xlib::XCrossingEvent'>XCrossingEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XDestroyWindowEvent.html' title='struct x11_dl::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XDestroyWindowEvent.html' title='struct x11_dl::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XDestroyWindowEvent.html' title='struct x11_dl::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XDestroyWindowEvent.html' title='struct x11_dl::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XErrorEvent.html' title='struct x11_dl::xlib::XErrorEvent'>XErrorEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XErrorEvent.html' title='struct x11_dl::xlib::XErrorEvent'>XErrorEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XErrorEvent.html' title='struct x11_dl::xlib::XErrorEvent'>XErrorEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XErrorEvent.html' title='struct x11_dl::xlib::XErrorEvent'>XErrorEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XExposeEvent.html' title='struct x11_dl::xlib::XExposeEvent'>XExposeEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XExposeEvent.html' title='struct x11_dl::xlib::XExposeEvent'>XExposeEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XExposeEvent.html' title='struct x11_dl::xlib::XExposeEvent'>XExposeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XExposeEvent.html' title='struct x11_dl::xlib::XExposeEvent'>XExposeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XFocusChangeEvent.html' title='struct x11_dl::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XFocusChangeEvent.html' title='struct x11_dl::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XFocusChangeEvent.html' title='struct x11_dl::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XFocusChangeEvent.html' title='struct x11_dl::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XGenericEventCookie.html' title='struct x11_dl::xlib::XGenericEventCookie'>XGenericEventCookie</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XGenericEventCookie.html' title='struct x11_dl::xlib::XGenericEventCookie'>XGenericEventCookie</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XGenericEventCookie.html' title='struct x11_dl::xlib::XGenericEventCookie'>XGenericEventCookie</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XGenericEventCookie.html' title='struct x11_dl::xlib::XGenericEventCookie'>XGenericEventCookie</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XGraphicsExposeEvent.html' title='struct x11_dl::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XGraphicsExposeEvent.html' title='struct x11_dl::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XGraphicsExposeEvent.html' title='struct x11_dl::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XGraphicsExposeEvent.html' title='struct x11_dl::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XGravityEvent.html' title='struct x11_dl::xlib::XGravityEvent'>XGravityEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XGravityEvent.html' title='struct x11_dl::xlib::XGravityEvent'>XGravityEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XGravityEvent.html' title='struct x11_dl::xlib::XGravityEvent'>XGravityEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XGravityEvent.html' title='struct x11_dl::xlib::XGravityEvent'>XGravityEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XKeyEvent.html' title='struct x11_dl::xlib::XKeyEvent'>XKeyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XKeyEvent.html' title='struct x11_dl::xlib::XKeyEvent'>XKeyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XKeyEvent.html' title='struct x11_dl::xlib::XKeyEvent'>XKeyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XKeyEvent.html' title='struct x11_dl::xlib::XKeyEvent'>XKeyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XKeymapEvent.html' title='struct x11_dl::xlib::XKeymapEvent'>XKeymapEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XKeymapEvent.html' title='struct x11_dl::xlib::XKeymapEvent'>XKeymapEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XKeymapEvent.html' title='struct x11_dl::xlib::XKeymapEvent'>XKeymapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XKeymapEvent.html' title='struct x11_dl::xlib::XKeymapEvent'>XKeymapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XMapEvent.html' title='struct x11_dl::xlib::XMapEvent'>XMapEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XMapEvent.html' title='struct x11_dl::xlib::XMapEvent'>XMapEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XMapEvent.html' title='struct x11_dl::xlib::XMapEvent'>XMapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XMapEvent.html' title='struct x11_dl::xlib::XMapEvent'>XMapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XMappingEvent.html' title='struct x11_dl::xlib::XMappingEvent'>XMappingEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XMappingEvent.html' title='struct x11_dl::xlib::XMappingEvent'>XMappingEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XMappingEvent.html' title='struct x11_dl::xlib::XMappingEvent'>XMappingEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XMappingEvent.html' title='struct x11_dl::xlib::XMappingEvent'>XMappingEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XMapRequestEvent.html' title='struct x11_dl::xlib::XMapRequestEvent'>XMapRequestEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XMapRequestEvent.html' title='struct x11_dl::xlib::XMapRequestEvent'>XMapRequestEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XMapRequestEvent.html' title='struct x11_dl::xlib::XMapRequestEvent'>XMapRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XMapRequestEvent.html' title='struct x11_dl::xlib::XMapRequestEvent'>XMapRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XMotionEvent.html' title='struct x11_dl::xlib::XMotionEvent'>XMotionEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XMotionEvent.html' title='struct x11_dl::xlib::XMotionEvent'>XMotionEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XMotionEvent.html' title='struct x11_dl::xlib::XMotionEvent'>XMotionEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XMotionEvent.html' title='struct x11_dl::xlib::XMotionEvent'>XMotionEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XNoExposeEvent.html' title='struct x11_dl::xlib::XNoExposeEvent'>XNoExposeEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XNoExposeEvent.html' title='struct x11_dl::xlib::XNoExposeEvent'>XNoExposeEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XNoExposeEvent.html' title='struct x11_dl::xlib::XNoExposeEvent'>XNoExposeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XNoExposeEvent.html' title='struct x11_dl::xlib::XNoExposeEvent'>XNoExposeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XPropertyEvent.html' title='struct x11_dl::xlib::XPropertyEvent'>XPropertyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XPropertyEvent.html' title='struct x11_dl::xlib::XPropertyEvent'>XPropertyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XPropertyEvent.html' title='struct x11_dl::xlib::XPropertyEvent'>XPropertyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XPropertyEvent.html' title='struct x11_dl::xlib::XPropertyEvent'>XPropertyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XReparentEvent.html' title='struct x11_dl::xlib::XReparentEvent'>XReparentEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XReparentEvent.html' title='struct x11_dl::xlib::XReparentEvent'>XReparentEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XReparentEvent.html' title='struct x11_dl::xlib::XReparentEvent'>XReparentEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XReparentEvent.html' title='struct x11_dl::xlib::XReparentEvent'>XReparentEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XResizeRequestEvent.html' title='struct x11_dl::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XResizeRequestEvent.html' title='struct x11_dl::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XResizeRequestEvent.html' title='struct x11_dl::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XResizeRequestEvent.html' title='struct x11_dl::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XSelectionClearEvent.html' title='struct x11_dl::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XSelectionClearEvent.html' title='struct x11_dl::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XSelectionClearEvent.html' title='struct x11_dl::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XSelectionClearEvent.html' title='struct x11_dl::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XSelectionEvent.html' title='struct x11_dl::xlib::XSelectionEvent'>XSelectionEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XSelectionEvent.html' title='struct x11_dl::xlib::XSelectionEvent'>XSelectionEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XSelectionEvent.html' title='struct x11_dl::xlib::XSelectionEvent'>XSelectionEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XSelectionEvent.html' title='struct x11_dl::xlib::XSelectionEvent'>XSelectionEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XSelectionRequestEvent.html' title='struct x11_dl::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XSelectionRequestEvent.html' title='struct x11_dl::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XSelectionRequestEvent.html' title='struct x11_dl::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XSelectionRequestEvent.html' title='struct x11_dl::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XUnmapEvent.html' title='struct x11_dl::xlib::XUnmapEvent'>XUnmapEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XUnmapEvent.html' title='struct x11_dl::xlib::XUnmapEvent'>XUnmapEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XUnmapEvent.html' title='struct x11_dl::xlib::XUnmapEvent'>XUnmapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XUnmapEvent.html' title='struct x11_dl::xlib::XUnmapEvent'>XUnmapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XVisibilityEvent.html' title='struct x11_dl::xlib::XVisibilityEvent'>XVisibilityEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XVisibilityEvent.html' title='struct x11_dl::xlib::XVisibilityEvent'>XVisibilityEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XVisibilityEvent.html' title='struct x11_dl::xlib::XVisibilityEvent'>XVisibilityEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XVisibilityEvent.html' title='struct x11_dl::xlib::XVisibilityEvent'>XVisibilityEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='type' href='std/os/raw/type.c_schar.html' title='type std::os::raw::c_schar'>c_schar</a><a class='primitive' href='std/primitive.array.html'>; 20]</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.ClientMessageData.html' title='struct x11_dl::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='type' href='std/os/raw/type.c_uchar.html' title='type std::os::raw::c_uchar'>c_uchar</a><a class='primitive' href='std/primitive.array.html'>; 20]</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.ClientMessageData.html' title='struct x11_dl::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='type' href='std/os/raw/type.c_short.html' title='type std::os::raw::c_short'>c_short</a><a class='primitive' href='std/primitive.array.html'>; 10]</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.ClientMessageData.html' title='struct x11_dl::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='type' href='std/os/raw/type.c_ushort.html' title='type std::os::raw::c_ushort'>c_ushort</a><a class='primitive' href='std/primitive.array.html'>; 10]</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.ClientMessageData.html' title='struct x11_dl::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='type' href='std/os/raw/type.c_long.html' title='type std::os::raw::c_long'>c_long</a><a class='primitive' href='std/primitive.array.html'>; 5]</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.ClientMessageData.html' title='struct x11_dl::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='type' href='std/os/raw/type.c_ulong.html' title='type std::os::raw::c_ulong'>c_ulong</a><a class='primitive' href='std/primitive.array.html'>; 5]</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.ClientMessageData.html' title='struct x11_dl::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xf86vmode/struct.XF86VidModeNotifyEvent.html' title='struct x11_dl::xf86vmode::XF86VidModeNotifyEvent'>XF86VidModeNotifyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xf86vmode/struct.XF86VidModeNotifyEvent.html' title='struct x11_dl::xf86vmode::XF86VidModeNotifyEvent'>XF86VidModeNotifyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xf86vmode/struct.XF86VidModeNotifyEvent.html' title='struct x11_dl::xf86vmode::XF86VidModeNotifyEvent'>XF86VidModeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xf86vmode/struct.XF86VidModeNotifyEvent.html' title='struct x11_dl::xf86vmode::XF86VidModeNotifyEvent'>XF86VidModeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xss/struct.XScreenSaverNotifyEvent.html' title='struct x11_dl::xss::XScreenSaverNotifyEvent'>XScreenSaverNotifyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xss/struct.XScreenSaverNotifyEvent.html' title='struct x11_dl::xss::XScreenSaverNotifyEvent'>XScreenSaverNotifyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xss/struct.XScreenSaverNotifyEvent.html' title='struct x11_dl::xss::XScreenSaverNotifyEvent'>XScreenSaverNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xss/struct.XScreenSaverNotifyEvent.html' title='struct x11_dl::xss::XScreenSaverNotifyEvent'>XScreenSaverNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xrandr/struct.XRRScreenChangeNotifyEvent.html' title='struct x11_dl::xrandr::XRRScreenChangeNotifyEvent'>XRRScreenChangeNotifyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xrandr/struct.XRRScreenChangeNotifyEvent.html' title='struct x11_dl::xrandr::XRRScreenChangeNotifyEvent'>XRRScreenChangeNotifyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xrandr/struct.XRRScreenChangeNotifyEvent.html' title='struct x11_dl::xrandr::XRRScreenChangeNotifyEvent'>XRRScreenChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xrandr/struct.XRRScreenChangeNotifyEvent.html' title='struct x11_dl::xrandr::XRRScreenChangeNotifyEvent'>XRRScreenChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xrandr/struct.XRRNotifyEvent.html' title='struct x11_dl::xrandr::XRRNotifyEvent'>XRRNotifyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xrandr/struct.XRRNotifyEvent.html' title='struct x11_dl::xrandr::XRRNotifyEvent'>XRRNotifyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xrandr/struct.XRRNotifyEvent.html' title='struct x11_dl::xrandr::XRRNotifyEvent'>XRRNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xrandr/struct.XRRNotifyEvent.html' title='struct x11_dl::xrandr::XRRNotifyEvent'>XRRNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xrandr/struct.XRROutputChangeNotifyEvent.html' title='struct x11_dl::xrandr::XRROutputChangeNotifyEvent'>XRROutputChangeNotifyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xrandr/struct.XRROutputChangeNotifyEvent.html' title='struct x11_dl::xrandr::XRROutputChangeNotifyEvent'>XRROutputChangeNotifyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xrandr/struct.XRROutputChangeNotifyEvent.html' title='struct x11_dl::xrandr::XRROutputChangeNotifyEvent'>XRROutputChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xrandr/struct.XRROutputChangeNotifyEvent.html' title='struct x11_dl::xrandr::XRROutputChangeNotifyEvent'>XRROutputChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xrandr/struct.XRRCrtcChangeNotifyEvent.html' title='struct x11_dl::xrandr::XRRCrtcChangeNotifyEvent'>XRRCrtcChangeNotifyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xrandr/struct.XRRCrtcChangeNotifyEvent.html' title='struct x11_dl::xrandr::XRRCrtcChangeNotifyEvent'>XRRCrtcChangeNotifyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xrandr/struct.XRRCrtcChangeNotifyEvent.html' title='struct x11_dl::xrandr::XRRCrtcChangeNotifyEvent'>XRRCrtcChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xrandr/struct.XRRCrtcChangeNotifyEvent.html' title='struct x11_dl::xrandr::XRRCrtcChangeNotifyEvent'>XRRCrtcChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xrandr/struct.XRROutputPropertyNotifyEvent.html' title='struct x11_dl::xrandr::XRROutputPropertyNotifyEvent'>XRROutputPropertyNotifyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xrandr/struct.XRROutputPropertyNotifyEvent.html' title='struct x11_dl::xrandr::XRROutputPropertyNotifyEvent'>XRROutputPropertyNotifyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xrandr/struct.XRROutputPropertyNotifyEvent.html' title='struct x11_dl::xrandr::XRROutputPropertyNotifyEvent'>XRROutputPropertyNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xrandr/struct.XRROutputPropertyNotifyEvent.html' title='struct x11_dl::xrandr::XRROutputPropertyNotifyEvent'>XRROutputPropertyNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xrandr/struct.XRRProviderChangeNotifyEvent.html' title='struct x11_dl::xrandr::XRRProviderChangeNotifyEvent'>XRRProviderChangeNotifyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xrandr/struct.XRRProviderChangeNotifyEvent.html' title='struct x11_dl::xrandr::XRRProviderChangeNotifyEvent'>XRRProviderChangeNotifyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xrandr/struct.XRRProviderChangeNotifyEvent.html' title='struct x11_dl::xrandr::XRRProviderChangeNotifyEvent'>XRRProviderChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xrandr/struct.XRRProviderChangeNotifyEvent.html' title='struct x11_dl::xrandr::XRRProviderChangeNotifyEvent'>XRRProviderChangeNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xrandr/struct.XRRProviderPropertyNotifyEvent.html' title='struct x11_dl::xrandr::XRRProviderPropertyNotifyEvent'>XRRProviderPropertyNotifyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xrandr/struct.XRRProviderPropertyNotifyEvent.html' title='struct x11_dl::xrandr::XRRProviderPropertyNotifyEvent'>XRRProviderPropertyNotifyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xrandr/struct.XRRProviderPropertyNotifyEvent.html' title='struct x11_dl::xrandr::XRRProviderPropertyNotifyEvent'>XRRProviderPropertyNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xrandr/struct.XRRProviderPropertyNotifyEvent.html' title='struct x11_dl::xrandr::XRRProviderPropertyNotifyEvent'>XRRProviderPropertyNotifyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xrandr/struct.XRRResourceChangeNotifyEvent.html' title='struct x11_dl::xrandr::XRRResourceChangeNotifyEvent'>XRRResourceChangeNotifyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xrandr/struct.XRRResourceChangeNotifyEvent.html' title='struct x11_dl::xrandr::XRRResourceChangeNotifyEvent'>XRRResourceChangeNotifyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xrandr/struct.XRRResourceChangeNotifyEvent.html' title='struct x11_dl::xrandr::XRRResourceChangeNotifyEvent'>XRRResourceChangeNotifyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='struct x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xrandr/struct.XRRResourceChangeNotifyEvent.html' title='struct x11_dl::xrandr::XRRResourceChangeNotifyEvent'>XRRResourceChangeNotifyEvent</a>",];
implementors["xml5ever"] = ["impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='struct unicase::UniCase'>UniCase</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for <a class='struct' href='serde/bytes/struct.Bytes.html' title='struct serde::bytes::Bytes'>Bytes</a>&lt;'a&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;&gt; for <a class='struct' href='serde/bytes/struct.Bytes.html' title='struct serde::bytes::Bytes'>Bytes</a>&lt;'a&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;&gt; for <a class='struct' href='serde/bytes/bytebuf/struct.ByteBuf.html' title='struct serde::bytes::bytebuf::ByteBuf'>ByteBuf</a>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a></span>","impl&lt;'a, E&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt; <span class='where fmt-newline'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='trait core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='trait core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='trait std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='struct std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='struct std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='struct std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt;","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='struct std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='std/io/error/enum.ErrorKind.html' title='enum std::io::error::ErrorKind'>ErrorKind</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='struct std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='struct std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>&gt; for <a class='primitive' href='std/primitive.u128.html'>u128</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u128.html'>u128</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='struct std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.array.html'>; 8]</a>&gt; for <a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV4.html' title='struct std::net::addr::SocketAddrV4'>SocketAddrV4</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/net/addr/struct.SocketAddrV6.html' title='struct std::net::addr::SocketAddrV6'>SocketAddrV6</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a>","impl&lt;I&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>I, <a class='primitive' href='std/primitive.u16.html'>u16</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='std/net/addr/enum.SocketAddr.html' title='enum std::net::addr::SocketAddr'>SocketAddr</a> <span class='where fmt-newline'>where I: <a class='trait' href='core/convert/trait.Into.html' title='trait core::convert::Into'>Into</a>&lt;<a class='enum' href='std/net/ip/enum.IpAddr.html' title='enum std::net::ip::IpAddr'>IpAddr</a>&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a> <span class='where fmt-newline'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='trait core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='struct std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='trait core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='struct std::ffi::os_str::OsString'>OsString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='struct std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='struct' href='std/path/struct.Path.html' title='struct std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='struct std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='enum std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;F, A&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='tendril/tendril/struct.Tendril.html' title='struct tendril::tendril::Tendril'>Tendril</a>&lt;F, A&gt;&gt; for <a class='struct' href='tendril/tendril/struct.SendTendril.html' title='struct tendril::tendril::SendTendril'>SendTendril</a>&lt;F&gt; <span class='where fmt-newline'>where A: <a class='trait' href='tendril/tendril/trait.Atomicity.html' title='trait tendril::tendril::Atomicity'>Atomicity</a>, F: <a class='trait' href='tendril/fmt/trait.Format.html' title='trait tendril::fmt::Format'>Format</a></span>","impl&lt;F, A&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='tendril/tendril/struct.SendTendril.html' title='struct tendril::tendril::SendTendril'>SendTendril</a>&lt;F&gt;&gt; for <a class='struct' href='tendril/tendril/struct.Tendril.html' title='struct tendril::tendril::Tendril'>Tendril</a>&lt;F, A&gt; <span class='where fmt-newline'>where A: <a class='trait' href='tendril/tendril/trait.Atomicity.html' title='trait tendril::tendril::Atomicity'>Atomicity</a>, F: <a class='trait' href='tendril/fmt/trait.Format.html' title='trait tendril::fmt::Format'>Format</a></span>","impl&lt;'a, F, A&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a F::<a class='trait' href='tendril/fmt/trait.SliceFormat.html' title='trait tendril::fmt::SliceFormat'>Slice</a>&gt; for <a class='struct' href='tendril/tendril/struct.Tendril.html' title='struct tendril::tendril::Tendril'>Tendril</a>&lt;F, A&gt; <span class='where fmt-newline'>where A: <a class='trait' href='tendril/tendril/trait.Atomicity.html' title='trait tendril::tendril::Atomicity'>Atomicity</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;F: <a class='trait' href='tendril/fmt/trait.SliceFormat.html' title='trait tendril::fmt::SliceFormat'>SliceFormat</a></span>","impl&lt;A&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='tendril/tendril/struct.Tendril.html' title='struct tendril::tendril::Tendril'>Tendril</a>&lt;<a class='struct' href='tendril/fmt/struct.UTF8.html' title='struct tendril::fmt::UTF8'>UTF8</a>, A&gt; <span class='where fmt-newline'>where A: <a class='trait' href='tendril/tendril/trait.Atomicity.html' title='trait tendril::tendril::Atomicity'>Atomicity</a></span>","impl&lt;A&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='tendril/tendril/struct.Tendril.html' title='struct tendril::tendril::Tendril'>Tendril</a>&lt;<a class='struct' href='tendril/fmt/struct.UTF8.html' title='struct tendril::fmt::UTF8'>UTF8</a>, A&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a> <span class='where fmt-newline'>where A: <a class='trait' href='tendril/tendril/trait.Atomicity.html' title='trait tendril::tendril::Atomicity'>Atomicity</a></span>","impl&lt;'a, A&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='tendril/tendril/struct.Tendril.html' title='struct tendril::tendril::Tendril'>Tendril</a>&lt;<a class='struct' href='tendril/fmt/struct.UTF8.html' title='struct tendril::fmt::UTF8'>UTF8</a>, A&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a> <span class='where fmt-newline'>where A: <a class='trait' href='tendril/tendril/trait.Atomicity.html' title='trait tendril::tendril::Atomicity'>Atomicity</a></span>","impl&lt;'a, Static&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='string_cache/atom/struct.Atom.html' title='struct string_cache::atom::Atom'>Atom</a>&lt;Static&gt; <span class='where fmt-newline'>where Static: <a class='trait' href='string_cache/atom/trait.StaticAtomSet.html' title='trait string_cache::atom::StaticAtomSet'>StaticAtomSet</a></span>","impl&lt;'a, Static&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='string_cache/atom/struct.Atom.html' title='struct string_cache::atom::Atom'>Atom</a>&lt;Static&gt; <span class='where fmt-newline'>where Static: <a class='trait' href='string_cache/atom/trait.StaticAtomSet.html' title='trait string_cache::atom::StaticAtomSet'>StaticAtomSet</a></span>","impl&lt;Static&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='string_cache/atom/struct.Atom.html' title='struct string_cache::atom::Atom'>Atom</a>&lt;Static&gt; <span class='where fmt-newline'>where Static: <a class='trait' href='string_cache/atom/trait.StaticAtomSet.html' title='trait string_cache::atom::StaticAtomSet'>StaticAtomSet</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/marker/trait.Copy.html' title='trait core::marker::Copy'>Copy</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='struct alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='struct alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='trait core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='struct collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='struct collections::string::String'>String</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where fmt-newline'>where <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>: <a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>ToOwned</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>::<a class='trait' href='collections/borrow/trait.ToOwned.html' title='trait collections::borrow::ToOwned'>Owned</a> == <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;</span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;'a, T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='enum collections::borrow::Cow'>Cow</a>&lt;'a, <a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where fmt-newline'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='trait core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='trait core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='struct collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='struct collections::vec::Vec'>Vec</a>&lt;T&gt;",];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
