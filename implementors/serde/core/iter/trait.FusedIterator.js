(function() {var implementors = {};
implementors["serde"] = ["impl&lt;I&gt; <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="alloc/boxed/struct.Box.html" title="struct alloc::boxed::Box">Box</a>&lt;I&gt; <span class="where fmt-newline">where I: <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> + ?<a class="trait" href="serde/core/marker/trait.Sized.html" title="trait serde::core::marker::Sized">Sized</a></span>","impl&lt;I&gt; <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="std_unicode/u_str/struct.Utf16Encoder.html" title="struct std_unicode::u_str::Utf16Encoder">Utf16Encoder</a>&lt;I&gt; <span class="where fmt-newline">where I: <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a>&lt;Item=<a class="primitive" href="std/primitive.char.html">char</a>&gt;</span>","impl&lt;'a&gt; <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="serde/core/str/struct.SplitWhitespace.html" title="struct serde::core::str::SplitWhitespace">SplitWhitespace</a>&lt;'a&gt;","impl <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="serde/core/char/struct.ToLowercase.html" title="struct serde::core::char::ToLowercase">ToLowercase</a>","impl <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="serde/core/char/struct.ToUppercase.html" title="struct serde::core::char::ToUppercase">ToUppercase</a>","impl <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="std/ascii/struct.EscapeDefault.html" title="struct std::ascii::EscapeDefault">EscapeDefault</a>","impl&lt;'a, K, V&gt; <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="std/collections/hash/map/struct.Iter.html" title="struct std::collections::hash::map::Iter">Iter</a>&lt;'a, K, V&gt;","impl&lt;'a, K, V&gt; <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="std/collections/hash/map/struct.IterMut.html" title="struct std::collections::hash::map::IterMut">IterMut</a>&lt;'a, K, V&gt;","impl&lt;K, V&gt; <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="std/collections/hash/map/struct.IntoIter.html" title="struct std::collections::hash::map::IntoIter">IntoIter</a>&lt;K, V&gt;","impl&lt;'a, K, V&gt; <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="std/collections/hash/map/struct.Keys.html" title="struct std::collections::hash::map::Keys">Keys</a>&lt;'a, K, V&gt;","impl&lt;'a, K, V&gt; <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="std/collections/hash/map/struct.Values.html" title="struct std::collections::hash::map::Values">Values</a>&lt;'a, K, V&gt;","impl&lt;'a, K, V&gt; <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="std/collections/hash/map/struct.ValuesMut.html" title="struct std::collections::hash::map::ValuesMut">ValuesMut</a>&lt;'a, K, V&gt;","impl&lt;'a, K, V&gt; <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="std/collections/hash/map/struct.Drain.html" title="struct std::collections::hash::map::Drain">Drain</a>&lt;'a, K, V&gt;","impl&lt;'a, K&gt; <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="std/collections/hash/set/struct.Iter.html" title="struct std::collections::hash::set::Iter">Iter</a>&lt;'a, K&gt;","impl&lt;K&gt; <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="std/collections/hash/set/struct.IntoIter.html" title="struct std::collections::hash::set::IntoIter">IntoIter</a>&lt;K&gt;","impl&lt;'a, K&gt; <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="std/collections/hash/set/struct.Drain.html" title="struct std::collections::hash::set::Drain">Drain</a>&lt;'a, K&gt;","impl&lt;'a, T, S&gt; <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="std/collections/hash/set/struct.Intersection.html" title="struct std::collections::hash::set::Intersection">Intersection</a>&lt;'a, T, S&gt; <span class="where fmt-newline">where S: <a class="trait" href="serde/core/hash/trait.BuildHasher.html" title="trait serde::core::hash::BuildHasher">BuildHasher</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T: <a class="trait" href="serde/core/cmp/trait.Eq.html" title="trait serde::core::cmp::Eq">Eq</a> + <a class="trait" href="serde/core/hash/trait.Hash.html" title="trait serde::core::hash::Hash">Hash</a></span>","impl&lt;'a, T, S&gt; <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="std/collections/hash/set/struct.Difference.html" title="struct std::collections::hash::set::Difference">Difference</a>&lt;'a, T, S&gt; <span class="where fmt-newline">where S: <a class="trait" href="serde/core/hash/trait.BuildHasher.html" title="trait serde::core::hash::BuildHasher">BuildHasher</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T: <a class="trait" href="serde/core/cmp/trait.Eq.html" title="trait serde::core::cmp::Eq">Eq</a> + <a class="trait" href="serde/core/hash/trait.Hash.html" title="trait serde::core::hash::Hash">Hash</a></span>","impl&lt;'a, T, S&gt; <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="std/collections/hash/set/struct.SymmetricDifference.html" title="struct std::collections::hash::set::SymmetricDifference">SymmetricDifference</a>&lt;'a, T, S&gt; <span class="where fmt-newline">where S: <a class="trait" href="serde/core/hash/trait.BuildHasher.html" title="trait serde::core::hash::BuildHasher">BuildHasher</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T: <a class="trait" href="serde/core/cmp/trait.Eq.html" title="trait serde::core::cmp::Eq">Eq</a> + <a class="trait" href="serde/core/hash/trait.Hash.html" title="trait serde::core::hash::Hash">Hash</a></span>","impl&lt;'a, T, S&gt; <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="std/collections/hash/set/struct.Union.html" title="struct std::collections::hash::set::Union">Union</a>&lt;'a, T, S&gt; <span class="where fmt-newline">where S: <a class="trait" href="serde/core/hash/trait.BuildHasher.html" title="trait serde::core::hash::BuildHasher">BuildHasher</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T: <a class="trait" href="serde/core/cmp/trait.Eq.html" title="trait serde::core::cmp::Eq">Eq</a> + <a class="trait" href="serde/core/hash/trait.Hash.html" title="trait serde::core::hash::Hash">Hash</a></span>","impl&lt;'a&gt; <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="std/path/struct.Iter.html" title="struct std::path::Iter">Iter</a>&lt;'a&gt;","impl&lt;'a&gt; <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="std/path/struct.Components.html" title="struct std::path::Components">Components</a>&lt;'a&gt;","impl&lt;'a, T&gt; <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="collections/binary_heap/struct.Iter.html" title="struct collections::binary_heap::Iter">Iter</a>&lt;'a, T&gt;","impl&lt;T&gt; <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="collections/binary_heap/struct.IntoIter.html" title="struct collections::binary_heap::IntoIter">IntoIter</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="collections/binary_heap/struct.Drain.html" title="struct collections::binary_heap::Drain">Drain</a>&lt;'a, T&gt; <span class="where fmt-newline">where T: 'a</span>","impl&lt;'a, K, V&gt; <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="collections/btree/map/struct.Iter.html" title="struct collections::btree::map::Iter">Iter</a>&lt;'a, K, V&gt;","impl&lt;'a, K, V&gt; <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="collections/btree/map/struct.IterMut.html" title="struct collections::btree::map::IterMut">IterMut</a>&lt;'a, K, V&gt;","impl&lt;K, V&gt; <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="collections/btree/map/struct.IntoIter.html" title="struct collections::btree::map::IntoIter">IntoIter</a>&lt;K, V&gt;","impl&lt;'a, K, V&gt; <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="collections/btree/map/struct.Keys.html" title="struct collections::btree::map::Keys">Keys</a>&lt;'a, K, V&gt;","impl&lt;'a, K, V&gt; <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="collections/btree/map/struct.Values.html" title="struct collections::btree::map::Values">Values</a>&lt;'a, K, V&gt;","impl&lt;'a, K, V&gt; <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="collections/btree/map/struct.ValuesMut.html" title="struct collections::btree::map::ValuesMut">ValuesMut</a>&lt;'a, K, V&gt;","impl&lt;'a, K, V&gt; <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="collections/btree/map/struct.Range.html" title="struct collections::btree::map::Range">Range</a>&lt;'a, K, V&gt;","impl&lt;'a, K, V&gt; <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="collections/btree/map/struct.RangeMut.html" title="struct collections::btree::map::RangeMut">RangeMut</a>&lt;'a, K, V&gt;","impl&lt;'a, T&gt; <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="collections/btree/set/struct.Iter.html" title="struct collections::btree::set::Iter">Iter</a>&lt;'a, T&gt;","impl&lt;T&gt; <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="collections/btree/set/struct.IntoIter.html" title="struct collections::btree::set::IntoIter">IntoIter</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="collections/btree/set/struct.Range.html" title="struct collections::btree::set::Range">Range</a>&lt;'a, T&gt;","impl&lt;'a, T&gt; <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="collections/btree/set/struct.Difference.html" title="struct collections::btree::set::Difference">Difference</a>&lt;'a, T&gt; <span class="where fmt-newline">where T: <a class="trait" href="serde/core/cmp/trait.Ord.html" title="trait serde::core::cmp::Ord">Ord</a></span>","impl&lt;'a, T&gt; <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="collections/btree/set/struct.SymmetricDifference.html" title="struct collections::btree::set::SymmetricDifference">SymmetricDifference</a>&lt;'a, T&gt; <span class="where fmt-newline">where T: <a class="trait" href="serde/core/cmp/trait.Ord.html" title="trait serde::core::cmp::Ord">Ord</a></span>","impl&lt;'a, T&gt; <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="collections/btree/set/struct.Intersection.html" title="struct collections::btree::set::Intersection">Intersection</a>&lt;'a, T&gt; <span class="where fmt-newline">where T: <a class="trait" href="serde/core/cmp/trait.Ord.html" title="trait serde::core::cmp::Ord">Ord</a></span>","impl&lt;'a, T&gt; <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="collections/btree/set/struct.Union.html" title="struct collections::btree::set::Union">Union</a>&lt;'a, T&gt; <span class="where fmt-newline">where T: <a class="trait" href="serde/core/cmp/trait.Ord.html" title="trait serde::core::cmp::Ord">Ord</a></span>","impl&lt;E&gt; <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="collections/enum_set/struct.Iter.html" title="struct collections::enum_set::Iter">Iter</a>&lt;E&gt; <span class="where fmt-newline">where E: <a class="trait" href="collections/enum_set/trait.CLike.html" title="trait collections::enum_set::CLike">CLike</a></span>","impl&lt;'a, T&gt; <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="collections/linked_list/struct.Iter.html" title="struct collections::linked_list::Iter">Iter</a>&lt;'a, T&gt;","impl&lt;'a, T&gt; <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="collections/linked_list/struct.IterMut.html" title="struct collections::linked_list::IterMut">IterMut</a>&lt;'a, T&gt;","impl&lt;T&gt; <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="collections/linked_list/struct.IntoIter.html" title="struct collections::linked_list::IntoIter">IntoIter</a>&lt;T&gt;","impl&lt;'a&gt; <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="serde/core/str/struct.EncodeUtf16.html" title="struct serde::core::str::EncodeUtf16">EncodeUtf16</a>&lt;'a&gt;","impl&lt;'a&gt; <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="collections/string/struct.Drain.html" title="struct collections::string::Drain">Drain</a>&lt;'a&gt;","impl&lt;T&gt; <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="collections/vec/struct.IntoIter.html" title="struct collections::vec::IntoIter">IntoIter</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="collections/vec/struct.Drain.html" title="struct collections::vec::Drain">Drain</a>&lt;'a, T&gt;","impl&lt;'a, T&gt; <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="collections/vec_deque/struct.Iter.html" title="struct collections::vec_deque::Iter">Iter</a>&lt;'a, T&gt;","impl&lt;'a, T&gt; <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="collections/vec_deque/struct.IterMut.html" title="struct collections::vec_deque::IterMut">IterMut</a>&lt;'a, T&gt;","impl&lt;T&gt; <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="collections/vec_deque/struct.IntoIter.html" title="struct collections::vec_deque::IntoIter">IntoIter</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class="trait" href="serde/core/iter/trait.FusedIterator.html" title="trait serde::core::iter::FusedIterator">FusedIterator</a> for <a class="struct" href="collections/vec_deque/struct.Drain.html" title="struct collections::vec_deque::Drain">Drain</a>&lt;'a, T&gt; <span class="where fmt-newline">where T: 'a</span>",];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
