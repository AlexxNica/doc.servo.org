(function() {var implementors = {};
implementors["mio"] = ["impl <a class='trait' href='mio/io/trait.Read.html' title='trait mio::io::Read'>Read</a> for <a class='struct' href='bytes/buf/ring/struct.RingBuf.html' title='struct bytes::buf::ring::RingBuf'>RingBuf</a>","impl&lt;T&gt; <a class='trait' href='mio/io/trait.Read.html' title='trait mio::io::Read'>Read</a> for <a class='struct' href='bytes/buf/take/struct.Take.html' title='struct bytes::buf::take::Take'>Take</a>&lt;T&gt; <span class='where fmt-newline'>where T: <a class='trait' href='bytes/buf/trait.Buf.html' title='trait bytes::buf::Buf'>Buf</a></span>","impl <a class='trait' href='mio/io/trait.Read.html' title='trait mio::io::Read'>Read</a> for <a class='struct' href='bytes/buf/byte/struct.ByteBuf.html' title='struct bytes::buf::byte::ByteBuf'>ByteBuf</a>","impl <a class='trait' href='mio/io/trait.Read.html' title='trait mio::io::Read'>Read</a> for <a class='struct' href='bytes/buf/byte/struct.ROByteBuf.html' title='struct bytes::buf::byte::ROByteBuf'>ROByteBuf</a>","impl <a class='trait' href='mio/io/trait.Read.html' title='trait mio::io::Read'>Read</a> for <a class='struct' href='bytes/str/rope/struct.RopeBuf.html' title='struct bytes::str::rope::RopeBuf'>RopeBuf</a>","impl <a class='trait' href='mio/io/trait.Read.html' title='trait mio::io::Read'>Read</a> for <a class='struct' href='alloc/boxed/struct.Box.html' title='struct alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='bytes/buf/trait.Buf.html' title='trait bytes::buf::Buf'>Buf</a> + 'static&gt;","impl <a class='trait' href='mio/io/trait.Read.html' title='trait mio::io::Read'>Read</a> for <a class='struct' href='mio/net/tcp/struct.TcpStream.html' title='struct mio::net::tcp::TcpStream'>TcpStream</a>","impl <a class='trait' href='mio/io/trait.Read.html' title='trait mio::io::Read'>Read</a> for <a class='struct' href='mio/net/unix/struct.UnixStream.html' title='struct mio::net::unix::UnixStream'>UnixStream</a>","impl <a class='trait' href='mio/io/trait.Read.html' title='trait mio::io::Read'>Read</a> for <a class='struct' href='mio/net/unix/struct.PipeReader.html' title='struct mio::net::unix::PipeReader'>PipeReader</a>","impl&lt;'a&gt; <a class='trait' href='mio/io/trait.Read.html' title='trait mio::io::Read'>Read</a> for &amp;'a <a class='struct' href='mio/net/unix/struct.PipeReader.html' title='struct mio::net::unix::PipeReader'>PipeReader</a>","impl <a class='trait' href='mio/io/trait.Read.html' title='trait mio::io::Read'>Read</a> for <a class='struct' href='mio/struct.Io.html' title='struct mio::Io'>Io</a>","impl&lt;'a&gt; <a class='trait' href='mio/io/trait.Read.html' title='trait mio::io::Read'>Read</a> for &amp;'a <a class='struct' href='mio/struct.Io.html' title='struct mio::Io'>Io</a>","impl <a class='trait' href='mio/io/trait.Read.html' title='trait mio::io::Read'>Read</a> for <a class='struct' href='mio/sys/unix/tcp/struct.TcpStream.html' title='struct mio::sys::unix::tcp::TcpStream'>TcpStream</a>","impl <a class='trait' href='mio/io/trait.Read.html' title='trait mio::io::Read'>Read</a> for <a class='struct' href='mio/sys/unix/uds/struct.UnixSocket.html' title='struct mio::sys::unix::uds::UnixSocket'>UnixSocket</a>",];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
