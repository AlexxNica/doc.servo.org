initSidebarItems({"enum":[["TraitBoundModifier","A modifier on a bound, currently this is only used for `?Sized`, where the modifier is `Maybe`. Negative bounds should also be handled here."],["TyParamBound","The AST represents all type param bounds as types. `typeck::collect::compute_bounds` matches these against the \"special\" built-in traits (see `middle::lang_items`) and detects Copy, Send and Sync."],["WherePredicate","A single predicate in a `where` clause"]],"mod":[["parsing",""]],"struct":[["Generics","Represents lifetimes and type parameters attached to a declaration of a function, enum, trait, etc."],["ImplGenerics","Returned by `Generics::split_for_impl`."],["Lifetime",""],["LifetimeDef","A lifetime definition, e.g. `'a: 'b+'c+'d`"],["TyGenerics","Returned by `Generics::split_for_impl`."],["TyParam",""],["WhereBoundPredicate","A type bound."],["WhereClause","A `where` clause in a definition"],["WhereRegionPredicate","A lifetime predicate."]]});