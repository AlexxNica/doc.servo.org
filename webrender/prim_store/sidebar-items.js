initSidebarItems({"constant":[["CLIP_DATA_GPU_SIZE",""],["MASK_DATA_GPU_SIZE",""]],"enum":[["GradientType",""],["ImagePrimitiveKind",""],["PrimitiveCacheKey",""],["PrimitiveContainer",""],["PrimitiveKind",""]],"struct":[["BorderPrimitiveCpu",""],["BorderPrimitiveGpu",""],["BoxShadowPrimitiveCacheKey",""],["BoxShadowPrimitiveGpu",""],["ClipCorner",""],["ClipData",""],["ClipRect",""],["DeferredResolve","For external images, it's not possible to know the UV coords of the image (or the image data itself) until the render thread receives the frame and issues callbacks to the client application. For external images that are visible, a DeferredResolve is created that is stored in the frame. This allows the render thread to iterate this list and update any changed texture data and update the UV rect."],["GlyphPrimitive",""],["GpuBlock128",""],["GpuBlock16",""],["GpuBlock32",""],["GpuBlock64",""],["GradientPrimitiveCpu",""],["GradientPrimitiveGpu",""],["GradientStop",""],["ImageMaskData",""],["ImagePrimitiveCpu",""],["ImagePrimitiveGpu",""],["InstanceRect",""],["PrimitiveGeometry","Geometry description for simple rectangular primitives, uploaded to the GPU."],["PrimitiveIndex",""],["PrimitiveMetadata",""],["PrimitiveStore",""],["RadialGradientPrimitiveCpu",""],["RadialGradientPrimitiveGpu",""],["RectanglePrimitive",""],["SpecificPrimitiveIndex",""],["TexelRect","Stores two coordinates in texel space. The coordinates are stored in texel coordinates because the texture atlas may grow. Storing them as texel coords and normalizing the UVs in the vertex shader means nothing needs to be updated on the CPU when the texture size changes."],["TextRunPrimitiveCpu",""],["TextRunPrimitiveGpu",""],["YuvImagePrimitiveCpu",""],["YuvImagePrimitiveGpu",""]],"trait":[["InsideTest",""]]});