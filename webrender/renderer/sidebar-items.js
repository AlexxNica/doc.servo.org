initSidebarItems({"constant":[["CLIP_FEATURE",""],["GPU_DATA_TEXTURE_POOL",""],["GPU_TAG_BLUR",""],["GPU_TAG_CACHE_BOX_SHADOW",""],["GPU_TAG_CACHE_CLIP",""],["GPU_TAG_CACHE_TEXT_RUN",""],["GPU_TAG_INIT",""],["GPU_TAG_PRIM_ANGLE_GRADIENT",""],["GPU_TAG_PRIM_BLEND",""],["GPU_TAG_PRIM_BORDER",""],["GPU_TAG_PRIM_BOX_SHADOW",""],["GPU_TAG_PRIM_CACHE_IMAGE",""],["GPU_TAG_PRIM_COMPOSITE",""],["GPU_TAG_PRIM_GRADIENT",""],["GPU_TAG_PRIM_IMAGE",""],["GPU_TAG_PRIM_RADIAL_GRADIENT",""],["GPU_TAG_PRIM_RECT",""],["GPU_TAG_PRIM_TEXT_RUN",""],["GPU_TAG_PRIM_YUV_IMAGE",""],["GPU_TAG_SETUP_TARGET",""],["MAX_VERTEX_TEXTURE_WIDTH",""],["SUBPIXEL_AA_FEATURE",""],["TRANSFORM_FEATURE",""]],"enum":[["BlendMode",""],["ExternalImageSource",""],["InitError",""],["ShaderKind",""]],"fn":[["_get_ubo_max_len",""],["create_clip_shader",""],["create_prim_shader",""]],"struct":[["ExternalImage","The data that an external client should provide about an external image. The timestamp is used to test if the renderer should upload new texture data this frame. For instance, if providing video frames, the application could call wr.render() whenever a new video frame is ready. If the callback increments the returned timestamp for a given image, the renderer will know to re-upload the image data to the GPU. Note that the UV coords are supplied in texel-space!"],["FileWatcher",""],["GpuDataTexture",""],["GpuDataTextures",""],["GradientDataTextureLayout",""],["LazilyCompiledShader",""],["PrimitiveShader",""],["Renderer","The renderer is responsible for submitting to the GPU the work prepared by the RenderBackend."],["RendererOptions",""],["VertexDataTextureLayout",""]],"trait":[["ExternalImageHandler","The interfaces that an application can implement to support providing external image buffers. When the the application passes an external image to WR, it should kepp that external image life time untile the release() call."]],"type":[["GradientDataStore",""],["GradientDataTexture",""],["VertexDataStore",""],["VertexDataTexture",""]]});